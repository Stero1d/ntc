{"version":3,"sources":["components/ui/svgIcons/svgIcons.js","utils/fetchHelper.js","utils/utils.js","constants/language/InterfaceBuilder_Ru.js","constants/language/InterfaceBuilder_En.js","constants/language/InterfaceBuilder_De.js","utils/translate/Translate.js","components/ui/menuNavigation/MenuNavigation.js","components/ui/dialog/Dialog.js","components/ui/user/User.js","components/scenes/registration/Registration.js","components/scenes/auth/Auth.js","redux/reducers/components/auth.jsx","redux/reducers/components/registration.jsx","redux/reducers/components/user.jsx","redux/reducers/components/settings.jsx","redux/reducers/components/setup.jsx","redux/reducers/components/articles.jsx","redux/reducers/components/infoArticle.jsx","redux/reducers/components/events.jsx","redux/reducers/components/about.jsx","redux/reducers/components/warningDialog.jsx","redux/reducers/components/articlePublishing.jsx","redux/reducers/components/library.jsx","redux/reducers/components/feedBack.jsx","redux/reducers/components/myPublications.jsx","redux/reducers/components/imagePreview.jsx","redux/reducers/components/activities.jsx","redux/reducers/components/administration.jsx","redux/reducers/components/subjects.jsx","redux/reducers/components/userInfoCard.jsx","redux/reducers/components/infoEvent.jsx","redux/reducers/components/calendarDatePicker.jsx","redux/reducers/index.js","redux/ReduxStore.js","history.js","redux/constant/UIConst.js","components/workspace/blocks/headerUser/HeaderUser.js","redux/constant/OtherConstants.js","components/header/Header.js","components/footer/Footer.js","components/ui/eventList/EventList.js","components/workspace/blocks/events/Events.js","components/ui/subscription/Subscription.js","components/ui/authorView/AuthorView.js","components/ui/article/Article.js","components/ui/mobileArticle/MobileArticle.js","components/workspace/blocks/viewArticles/ViewArticles.js","components/workspace/panels/mainRoot/MainRoot.js","components/workspace/blocks/listMenu/ListMenu.js","components/workspace/panels/about/About.js","components/workspace/panels/library/Library.js","components/workspace/blocks/listUsers/ListUsers.js","components/ui/userInfoCard/UserInfoCard.js","components/workspace/blocks/userInfoCard/UserInfoCard.js","components/workspace/blocks/infoEvent/InfoEvent.js","components/workspace/panels/activities/Activities.js","components/workspace/blocks/personalData/PersonalData.js","components/workspace/panels/setup/Setup.js","components/workspace/blocks/previewArticle/PreviewArticle.js","components/ui/comment/Comment.js","components/workspace/blocks/comments/Comments.js","components/workspace/panels/infoArticle/InfoArticle.js","components/ui/listTitleText/ListTitleText.js","components/ui/editor/Editor.js","components/workspace/blocks/createArticle/CreateArticle.js","components/workspace/panels/articlePublishing/ArticlePublishing.js","components/workspace/panels/myPublications/MyPublications.js","components/ui/dateTimePicker/calendar/CalendarDatePicker.js","components/ui/dateTimePicker/CustomDateTimePicker.js","components/workspace/blocks/createEvent/CreateEvent.js","components/ui/pagination/PaginationComponent.js","components/ui/table/Table.js","components/workspace/panels/administration/Administration.js","components/workspace/WorkSpaceRouting.js","components/scenes/main/Main.js","App.js","index.js"],"names":["CloseIcon","props","react_default","a","createElement","fill","height","viewBox","width","xmlns","d","UserPhoto","fill-opacity","Menu","Search","Add","Calendar","Object","assign","fetchData","api","data","functionReducer","axios","method","url","window","location","origin","headers","Content-Type","then","response","setTimeout","catch","error","errorMessage","message","regAuthUser","isReg","uploadFile","file","formData","FormData","append","post","DaysOfMonth","year","month","Date","prototype","daysInMonth","getDate","FormateDate","oldDate","isDisabledTime","options","day","hour","minute","toLocaleString","replace","ConvertBase64File","callback","reader","FileReader","addEventListener","convertCallback","e","target","result","removeEventListener","readAsDataURL","getLang","lang","navigator","language","userLanguage","split","toUpperCase","isAutoFocusMobile","isFocused","body","document","offsetWidth","sortField","direction","sortOrder","substr","b","c","TranslateInterface_Ru","header","key","text","value","feedBack","link","dialog","title","theme","label","placeholder","description","btn","menuNavigation","home","about","activities","library","my_publications","authorization","signUp","signIn","account","auth","text_1","text_2","text_3","reg","registrationTitle","successRegistration","errorRegistration","backPortal","authTitle","fio","email","password","registrationText","link_1","link_2","socialRegistration","user","published","profileMenu","settings","administration","signOut","search","mobileMenu","exit","leftPanel","newArticles","name","popularArticles","readNext","rightPanel","linkTitle","subscription","btnLabel","setup","leftMenu","personalData","rank","birthday","number","optionsMonth","achievements","city","avatar","photo","notPhoto","download","delete","btnSave","field","tabs","mission","preamble","aim","specifications","information","content","p","className","ol","br","ul","members","formsActivities","contacts","events","codex","communityMembers","userInfoCard","article","textBlock","list","our_publications","articlePublishing","createArticle","create","edit","fullScreen","collapse","saveAs","fields","nameArticle","required","subject","annotation","upLoadFile","changeFile","deleteFile","textFile","textArticle","keyWords","actions","preview","closePreview","submit","cancel","publishing_rules","rules","aboutModeration","infoArticle","moreArticles","comments","allComments","reply","send","all_my_publications","draft","review","archive","declined","status","menu","users","articles","table","style","type","dataRegistration","dataCreate","dateCreate","datePublication","notFoundData","active","locked","deleted","other","requestUser","requestArticle","unlocked","buttons","confirm","reject","createEvent","publishDate","caption","save","footer","array","newArtciles","tab","popularArtciles","ourPublications","OtherPublications","textNoData","TranslateInterface_En","introduction","goals","otherPublications","TranslateInterface_De","TranslateInterface","languageInterface","MenuNavigation","activeButton","page","_this","this","length","map","item","index","keys","concat","onClick","_this$props","_this$props$activeBut","exitName","id","renderMenuButtons","React","PureComponent","Dialog","_this$props$title","_this$props$content","_this$props$actions","_this$props$className","isOpen","isIconClose","close","Modal","open","closeOnEscape","closeOnDimmerClick","onClose","Header","Content","Actions","svgIcons_CloseIcon","User","avatar_id","imgAvatar","Icon","background","border","date","getAvatar","Registration","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","state","viewPassword","login","check","_this2","registration","onRegAuth","handleTextFieldKeyDown","isOpenSignWindow","isOpenRegWindow","_this$state","isDisabled","checkValidation","objReg","Input","autoFocus","onKeyDown","onChange","onChageRegistration","currentTarget","Button","disabled","Component","Auth","defineProperty","objAuth","onChangeAuth","initState","isCheckedAuth","isError","params","tabLeftMenu","avatarId","newAvatar","tabLeftAbout","subjectId","imageId","subjects","isFullScreenEditor","tabLeftLibrary","other_publications","tabLeftActivities","tabLeftAdministration","isCheckDate","textError","combineReducers","arguments","undefined","action","payload","objectSpread","isPending","isFailure","profile","tabMenu","_ref","block","_objectSpread7","listUsers","newSubjects","i","element","push","articleEdit","myPublications","warningDialog","imagePreview","newUsersSort","reviewSort","dateSort","sort","newEvent","isNewEvent","userInfo","infoEvent","event","calendarDatePicker","preloadedState","ReduxStore","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","history","createHistory","_push","_goBack","goBack","pagesWithConfirmation","callTheNotify","move","pathArray","pathname","lastPointInThePath","penultInThePath","includes","isCreateEntityPanel","notyEvents","getState","createEntity","editEntity","dataWasChanged","onDoNotSave","isCreateEntity","container","getElementById","elem","ReactDOM","render","createNotificationDialog","API","LOGIN","LOGOUT","REGISTRATION","GET_USER_INFO","SAVE_USER","GET_ALL_USERS","GET_ALL_ARTICLES","GET_ARTICLE","GET_MY_ARTICLES","SAVE_ARTICLE","GET_FILTERED_ARTICLES","GET_ALL_ARTICLES_VERSIONS","GET_ALL_SUBJECTS","FILE_SAVE","FILE_GET","GET_USERS","GET_ARTICLES","SET_STATUS_USER","GET_ALL_NEWS","GET_PUBLISH_NEWS","SAVE_NEWS","CONFIRM_ARTICLE","SET_STATUS_ARTICLE","DECLINE_ARTICLE","SAVE_COMMMENT","HeaderUser","getElementsByClassName","webkitBoxOrient","Translate","changeMenu","switchMenuNavigation","clearArticle","myUserInfo","administrationDefaultTab","user_User","Dropdown","Item","role","registration_Registration","onClickRegistration","auth_Auth","onClickAuth","CONSTANTS","LANGUAGE","ru","en","de","bind","assertThisInitialized","userAuth","isCloseFeedBack","switchLanguagePage","exitUser","isMobileSearch","isMobileMenu","languagePage","onChangeFeedback","Array","isArray","arrayButtons","elementMenu","_this$props2","workspace","display","authRegistration","_this$props3","objRegAuth","userRegSatus","_this$props4","checkAuthFail","keyCode","_this$props5","switchLanguage","saveSubjects","saveArticle","getMyPublications","getArticlesLibrary","getArticleInfo","arrayLanguage","_this3","_this$props6","clearPreviewImg","feedbackDialog","dialogContent","zIndex","selection","wrapSelection","toLowerCase","select","headerUser_HeaderUser","signInUp","isCheckAuth","svgIcons_Menu","menuNavigation_MenuNavigation","menuLanguageButtons","app","scrollTop","renderListLanguage","_this3$props","svgIcons_Add","svgIcons_Search","size","icon","dialog_Dialog","connect","dispatch","Footer","footerElements","switchMenuTabAbout","switchMenuTabActivities","switchMenuTabLibrary","arrayElements","values","translate","renderFooterElements","monthName","EventList","countView","getMonth","toString","renderItems","Events","viewAllNews","eventList_EventList","Subscription","handleChange","isFramed","framedClick","AuthorView","countComments","trigger","Article","statusLabel","menuArticle","isDisabledRead","menuTranslate","lastUpdateTime","color","fluid","pointing","authorView_AuthorView","authorName","views","commentsCount","getImage","MobileArticle","ViewArticles","addStyle","countViewArticles","article_Article","mobileArticle_MobileArticle","renderAriclesBlock","MainRoot","onClickEvent","getPublishEvents","scrollContainer","islink","getEventInfo","viewArticles_ViewArticles","Segment","Dimmer","inverted","Loader","events_Events","subscription_Subscription","ListMenu","arrayList","disabledCount","newList","renderList","About","info","listOl","listUl","switchMenuTab","renderAboutInformation","listMenu_ListMenu","Library","ListUsers","activeIndex","saveUserInfoCard","renderListUsers","UserInfoCard","userAvatar","svgIcons_UserPhoto","InfoEvent","clearEventInfo","getFullYear","Activities","getListUsers","newProps","newUser","isOpenUserCard","listUsers_ListUsers","blocks_userInfoCard_UserInfoCard","object","renderContent","listTabs","JSON","parse","stringify","infoEvent_InfoEvent","PersonalData","setAvatar","filePreviewSave","files","base64File","setDateBirthday","dayBirthday","monthBirthday","yearBirthday","checkErrorName","checkErrorRank","disabledBtn","daysOfMonth","months","m","n","y","oldBirthday","maxDayMonth","onSave","_this$state2","avInput","click","multiple","accept","ref","input","Setup","onSavePersonalData","isCheckWindow","prevState","titleCheckWindow","getTime","fileData","clearMyUserInfo","handleChangeData","loadFile","contentCheckWindow","renderCheckWindow","personalData_PersonalData","successSaveData","fileId","PreviewArticle","innerHTML","prevProps","newImagePreview","articleMenu","optionsMenu","Comment","comment","forWhomClick","createTime","answerToUserName","Comments","onSend","forWhom","parentId","isAll","onSendCommnent","comment_Comment","focus","renderComments","TextArea","autoHeight","rows","InfoArticle","clearInfoArticle","saveComments","articleId","previewArticle_PreviewArticle","comments_Comments","console","log","onSendComment","renderArticlesTheme","ListTitleText","textList","renderText","EditorConvertToHTML","onEditorStateChange","html","htmlText","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","editorState","EditorState","createWithContent","draftToHtml","convertToRaw","getCurrentContent","_this$props$localizat","localization","react_draft_wysiwyg","wrapperClassName","editorClassName","locale","toolbar","CreateArticle","onChageHandle","newEditArticle","checkErrorSubject","checkErrorAnnotation","editArticle","onChangeFullScreenPreviewEditor","previewArticle","isEdit","setImage","languageDefault","onBlur","Editor","ArticlePublishing","isDelete","onChangeArticle","count","createArticle_CreateArticle","listTitleText_ListTitleText","F","onChangeWarningDialog","MyPublications","weekdaysShort","nameMonth","CalendarDatePicker","setNewDayAtMidnight","now","endOfDay","handleClickOutside","parseTime","arrayYears","isOpenListYear","isOpenListMonth","newDate","startYear","self","listMonth","listYears","path","svgBtnMonth","svgBtnYear","getDay","position","alignItems","transform","cursor","popup","indexElement","parseInt","indexOf","renderFullYearListDropDown","oldMonth","oldValueYear","oldValueMonth","oldValueDay","choiceMonth","indexMonth","param","choiceYear","each","parseOldDate","beforeDisabledDays","_beforeDisabledDays$","_beforeDisabledDays$$","before","_beforeDisabledDays$$2","after","beforeMidnight","setHours","afterMidnight","clickedDateMidnight","_this4","RightArrow","textAlign","renderDate","padding","margin","justifyContent","fontSize","borderBottom","fontWeight","switchMonth","minWidth","DayPicker_default","onDayClick","fixedWeeks","weekdaysLong","firstDayOfWeek","selectedDays","labels","nextMonth","previousMonth","todayButton","initialMonth","getHours","newSaveTimePicker","top","calendar","currentYear","currentMonth","newSaveDatePicker","serverDate","newTime","customDateTimePicker","inputDate","time","arrayTime","isCheckError","isOpenCalendarDatePicker","isOpenTimePickerList","onMouseLeaveDataPicker","isOpenListTime","hourse","minutes","validationCheck","defaultDate","projectIssueDateValidation","Function","parseDateStringInput","timeParse","isNew","getMinutes","datePicker","timeListPicker","svgBtnOpenCalendarDatePicker","svgBtnOpenTimePicker","new_data","selectionStart","t","itemTime","oldDay","oldYear","newData","onCheck","validationDisabled","validationResult","styleInput","styleIcon","_this$props$disabled","errorClass","onMouseLeave","onMouseEnter","react_input_mask_default","borderRadius","boxSizing","fontFamily","outlineColor","onFieldChange","mask","data-tooltip","winHeight","documentElement","clientHeight","_document$getElementB","getBoundingClientRect","elBottom","bottom","svgIcons_Calendar","calendar_CalendarDatePicker","saveDatePicker","opacity","borderLeft","left","_document$getElementB2","renderListTime","errorLabel","checkError","CreateEvent","onChangeEvents","onSaveEvent","CustomDateTimePicker","PaginationComponent","handlePaginationChange","activePage","ellipsisItem","boundaryRange","siblingRange","lastItem","nextItem","totalPages","firstItem","prevItem","Pagination","defaultActivePage","onPageChange","Table","columns","functionList","typeTable","constants","headTable","bodyTable","typeInfo","dataColor","request","versionId","stopPropagation","data-color","colums","renderContentAdministration","Administration","getData","changeUserSave","onClickElement","closeInfoEvent","newEventSaveStore","pageInfo","activeNumber","getUsers","getArticles","getNews","clearInfoEvent","sendEvent","addNewEvent","obj","changeArticleSave","_this$props7","countPagination","Math","ceil","total","contentAdministration","createEvent_CreateEvent","table_Table","pagination_PaginationComponent","changeArticleStatusSave","WorkSpaceRouting","Switch","Route","exact","component","MainPageRoot","LibraryPage","AboutPage","ActivitiesPage","infoArticle_InfoArticle","match","Main","onScroll","head","classList","add","remove","header_Header","backgroundSize","workspace_WorkSpaceRouting","footer_Footer","App","store","es","Router","main_Main","src_App_0"],"mappings":"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","file":"static/js/main.1e74149a.chunk.js","sourcesContent":["/**\r\n * Created by smalkov on 11.10.2018.\r\n */\r\n\r\nimport React from 'react';\r\n\r\nexport const CloseIcon = (props) => (\r\n    <svg fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    </svg>\r\n);\r\n\r\nexport const UserPhoto = (props) => (\r\n    <svg width=\"82\" height=\"97\" viewBox=\"0 0 82 97\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M40.6677 52C40.7684 52 40.8691 52 40.9899 52C41.0302 52 41.0705 52 41.1108 52C41.1712 52 41.2518 52 41.3122 52C47.2133 51.9001 51.9866 49.8417 55.5111 45.9047C63.2651 37.2314 61.9762 22.3628 61.8352 20.9439C61.3317 10.2921 56.2563 5.196 52.0671 2.81783C48.9454 1.0392 45.3 0.0799385 41.2316 0H41.0906C41.0705 0 41.0302 0 41.0101 0H40.8892C38.6537 0 34.2631 0.359723 30.0537 2.73789C25.8243 5.11606 20.6683 10.2121 20.1648 20.9439C20.0238 22.3628 18.7349 37.2314 26.4889 45.9047C29.9933 49.8417 34.7666 51.9001 40.6677 52ZM25.5423 21.4435C25.5423 21.3836 25.5624 21.3236 25.5624 21.2836C26.2271 6.95465 36.4785 5.41583 40.8691 5.41583H40.9496C40.9899 5.41583 41.0503 5.41583 41.1108 5.41583C46.5487 5.53574 55.7931 7.73405 56.4174 21.2836C56.4174 21.3436 56.4174 21.4035 56.4376 21.4435C56.4577 21.5834 57.8675 35.1729 51.4629 42.3274C48.9252 45.1653 45.5416 46.5642 41.0906 46.6041C41.0504 46.6041 41.0302 46.6041 40.9899 46.6041C40.9496 46.6041 40.9295 46.6041 40.8892 46.6041C36.4584 46.5642 33.0546 45.1653 30.5371 42.3274C24.1526 35.2129 25.5222 21.5634 25.5423 21.4435Z\" fill=\"black\" fill-opacity=\"0.2\"/>\r\n        <path d=\"M81.9944 77.0206C81.9944 77.0005 81.9944 76.9804 81.9944 76.9603C81.9944 76.7993 81.9744 76.6384 81.9744 76.4573C81.8547 72.4735 81.5951 63.1578 72.9311 60.18C72.8712 60.1599 72.7914 60.1398 72.7315 60.1197C63.7281 57.8059 56.2418 52.5746 56.162 52.5142C54.9442 51.6491 53.2673 51.9509 52.4089 53.1782C51.5505 54.4055 51.8499 56.0956 53.0677 56.9608C53.4071 57.2023 61.3524 62.7755 71.2941 65.3509C75.9455 67.0209 76.4646 72.0308 76.6043 76.6182C76.6043 76.7993 76.6043 76.9603 76.6243 77.1212C76.6443 78.9321 76.5245 81.7288 76.2051 83.3384C72.971 85.1894 60.2944 91.5877 41.0099 91.5877C21.8053 91.5877 9.04877 85.1693 5.79477 83.3183C5.47536 81.7087 5.33562 78.9119 5.37554 77.1011C5.37554 76.9402 5.3955 76.7792 5.3955 76.5981C5.53525 72.0107 6.05429 67.0008 10.7057 65.3308C20.6474 62.7554 28.5928 57.162 28.9321 56.9407C30.1499 56.0755 30.4494 54.3854 29.5909 53.1581C28.7325 51.9308 27.0556 51.629 25.8378 52.4941C25.758 52.5545 18.3117 57.7857 9.26837 60.0996C9.18852 60.1197 9.12863 60.1398 9.06874 60.1599C0.404698 63.1578 0.145176 72.4735 0.025397 76.4372C0.025397 76.6182 0.0253965 76.7792 0.00543328 76.9402C0.00543328 76.9603 0.00543328 76.9804 0.00543328 77.0005C-0.0145299 78.0468 -0.0344928 83.4189 1.02356 86.115C1.22319 86.6381 1.58253 87.0807 2.06165 87.3825C2.66054 87.785 17.0141 97 41.0299 97C65.0456 97 79.3992 87.7648 79.9981 87.3825C80.4572 87.0807 80.8365 86.6381 81.0362 86.115C82.0343 83.439 82.0144 78.0669 81.9944 77.0206Z\" fill=\"black\" fill-opacity=\"0.2\"/>\r\n    </svg>\r\n);\r\n\r\nexport const Menu = (props) => (\r\n    <svg viewBox=\"0 0 512 512\" width=\"20\" fill=\"#7cb8b0\">\r\n<g>\r\n\t<g>\r\n\t\t<path d=\"M491.318,235.318H20.682C9.26,235.318,0,244.577,0,256s9.26,20.682,20.682,20.682h470.636\r\n\t\t\tc11.423,0,20.682-9.259,20.682-20.682C512,244.578,502.741,235.318,491.318,235.318z\"/>\r\n\t</g>\r\n</g>\r\n<g>\r\n\t<g>\r\n\t\t<path d=\"M491.318,78.439H20.682C9.26,78.439,0,87.699,0,99.121c0,11.422,9.26,20.682,20.682,20.682h470.636\r\n\t\t\tc11.423,0,20.682-9.26,20.682-20.682C512,87.699,502.741,78.439,491.318,78.439z\"/>\r\n\t</g>\r\n</g>\r\n<g>\r\n\t<g>\r\n\t\t<path d=\"M491.318,392.197H20.682C9.26,392.197,0,401.456,0,412.879s9.26,20.682,20.682,20.682h470.636\r\n\t\t\tc11.423,0,20.682-9.259,20.682-20.682S502.741,392.197,491.318,392.197z\"/>\r\n\t</g>\r\n</g>\r\n</svg>\r\n);\r\n\r\nexport const Search = (props) => (\r\n    <svg fill=\"#7cb8b0\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"/>\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n    </svg>\r\n);\r\n\r\nexport const Add = (props) => (\r\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M11 5H9V9H5V11H9V15H11V11H15V9H11V5ZM10 0C4.5 0 0 4.5 0 10C0 15.5 4.5 20 10 20C15.5 20 20 15.5 20 10C20 4.5 15.5 0 10 0ZM10 18C5.6 18 2 14.4 2 10C2 5.6 5.6 2 10 2C14.4 2 18 5.6 18 10C18 14.4 14.4 18 10 18Z\" fill=\"#7CB8B0\"/>\r\n    </svg>\r\n\r\n);\r\n\r\nexport const Calendar = (props) => (\r\n    <svg  viewBox={'0 0 510 510'} {...props}>\r\n        <path d=\"M127.9,49.7c0-2.5,0.9-4.6,2.7-6.4c1.8-1.8,3.9-2.7,6.4-2.7h18.3c2.5,0,4.6,0.9,6.4,2.7c1.8,1.8,2.7,3.9,2.7,6.4v81.6\r\n\t\tl182.7,0.4v-82c0-2.5,0.9-4.6,2.7-6.4c1.8-1.8,3.9-2.7,6.4-2.7h18.3c2.5,0,4.6,0.9,6.4,2.7c1.8,1.8,2.7,3.9,2.7,6.4v82.1l109.6,0.2\r\n\t\tv-18.3c0-9.9-3.6-18.5-10.8-25.7c-7.2-7.2-15.8-10.8-25.7-10.8h-36.5V49.7c0-12.6-4.5-23.3-13.4-32.3C397.9,8.5,387.2,4,374.6,4\r\n\t\th-18.3c-12.6,0-23.3,4.5-32.3,13.4c-8.9,8.9-13.4,19.7-13.4,32.3v27.4H201V49.7c0-12.6-4.5-23.3-13.4-32.3\r\n\t\tC178.6,8.5,167.9,4,155.3,4H137c-12.6,0-23.3,4.5-32.3,13.4c-8.9,8.9-13.4,19.7-13.4,32.3v27.4H54.8c-9.9,0-18.5,3.6-25.7,10.9\r\n\t\tc-7.2,7.2-10.8,15.8-10.8,25.7V131l109.6,0.2V49.7z\"/>\r\n        <path d=\"M383.7,127.8v0.2c0,2.5-0.9,4.6-2.7,6.4c-1.8,1.8-3.9,2.7-6.4,2.7h-18.3c-2.5,0-4.6-0.9-6.4-2.7c-1.8-1.8-2.7-3.9-2.7-6.4\r\n\t\tv-0.2l-182.7-0.4v0.6c0,2.5-0.9,4.6-2.7,6.4c-1.8,1.8-3.9,2.7-6.4,2.7H137c-2.5,0-4.6-0.9-6.4-2.7s-2.7-3.9-2.7-6.4v-0.7L18.3,127\r\n\t\tv348.1c0,9.9,3.6,18.5,10.8,25.7c7.2,7.2,15.8,10.8,25.7,10.8h402c9.9,0,18.5-3.6,25.7-10.8c7.2-7.2,10.9-15.8,10.9-25.7V128\r\n\t\tL383.7,127.8z M137,475.1H54.8v-82.2H137V475.1z M137,374.6H54.8v-91.4H137V374.6z M137,265H54.8v-82.2H137V265z M246.7,475.1\r\n\t\th-91.4v-82.2h91.4V475.1z M246.7,374.6h-91.4v-91.4h91.4V374.6z M246.7,265h-91.4v-82.2h91.4V265z M356.3,475.1H265v-82.2h91.4\r\n\t\tV475.1z M356.3,374.6H265v-91.4h91.4V374.6z M356.3,265H265v-82.2h91.4V265z M456.8,475.1h-82.2v-82.2h82.2V475.1z M456.8,374.6\r\n\t\th-82.2v-91.4h82.2V374.6z M456.8,265h-82.2v-82.2h82.2V265z\"/>\r\n    </svg>\r\n);\r\n\r\n","/**\r\n * Created by smalkov on 14.09.2018.\r\n */\r\nimport axios from \"axios\";\r\n\r\nexport const fetchData = (api, data, functionReducer) => {\r\n    let d = axios({\r\n        method: \"post\",\r\n        url: window.location.origin + '/api/' + api,\r\n        data: data,\r\n        headers: {\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        }\r\n    })\r\n        .then(response => {\r\n            let { data } = response;\r\n            if(data) {\r\n                setTimeout(() => {\r\n                    functionReducer(data);\r\n                }, 200)\r\n            }\r\n        })\r\n        .catch(error => {\r\n            const {response} = error;\r\n            const errorMessage = response && response.data && response.data.message || \"Сервер недоступен\";\r\n            setTimeout(() => {\r\n                functionReducer([]);\r\n            }, 3000);\r\n            return {\r\n                errorMessage: errorMessage\r\n            }\r\n        });\r\n    return (d)\r\n\r\n};\r\n\r\nexport const regAuthUser = (api, data, functionReducer, isReg) => {\r\n    let d = axios({\r\n        method: \"post\",\r\n        url: window.location.origin + '/api/' + api,\r\n        data: data\r\n    })\r\n        .then(response => {\r\n            if(isReg) {\r\n                functionReducer(response);\r\n            } else {\r\n                functionReducer(response)\r\n            }\r\n        })\r\n        .catch(error => {\r\n            const {response} = error;\r\n            const errorMessage = response && response.data && response.data.message || \"Сервер недоступен\";\r\n                functionReducer(response);\r\n            return {\r\n                errorMessage: errorMessage\r\n            }\r\n        });\r\n    return (d)\r\n\r\n};\r\n\r\nexport const fetchDataGet = (api, parameters, functionReducer) => {\r\n    let url = \"?\";\r\n    Object.keys(parameters).forEach(key => {\r\n        if (url.length > 1)\r\n            url += \"&\";\r\n        url += key + \"=\" + parameters[key];\r\n    });\r\n\r\n    let d = axios({\r\n        method: \"get\",\r\n        url: window.location.origin + '/api/' + api + url\r\n    })\r\n        .then(response => {\r\n            let { data } = response;\r\n            if(data) {\r\n                setTimeout(() => {\r\n                    functionReducer(data);\r\n                }, 200)\r\n            }\r\n        })\r\n        .catch(error => {\r\n            const {response} = error;\r\n            const errorMessage = response && response.data && response.data.message || \"Сервер недоступен\";\r\n            setTimeout(() => {\r\n                functionReducer([]);\r\n            }, 3000);\r\n            return {\r\n                errorMessage: errorMessage\r\n            }\r\n        });\r\n    return (d);\r\n};\r\n\r\nexport const uploadFile = (api, file, functionReducer) => {\r\n    const formData = new FormData();\r\n    formData.append('data', file);\r\n    let d = axios.post(window.location.origin + '/api/' + api, formData, {\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data;charset=UTF-8\",\r\n        }\r\n    })\r\n    .then(response => {\r\n        let { data } = response;\r\n        if(data) {\r\n            setTimeout(() => {\r\n                functionReducer(data);\r\n            }, 200)\r\n        }\r\n    })\r\n    .catch(error => {\r\n        const {response} = error;\r\n        const errorMessage = response && response.data && response.data.message || \"Сервер недоступен\";\r\n        setTimeout(() => {\r\n            functionReducer([]);\r\n        }, 3000);\r\n        return {\r\n            errorMessage: errorMessage\r\n        }\r\n    });\r\n\r\n    return (d);\r\n};\r\n\r\n","export const DaysOfMonth =(year, month) => {//Определение колличества дней в месяце(месяц начинается с 0)\r\n    Date.prototype.daysInMonth = function() {\r\n        return 32 - new Date(year, month, 32).getDate();\r\n    };\r\n\r\n    return new Date().daysInMonth();\r\n};\r\n\r\nexport const FormateDate = (oldDate, isDisabledTime) => {//Приводит к нормальному виду дату\r\n    if (oldDate) {\r\n        let options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\r\n        if(isDisabledTime) {\r\n            options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n        }\r\n        let newDate = oldDate.toLocaleString('en-GB', options).replace(/\\/+/g, '.');\r\n        return newDate.replace(/,+/g, '  ')\r\n    }\r\n};\r\n\r\nexport const ConvertBase64File = (file, callback) => { //Конвертер в base64 изображения\r\n    let reader = new FileReader();\r\n    const convertCallback = (e) => {\r\n        callback(e.target.result);\r\n        reader.removeEventListener(\"loadend\", convertCallback);\r\n    };\r\n\r\n    reader.addEventListener(\"loadend\", convertCallback);\r\n    reader.readAsDataURL(file);\r\n};\r\n\r\nexport const getCloneObject = (object) => { //Клонирование объекта\r\n    return JSON.parse(JSON.stringify(object))\r\n};\r\n\r\nexport const getLang = () => {//Определение предпочитаемого языка\r\n    const lang = (navigator.language || navigator.userLanguage).split('-')[0].toUpperCase();\r\n    return lang !== 'RU' && lang !== 'EN' ? 'EN' : lang\r\n};\r\n\r\nexport const isAutoFocusMobile = () => {//Определение размеров экрана и вставка автофокуса в поле(от 960)\r\n    let isFocused = false;\r\n    let body = document.body;\r\n    let width = 0;\r\n    if(body) {\r\n        width = body.offsetWidth;\r\n        if(width > 960) {\r\n            isFocused = true;\r\n        }\r\n    }\r\n\r\n    return isFocused\r\n};\r\n\r\nexport const sortField = (sortField, direction) => {//Сортировка объекта(Принимает поле по которому идет сортировка и направление)\r\n    let sortOrder = -1;\r\n    if(direction) {\r\n        sortOrder = 1;\r\n        sortField = sortField.substr(1);\r\n    }\r\n    return function (a,b) {\r\n        let c, d;\r\n        if(a[sortField] && b[sortField]){\r\n            c = a[sortField];\r\n            d = b[sortField];\r\n        } else {\r\n            if (a[sortField] === '') return 1;\r\n            if (b[sortField] === '') return -1;\r\n            c = a[sortField];\r\n            d = b[sortField];\r\n        }\r\n        let result = (c === null)-(d === null) || +(c > d)||-(c < d);\r\n        return result * sortOrder;\r\n    }\r\n};","/**\r\n * Created by smalkov on 05.09.2018.\r\n */\r\nimport React from \"react\";\r\n\r\nexport const TranslateInterface_Ru = {\r\n    header: {\r\n        language: [\r\n            { key: 1, text: 'Русский', value: 'ru' },\r\n            { key: 2, text: 'English', value: 'en' },\r\n            { key: 3, text: 'Deutsch', value: 'de' }\r\n        ],\r\n        feedBack: {\r\n            link: 'Связаться с нами',\r\n            dialog: {\r\n                title: 'Отправка запроса',\r\n                theme: {\r\n                    label: 'Тема',\r\n                    placeholder: 'Введите тему'\r\n                },\r\n                description: {\r\n                    label: 'Описание',\r\n                    placeholder: 'Введите описание'\r\n                },\r\n                btn: {\r\n                    label: 'Отправить'\r\n                }\r\n\r\n            }\r\n        },\r\n        title: 'ЦЕНТР СЕТЕВЫХ ТЕХНОЛОГИЙ',\r\n        menuNavigation: {\r\n            home: 'ГЛАВНАЯ',\r\n            about: 'О СООБЩЕСТВЕ',\r\n            activities: 'ДЕЯТЕЛЬНОСТЬ',\r\n            library: 'БИБЛИОТЕКА',\r\n            my_publications: 'МОИ ПУБЛИКАЦИИ'\r\n        },\r\n        authorization: {\r\n            signUp: 'Зарегистрироваться',\r\n            signIn: 'Войти',\r\n            account: 'в личный кaбинет',\r\n            dialog: {\r\n                text: {\r\n                    auth: {\r\n                        text_1: 'Для входа на портал введите логин и пароль,\\n' +\r\n                        'указанные при регистрации',\r\n                        text_2: 'Нет учетной записи? ',\r\n                        text_3: ' Зарегистрируйтесь'\r\n                    },\r\n                    reg: {\r\n                        text_1: 'Есть учетная запись?',\r\n                        text_2: 'Войдите'\r\n                    }\r\n                },\r\n                registrationTitle: 'Регистрация',\r\n                successRegistration: {\r\n                    title: 'Регистрация успешно завершена',\r\n                    text: ''\r\n                },\r\n                errorRegistration: 'Ошибка регистрации',\r\n                backPortal: 'Вернуться на портал',\r\n                authTitle: 'Войти в личный кабинет',\r\n                fio: {\r\n                    label: 'Фамилия Имя',\r\n                    placeholder: 'Введите ваши фамилию и имя'\r\n                },\r\n                email: {\r\n                    label: 'Электронная почта',\r\n                    placeholder: 'Введите e-mail'\r\n                },\r\n                password: {\r\n                    label: 'Пароль',\r\n                    placeholder: 'Придумайте пароль'\r\n                },\r\n                registrationText: {\r\n                    link_1: 'политики конфиденциальности',\r\n                    link_2: 'пользовательского соглашения',\r\n                    text_1: 'Регистрируюясь вы соглашаетесь с условиями ',\r\n                    text_2: ' и ',\r\n                },\r\n                signUp: 'Зарегистрироваться',\r\n                signIn: 'Войти',\r\n                socialRegistration: 'Регистрация через соц.сети'\r\n            }\r\n        },\r\n        user: {\r\n            published: 'Опубликовать статью',\r\n            profileMenu: {\r\n                settings: \"Настройки профиля\",\r\n                published: \"Мои публикации\",\r\n                administration: \"Администрирование\",\r\n                signOut: \"Выход\"\r\n            }\r\n        },\r\n        search: 'Поиск по порталу...',\r\n        mobileMenu: {\r\n            language: 'ЯЗЫК',\r\n            feedBack: 'СВЯЗАТЬСЯ С НАМИ',\r\n            exit: 'ВЫХОД'\r\n        }\r\n    },\r\n    home: {\r\n        leftPanel: {\r\n            newArticles: {\r\n                title: 'НОВЫЕ СТАТЬИ',\r\n                link:{\r\n                    name: 'new_articles',\r\n                    label: 'Все новые статьи'\r\n                }\r\n            },\r\n            popularArticles: {\r\n                title: 'ПОПУЛЯРНЫЕ СТАТЬИ',\r\n                link: {\r\n                    name: 'popular_articles',\r\n                    label: 'Все популярные статьи'\r\n                }\r\n            },\r\n            readNext: 'Читать далее'\r\n        },\r\n        rightPanel: {\r\n            title: 'CОБЫТИЯ',\r\n            linkTitle: 'Все события'\r\n        },\r\n        subscription: {\r\n            title: 'Подписка на ежедневную рассылку',\r\n            placeholder: 'Введите ваш e-mail',\r\n            btnLabel: 'Подписаться'\r\n        }\r\n    },\r\n    setup: {\r\n        leftMenu: {\r\n            personalData: 'ЛИЧНЫЕ ДАННЫЕ',\r\n            /*settingsAccount: 'Настройка аккаунта'*/\r\n        },\r\n        rightPanel: {\r\n            personalData: 'Личные данные',\r\n            name: {\r\n                label: 'Фамилия Имя',\r\n                placeholder: 'Введите Имя'\r\n            },\r\n            rank: {\r\n                label: 'Научная степень',\r\n                placeholder: 'Введите научную степень'\r\n            },\r\n            birthday: {\r\n                label: 'Дата рождения',\r\n                number: 'Число',\r\n                month: {\r\n                    label: 'Месяц',\r\n                    options: [\r\n                        \"Январь\", \"Февраль\", \"Март\",\r\n                        \"Апрель\", \"Май\", \"Июнь\",\r\n                        \"Июль\", \"Август\", \"Сентябрь\",\r\n                        \"Октябрь\", \"Ноябрь\",\"Декабрь\"\r\n                    ],\r\n                    optionsMonth: [\r\n                        \"Января\", \"Февраля\", \"Марта\",\r\n                        \"Апреля\", \"Мая\", \"Июня\",\r\n                        \"Июля\", \"Августа\", \"Сентября\",\r\n                        \"Октября\", \"Ноября\",\"Декабря\"\r\n                    ],\r\n                },\r\n                year: 'Год'\r\n            },\r\n            achievements: {\r\n                label: 'Научные достижения'\r\n            },\r\n            about: {\r\n                label: 'О себе'\r\n            },\r\n            city: {\r\n                label: 'Город',\r\n                placeholder: 'Введите город'\r\n            },\r\n            avatar: {\r\n                photo: 'Фотография',\r\n                notPhoto: 'Нет фото',\r\n                download: 'Загрузить фотографию',\r\n                delete: 'Удалить фотографию'\r\n            },\r\n            btnSave: 'Сохранить изменения',\r\n            error: {\r\n                field: 'Заполните обязательное поле'\r\n            }\r\n\r\n        }\r\n    },\r\n    about: {\r\n        tabs: {\r\n            mission: 'Миссия',\r\n            preamble: 'Преамбула',\r\n            aim: 'Основные цели',\r\n            specifications: 'Конкретизации',\r\n        },\r\n        information: {\r\n            title: 'ЦЕНТР СЕТЕВЫХ ТЕХНОЛОГИЙ (ЦСТ) (NTC - NETWORK TECHNOLOGY CENTER)',\r\n            content: {\r\n                mission: {\r\n                    title: 'Миссия',\r\n                    content: [ {\r\n                        p: {\r\n                        className: '',\r\n                        text: 'Планируемое к созданию закрытое виртуальное сетевое сообщество посвящает себя междисциплинарному феномену сетевых структур и в особенности их социальной реализации; сообщество видит свою миссию в максимально полной эксплуатации колоссального потенциала, воплощаемого сетевыми структурами ради обеспечения мирной достойной, процветающей жизни граждан планеты Земля.  \\n'\r\n                        }}, {\r\n                        p: {\r\n                        className: '',\r\n                        text: 'Сообщество ставит перед собой триединую целевую задачу:\\n'}},\r\n                            {ol: ['\\tМногоаспектное исследование сетевых структур как стержневого концепта современной науки и в то же время как новой важнейшей социальной, экономической, культурной и политической суперреальности','\\tВсестороннее материальное, юридическое (законодательное) продвижение и стимулирование сетевых структур светлой направленности в социуме, налаживание их взаимодействия с неизбежными не-сетевыми (иерархическими, квазирыночными) структурами', '\\tКонсультирование представителей сетевых структур в различных сферах социума (бизнес, гражданское общество,  просвещение, здравоохранение и д.), помощь в создании оптимальной сетевой конфигурации для каждой конкретной структуры']}]\r\n                },\r\n                preamble: {\r\n                    title: 'Преамбула',\r\n                    content: [\r\n                        {br: 'Если мы возьмем работы многих исследователей современности, особенно тех, кто выступает под флагом современной «сетевой науки» (networkscience), то в большинстве случаев они определяют сети  как любые системы из элементов (вершин, или узлов) со связями между ними, которые обозначаются как ребра (дуги). Данное широкое определение принимается многими учеными во всем мире.'},\r\n                        {br: 'Специфика именно нашего виртуального сообщества в том, что мы используем иное, более узкое определение понятия «сетевая структура», которое применялось примерно с 1980-х годов в литературе, в основном посвященной наукам о человеке и обществе  В соответствие с ней, далеко не все системы из соединенных связями элементов следует именовать «сетевыми структурами».'},\r\n                        {br: 'В сети должен отсутствовать единый центр (лидер, доминант), и ее поведение является результатом кооперативных взаимодействий между элементами (узлами), среди которых могут быть несколько частичных лидеров с ограниченным воздействием на систему. Следует отметить, что всемирная паутина (WorldWideWeb) устроена во многом именно по данному организационному принципу.'},\r\n                        {br: 'В сети должен отсутствовать единый центр (лидер, доминант), и ее поведение является результатом кооперативных взаимодействий между элементами (узлами), среди которых могут быть несколько частичных лидеров с ограниченным воздействием на систему. Следует отметить, что всемирная паутина (WorldWideWeb) устроена во многом именно по данному организационному принципу.'},\r\n                        {br: 'Как показывает само название, речь идет об объединениях людей или целых групп (организаций, предприятий, сообществ, команд, общин, коллективов и др.), в которых нет единого лидера (доминанта, босса, начальника…), а все функционирование таких структур определяется сложными взаимодействиями между частичными либо временными лидерами. Такие структуры противопоставляются централизованным сетям –иерархиям, имеющим единого лидера (босса, доминанта). В то же время не всякая не-иерархическая структура есть сеть в нашем понимании. Сетевыми структурами не являются структуры типа рынков в обществе, где преобладает не кооперация, а конкуренция между элементами структуры.В дальнейшем мы будем говорить просто «сетевые структуры», или «сети», имея в виду только децентрализованные кооперативные структуры. Децентрализованные распределенные сетевые структуры, опирающиеся на кооперацию (союз, доверие, сотрудничество, взаимопомощь) между своими элементами, представляют собой универсальный организационный принцип,  реализующийся в системах различной природы — от звездных скоплений и кристаллов до ансамблей элементарных частиц и технических устройств. При всем разнообразии сетевых объектов, мы сосредоточиваем внимание на сетевых структурах человеческого общества и личности, сравнивая их с таковыми в различных биосистемах.'}\r\n                    ],\r\n                },\r\n                aim: {\r\n                    title: 'Основные цели',\r\n                    content: [\r\n                        {p: {\r\n                            className: 'text_blue',\r\n                            text: '1. Теоретические и прикладные научные разработки, посвященные децентрализованным  кооперативным сетевым структурам.\\n'\r\n                        }},\r\n                        {p: {\r\n                            className: '',\r\n                            text: 'По максимуму следовало бы следовало бы осуществить беспрецедентный шаг -- создать междисциплинарное альтруистическое (по крайней мере, на инициальном этапе) сообщество энтузиастов исследования сетевых структур (его предтечами можно считать аналогичные международные сетевые центры, например, в г. Санта-Фе и Пало-Алто в США). Его внутренняя организация сама должна была бы соответствовать сетевому принципу, а производимая этим сообществом пусть даже в «свободное от основной работы время» интеллектуальная продукция – обогащать собой сокровищницу знаний различных наук (ибо сети – междисциплинарная категория, применимая, помимо человеческого социума, к объектам живой природы, техническим устройствам, психике отдельного индивида и др.; сети даже имеют религиозное звучание). Несмотря на все это, наибольший эффект от такого сообщества ожидается в биологической (и биотехнологческой), медицинской, информационной, социально-политической и экономической сферах. Имея междисциплинарный характер, члены сетевого сообщества мог бы брать организационные сценарии из одной сферы бытия и творчески экстраполировать их  в иную сферу. В частности, живая природа предоставляет создателям и пропагандистам сетевых структур набор организационных рецептов – вариантов сетевой децентрализованной организации, реализуемых различными биосистемами. В рамках данной целевой задачи целесообразно выделить приоритетные  субпроблемы: \\n'\r\n                        }},\r\n                        {ul: ['Сети в бизнесе','Сети в политике', 'Сети в биологии', 'Сети в психике и интеллекте человека',\r\n                                'Сети в человеческих сообществах и культуре', 'Сети в информационных средах', 'Инновационные сети']},\r\n                        {p: {\r\n                            className: 'text_blue',\r\n                            text: '2. Промотирование и стимулирование сетевых структур конструктивной («светлой») направленности в социуме. \\n'\r\n                            }},\r\n                        {p: {\r\n                            className: '',\r\n                            text: 'Мы исходим из того, что проектируемое сообщество будет посвящать себя также и разработке и внедрению финансовых, юридических (законодательных), а также социально-технологических и психотехнических  мер по стимуляции сетевых структур «светлой» (конструктивной, гуманитарной, патриотической) направленности в то же время выявлению и юридическим мерам по подавлению «темных» (коррупционных, теневых, преступных) сетевых структур. Здесь также следует выделить субпроблемы: \\n'\r\n                            }},\r\n                        {ul: ['Психотехники и поведенческая топология', 'Информационная среда как стимул и поддержка сетей',\r\n                                'Сетевая культура (сетевые паттерны)', 'Политические платформы и движения как стимульная среда для «светлых» сетей',\r\n                                'Материальная поддержка сетей']},\r\n                        {p: {\r\n                            className: 'text_blue',\r\n                            text: '3. Консультирование сетевых структур'\r\n                            }},\r\n                        {p: {\r\n                            className: '',\r\n                            text: 'Полезным практическим шагом было бы создание спонсированных государством, а также частными инвесторами – в творческое дополнение кразных по специализации и уровню консультационных структур, которые помогают децентрализованным сетям решать всевозможные организационные, технические, психологические проблемы, неизбежно возникающие у этих новаторских структур в различных сферах общества –в политике, бизнесе, здравоохранении, системе образования, научно-исследовательских  институтах и др. И здесь целесообразно выделить приоритетные  субпроблемы:'\r\n                            }},\r\n                        {ul: ['Бизнес-инкубаторы', 'Консультирование сетей медиаторов (примирителей)',\r\n                                'Консультирование иерархий', 'Консультирование сетей общественных активистов',\r\n                                'Консультирование представителей сетевого управления и сетевых узлов принятия решений']},\r\n                    ]\r\n                },\r\n                specifications: {\r\n                    title: 'Конкретизации',\r\n                    content: [\r\n                        {p: {\r\n                            className: 'text_blue',\r\n                            text: 'Применительно к проблеме  «МИКРОБНАЯ КОММУНИКАЦИЯ, НЕЙРОМЕДИАТОРЫ И ПРОБИОТИКИ»'\r\n                            }},\r\n                        {p: {\r\n                            className: '',\r\n                            text: 'В настоящее время микробиология испытывает смену парадигм – от “чистых культур” фокус интереса перемещается к сложным природным многовидовым ассоциациям, от изучения одиночных клеток – к исследованию сложных интегрированных клеточных коллективов (колоний, биопленок, флоков, гранул и др.), обозначаемых некоторыми микробиологами (Дж. Шапиро, Э. Бен-Якоб и др.) как многоклеточные организмы. Микробные клетки в их составе интенсивно обмениваются информацией; одним из наиболее изученных механизмов микробной коммуникации является quorumsensing в различных его вариантах. Микробные биопленки растут и в различных экологических нишах человеческого организма, особенно в его желудочно-кишечный тракт. Последняя тема интересна не только микробиологам и, понятно, врачам-гастроэнтерологам, но и в значительной мере нейрофизиологам (особенно нейрохимикам). Множатся данные о двусторонней коммуникации между микробиотой и организмом-хозяином на языке нейротрансмиттеров и нейрогормонов, включая серотонин, нордреналин, дофамин, гистамин и др.. Организованный коллектив симбиотической микробиоты выступает как аналог мозга в диалоге с “настоящим” головным мозгом и всем организмом хозяина. Нейромедиаторы и, соответственно, нейрохимические эффекты следует ожидать и от многих микроорганизмов, выступающих ныне как пробиотические культуры'\r\n                        }},\r\n                        {p: {\r\n                            className: '',\r\n                            text: 'Актуальность междисциплинарной тематики – точки пересечения проблематики микробной коммуникации и социальной организации, взаимодействия микробиоты и макроорганизма с особым упором на роль нейрохимических агентов, а также разработок по про- и пребиотикам – обусловливает своевременность создания междисциплинарной творческой лаборатории энтузиастов. Они могут разниться по профессиональному бэкграунду и специализироваться по микробиологии (включая медицинские аспекты), нейрофизиологии, гастроэнтерологии, диетологии, фармакологии и др. Объединяющим началом должен быть общий интерес к кратко очерченной нами  выше междисциплинарной области научных исследований и практической внедренческой работы.'\r\n                        }},\r\n                        {p: {\r\n                            className: '',\r\n                            text: 'К сожалению, сама междисциплинарность темы не дает возможность организовать весь коллектив энтузиастов в рамках какого-либо из существующих научных институтов, которые, как правило, заняты более узко профессионально очерченными исследовательскими и внедренческими программами. Естественной альтернативой является сетевая форма организации, включающая в себя фрагменты научных групп многих разных микробиологических, фармакологических, диетологических и др. учреждений вместе с энтузиастами-одиночками, которые могут выступать в роли частичных творческих лидеров по подтемам заявленной широкой тематики. Планируется написание заявок на совместные гранты, проведение конференций (в том числе в онлайн-режиме), школ, создание научных публикаций и коллективных обращений в инстанции, от которых зависит внедрение коммерческих и государственных программ. '\r\n                        }},\r\n                        {p: {\r\n                            className: '',\r\n                            text: 'Некоторой предтечей создаваемого сетевого центра может служить спонтанно сложившаяся в нашей стране сетевая структура микробиологов-“чудаков”, интересовавшихся микробной социальностью и коммуникацией. Подобно этой стихийной сети, создаваемая будет содержать частичных лидеров  и пул поддерживающих их научных работников.'\r\n                        }},\r\n                        {p: {\r\n                            className: 'text_blue',\r\n                            text: 'Применительно к проблеме  «ПУТЬ НА МАРС»'\r\n                        }},\r\n                        {p: {\r\n                            className: '',\r\n                            text: 'Полеты к Марсу  и на другие космические объекты могут быть одним из вариантов применения сетевых принципов – как в организации, так и в функционировании подобных проектов будущего. Космос вообще как сфера новаторской деятельности был и остается одним из важнейших сетевых международных проектов, в задачи которого входит в том числе предупреждение или минимизация вероятности возникновения войн и конфликтов в космосе, недопущения использования космоса как площадки для гонки космических вооружений. Шанс на это есть и его нужно использовать, в том числе и путем применения сетевых технологий, принципов и сетевой организационной работы. Более того. Именно космос и, в частности, подготовка полета на Марс, могут стать таким проектом, который сможет добиться перелома в создании условий для 7 технологического уклада, который – как уже известно- будет основой для формирования принципиально нового человеческого общества, обладающего принципиально иным уровнем понимания, доверия и сознания. Глубинной структурой такого взаимопонимания может быть только сеть, в этом ее историческое назначение и смысл. И космос, в том числе подготовка к затрагивающим интересы всех на Земле полету на ближайшие к Земле планеты Солнечной системы, может быть одним из первых таких пробных шагов в достижении сетевого прорыва.'\r\n                            }},\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n    },\r\n    activities: {\r\n        tabs: {\r\n           members: 'Члены сообщества',\r\n           formsActivities: 'Формы деятельности',\r\n           contacts: 'Контактная информация',\r\n           events: 'События',\r\n           codex: 'Кодекс'\r\n        },\r\n        communityMembers: {\r\n            title: 'ЧЛЕНЫ СООБЩЕСТВА',\r\n            userInfoCard: {\r\n                title: 'КАРТОЧКА ПОЛЬЗОВАТЕЛЯ',\r\n                article: 'Статьи'\r\n            },\r\n        },\r\n        formsActivities: {\r\n            title: 'ФОРМЫ ДЕЯТЕЛЬНОСТИ',\r\n            text: [{\r\n                textBlock: 'Вывешивание новых высказываний, текстов, выкроек из газет, видеоклипов и картинок, критика чужих блогов  – вот рутинные формы деятельности, на которые  обрекает нас формат закрытого виртуального сетевого сообщества. Но плохо то виртуальное сообщество, которое не стремится девиртуализоваться – проявить себя в реальной жизни за пределами веб-сайтов и чатов . Сама специфика именно децентрализованных сетевых структур, которые существовали за миллионы лет до пресловутой виртуально-цифровой эпохи (в форме децентрализованных банд охотников-собирателй, например), подталкивает к девиртуализации, например, в следующих формах:',\r\n                list: [\r\n                    '\\tДемонстрация успешной сетевой структуры одним из членов сообщества, создавшим ее в какой-угодно стране и области деятельности (от Клуба защитников пингвинов Западной Антарктиды до поборников культурных и чистых туалетов в Зимбабве) – немедленно вызовет желание других создать подобную же структуру  где-то тоже в реальной действительности',\r\n                    '\\tСозданная и подписанная многими членами сообщества петиция или заявка, адресованная «власть имущим» и   направленная на облегчение судьбы «сетевиков» опять же где угодно (включа, например, сеть обманутых вкладчиков) также обладает резонансным эффектом и может привести к усилению позиций сетевых структур в глобальном масштабе',\r\n                    '\\tПубликация в периодическом издании или вход на экраны фильма  сетях должен оказать немаловажное влияние на умы и сердца людей',\r\n                    '\\tНаконец, мы лелеем мечту соединить членов сообщества в рамках профессиональной конференции, симпозиума, конгресса, а еще лучше – работе по поддержанному тем или иным грантом (субсидией) проекту!'\r\n                ]\r\n            }]\r\n        },\r\n        contacts: {\r\n            title: 'КОНТАКТНАЯ ИНФОРМАЦИЯ',\r\n        },\r\n        events: {\r\n            title: 'СОБЫТИЯ',\r\n        },\r\n        codex: {\r\n            title: 'КОДЕКС',\r\n            text: 'Наукане нейтральна этически, ученые несут ответственность за все свои занятия, они могут и помочь человечеству, и навредить ему. Наша тема (Сетевые структуры) не менее опасна, чем ядерное оружие или генная инженерия. \\n' +\r\n            'От сторонников и тем более членов нашего сообщества требуется осознание груза моральной ответственности.  Каждый раз спрашиваем себя: А вправе ли я это делать? Пожалуй, легче вникать в сети религиозным людям. Они явно чувствуют за ними духовную подоплеку, «промысел Божий». Недаром сетевую структуру имела раннехристианская апостольская церковь, где не было не раба, ни рабовладельца, ни эллина, ни варвара… Религия (любая) помогает людям осознать, за какие границы им не дано или не разрешено переходить. Атеисы здесь имеют только ориентиры светской морали, но они, поверьте, помогают….\\n'\r\n        }\r\n    },\r\n    library: {\r\n        tabs: {\r\n            our_publications: 'Наши публикации'\r\n        }\r\n    },\r\n    articlePublishing: {\r\n        createArticle: {\r\n            title: {\r\n                create: {\r\n                    label: 'СОЗДАНИЕ СТАТЬИ',\r\n                },\r\n                edit: {\r\n                    label: 'Редактирование статьи',\r\n                }\r\n            },\r\n            fullScreen: 'Развернуть на весь экран',\r\n            collapse: 'Свернуть',\r\n            saveAs: 'Сохранить как черновик',\r\n            fields: {\r\n                nameArticle: {\r\n                    label: 'Название статьи',\r\n                    placeholder: 'Введите название статьи',\r\n                    required: true\r\n                },\r\n                subject: {\r\n                    label: 'Направление',\r\n                    placeholder: 'Выберите направление',\r\n                    required: true,\r\n                    btnLabel: 'Загрузить изображение для заголовка'\r\n                },\r\n                annotation: {\r\n                    label: 'Аннотация',\r\n                    required: true\r\n                },\r\n                upLoadFile: 'Загрузить изображение',\r\n                changeFile: 'Изменить изображение',\r\n                deleteFile: 'Удалить изображение',\r\n                textFile: 'Данное изображение будет отображаться около названия вашей статьи',\r\n                textArticle: {\r\n                    label: 'Текст статьи',\r\n                    link: 'Загрузить текстовый файл'\r\n                },\r\n                keyWords: {\r\n                    label: 'Ключевые слова',\r\n                    placeholder: 'Ведите ключевые слова'\r\n                },\r\n                actions: {\r\n                    preview: 'ПРЕДПРОСМОТР',\r\n                    closePreview: 'Закрыть предпросмотр',\r\n                    submit: 'Отправить на проверку',\r\n                    cancel: 'Отмена'\r\n                }\r\n            }\r\n        },\r\n        publishing_rules: {\r\n            rules: {\r\n                title: 'Правила публикации статьи',\r\n                text: [\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                ]\r\n            },\r\n            aboutModeration: {\r\n                title: 'О модерации',\r\n                text: [\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    infoArticle: {\r\n        moreArticles: 'ЕЩЕ ПО ТЕМЕ',\r\n        comments: {\r\n            title: 'Коментариии',\r\n            allComments: 'ВСЕ КОММЕНТАРИИ',\r\n            placeholder: 'Напишите ваш комментарий...',\r\n            collapse: 'СВЕРНУТЬ КОМЕНТАРИИ',\r\n            reply: 'Ответить',\r\n            send: 'Отправить'\r\n        }\r\n    },\r\n    my_publications: {\r\n        tabs: {\r\n            all_my_publications: 'Все публикации',\r\n            published: 'Опубликованные',\r\n            draft: 'Черновик',\r\n            review: 'Неопубликованные',\r\n            archive: 'Архив',\r\n            declined: 'Отклонены'\r\n        },\r\n        status: {\r\n            published: 'Опубликована',\r\n            draft: 'Черновик',\r\n            review: 'На рассмотрении',\r\n            archive: 'В архиве',\r\n            declined: 'Отклоненa администратором',\r\n\r\n        },\r\n        menu: {\r\n            edit: 'Редактировать',\r\n            delete: 'Удалить'\r\n        }\r\n    },\r\n    administration: {\r\n        tabs: {\r\n            users: 'Пользователи',\r\n            articles: 'Публикации',\r\n            events: 'События',\r\n        },\r\n        table: {\r\n            users: {\r\n                name: {\r\n                    label: 'ФИО',\r\n                    style: {width: '34%'},\r\n                    type: 'text'\r\n                },\r\n                email: {\r\n                    label: 'E-mail',\r\n                    style: {width: '20%'},\r\n                    type: 'text'\r\n                },\r\n                dataRegistration: {\r\n                    label: 'Дата регистрации',\r\n                    style: {width: '21%'},\r\n                    type: 'date'\r\n                },\r\n                status: {\r\n                    label: 'Статус',\r\n                    style: {width: '25%'},\r\n                    type: 'actions'\r\n                }\r\n            },\r\n            articles: {\r\n                name: {\r\n                    label: 'Название публикации',\r\n                    style: {width: '34%'},\r\n                    type: 'text'\r\n                },\r\n                subject: {\r\n                    label: 'Направление',\r\n                    style: {width: '20%'},\r\n                    type: 'text'\r\n                },\r\n                dataCreate: {\r\n                    label: 'Дата создания',\r\n                    style: {width: '21%'},\r\n                    type: 'text'\r\n                },\r\n                status: {\r\n                    label: 'Статус',\r\n                    style: {width: '25%'},\r\n                    type: 'actions'\r\n                }\r\n            },\r\n            events: {\r\n                name: {\r\n                    label: 'Название события',\r\n                    style: {width: '55%'},\r\n                    type: 'text'\r\n                },\r\n                dateCreate: {\r\n                    label: 'Дата создания',\r\n                    style: {width: '20%'},\r\n                    type: 'text'\r\n                },\r\n                datePublication: {\r\n                    label: 'Дата публикации',\r\n                    style: {width: '20%'},\r\n                    type: 'text'\r\n                }\r\n            }\r\n        },\r\n        notFoundData: {\r\n            users: 'Нет пользователей',\r\n            articles: 'Нет публикаций',\r\n            events: 'Нет событий'\r\n        },\r\n        status: {\r\n            active: 'Зарегистрирован',\r\n            declined: 'Отклонен',\r\n            locked: 'Заблокирован',\r\n            deleted: 'Удален',\r\n            published: 'Опубликована'\r\n        },\r\n        other: {\r\n            requestUser: 'Запроc на регистрацию',\r\n            requestArticle: 'Запроc на публикацию'\r\n        },\r\n       /* status: {\r\n            active: 'Регистрация подтверждена',\r\n            declined: 'Регистрация отклонена ',\r\n            locked: 'Пользователь заблокирован',\r\n            deleted: 'Пользователь удален'\r\n        },*/\r\n        menu: {\r\n            locked: 'Заблокировать',\r\n            unlocked: 'Разблокировать',\r\n            deleted: 'Удалить'\r\n        },\r\n        buttons: {\r\n            confirm: 'Принять',\r\n            reject: 'Отклонить',\r\n            delete: 'Удалить'\r\n        }\r\n    },\r\n    createEvent: {\r\n        title: {\r\n              edit: {\r\n                  label: 'Редактирование события'\r\n              },\r\n              create: {\r\n                  label: 'Создание события'\r\n              }\r\n        },\r\n        fields: {\r\n            publishDate: {\r\n                label: 'Дата публикации',\r\n            },\r\n            caption: {\r\n                label: 'Заголовок события',\r\n                placeholder: 'Введите заголовок события'\r\n            },\r\n            text: {\r\n                label: 'Текст события',\r\n                placeholder: 'Введите описание события'\r\n            },\r\n            actions: {\r\n                save: 'Сохранить',\r\n                cancel: 'Отмена'\r\n            }\r\n        }\r\n    },\r\n    footer: {\r\n        home: {\r\n            title: 'ГЛАВНАЯ',\r\n            array: [\r\n                {\r\n                    newArtciles: 'Новые статьи',\r\n                    link: 'new_artciles',\r\n                    tab: ''\r\n                },\r\n                {\r\n                    popularArtciles: 'Популярные статьи',\r\n                    link: 'popular_artciles',\r\n                    tab: ''\r\n                }\r\n            ]\r\n        },\r\n        about: {\r\n            title: 'О СООБЩЕСТВЕ',\r\n            array: [\r\n                {\r\n                    mission: 'Миссия',\r\n                    link: 'about',\r\n                    tab: 'mission'\r\n                },\r\n                {\r\n                    preamble: 'Преамбула',\r\n                    link: 'about',\r\n                    tab: 'preamble'\r\n                },\r\n                {\r\n                    aim: 'Основные цели',\r\n                    link: 'about',\r\n                    tab: 'aim'\r\n                },\r\n                {\r\n                    specifications: 'Конкретизации',\r\n                    link: 'about',\r\n                    tab: 'specifications'\r\n                }\r\n            ]\r\n        },\r\n        activities: {\r\n            title: 'ДЕЯТЕЛЬНОСТЬ',\r\n            array: [\r\n                {\r\n                    members: 'Члены сообщества',\r\n                    link: 'activities',\r\n                    tab: 'members'\r\n                },\r\n                {\r\n                    formsActivities: 'Форма дейтельности ',\r\n                    link: 'activities',\r\n                    tab: 'formsActivities'\r\n                },\r\n                {\r\n                    contacts: 'Контактная информация',\r\n                    link: 'activities',\r\n                    tab: 'contacts'\r\n                },\r\n                {\r\n                    events: 'События',\r\n                    link: 'activities',\r\n                    tab: 'events'\r\n                },\r\n                {\r\n                    codex: 'Кодекс',\r\n                    link: 'activities',\r\n                    tab: 'codex'\r\n                },\r\n            ]\r\n        },\r\n        library: {\r\n            title: 'БИБЛИОТЕКА',\r\n            array: [\r\n                {\r\n                    ourPublications: 'Наши публикации',\r\n                    link: 'library',\r\n                    tab: 'our_publications'\r\n                },\r\n                {\r\n                    OtherPublications: 'Другие публикации',\r\n                    link: 'library',\r\n                    tab: 'Other_publications'\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    other: {\r\n        textNoData: 'Нет публикаций'\r\n    }\r\n};","/**\r\n * Created by smalkov on 05.09.2018.\r\n */\r\nimport React from \"react\";\r\n\r\nexport const TranslateInterface_En = {\r\n    header: {\r\n        language: [\r\n            { key: 0, text: 'Русский', value: 'ru' },\r\n            { key: 1, text: 'English', value: 'en' },\r\n            { key: 2, text: 'Deutsch', value: 'de' }\r\n        ],\r\n        feedBack: {\r\n            link: 'Connect us',\r\n            dialog: {\r\n                title: 'Sending a request',\r\n                theme: {\r\n                    label: 'Theme',\r\n                    placeholder: 'Enter theme'\r\n                },\r\n                description: {\r\n                    label: 'Description',\r\n                    placeholder: 'Enter description'\r\n                },\r\n                btn: {\r\n                    label: 'Send'\r\n                }\r\n\r\n            }\r\n        },\r\n        title: 'NETWORK TECHNOLOGY CENTER',\r\n        menuNavigation: {\r\n            home: 'HOME',\r\n            about: 'COMMUNITY',\r\n            activities: 'ACTIVITIES',\r\n            library: 'LIBRARY',\r\n            my_publications: 'MY PUBLICATIONS'\r\n        },\r\n        authorization: {\r\n            signUp: 'Sign Up',\r\n            signIn: 'Sign In',\r\n            account: 'the personal account',\r\n            dialog: {\r\n                text: {\r\n                    auth: {\r\n                        text_1: 'To enter the portal, enter the login and password specified during registration',\r\n                        text_2: 'No account? ',\r\n                        text_3: 'Sign up'\r\n                    },\r\n                    reg: {\r\n                        text_1: 'Have an account?',\r\n                        text_2: 'Sign in'\r\n                    }\r\n                },\r\n                registrationTitle: 'Registration',\r\n                successRegistration: {\r\n                    title: 'Registration successfully completed',\r\n                    text: ''\r\n                },\r\n                errorRegistration: 'Error registration',\r\n                backPortal: 'Return to the portal',\r\n                authTitle: 'Login to your account',\r\n                fio: {\r\n                    label: 'Full name',\r\n                    placeholder: 'Enter name'\r\n                },\r\n                email: {\r\n                    label: 'e-mail',\r\n                    placeholder: 'Enter e-mail'\r\n                },\r\n                password: {\r\n                    label: 'Password',\r\n                    placeholder: 'Enter password'\r\n                },\r\n                registrationText: {\r\n                    link_1: 'privacy Policy',\r\n                    link_2: 'user agreement',\r\n                    text_1: 'By registering, you agree to the terms and conditions ',\r\n                    text_2: ' and ',\r\n                },\r\n                signUp: 'Sign up',\r\n                signIn: 'Sign in',\r\n                socialRegistration: 'Password'\r\n            }\r\n        },\r\n        user: {\r\n            published: 'Add article',\r\n            profileMenu: {\r\n                settings: \"Setting profile\",\r\n                published: \"My publications\",\r\n                administration: \"Administration\",\r\n                signOut: \"Sign Out\"\r\n            }\r\n        },\r\n        search: 'Search the portal...',\r\n        mobileMenu: {\r\n            language: 'LANGUAGE',\r\n            feedBack: 'CONNECT US',\r\n            exit: 'LOG OUT'\r\n        }\r\n    },\r\n    home: {\r\n        leftPanel: {\r\n            newArticles: {\r\n                title: 'New articles',\r\n                link:{\r\n                    name: 'new_articles',\r\n                    label: 'All new articles'\r\n                }\r\n            },\r\n            popularArticles: {\r\n                title: 'Popular articles',\r\n                link: {\r\n                    name: 'popular_articles',\r\n                    label: 'All popular articles'\r\n                }\r\n            },\r\n            readNext: 'Read more'\r\n        },\r\n        rightPanel: {\r\n            title: 'EVENTS',\r\n            linkTitle: 'All events'\r\n        },\r\n        subscription: {\r\n            title: 'Subscribe to the daily newsletter',\r\n            placeholder: 'Enter e-mail',\r\n            btnLabel: 'Subscribe'\r\n        }\r\n    },\r\n    setup: {\r\n        leftMenu: {\r\n            personalData: 'Personal data',\r\n           /* settingsAccount: 'Settings account'*/\r\n        },\r\n        rightPanel: {\r\n            personalData: 'Personal data',\r\n            name: {\r\n                label: 'Full name',\r\n                placeholder: 'Enter name'\r\n            },\r\n            rank: {\r\n                label: 'Science Degree',\r\n                placeholder: 'Enter Science degree'\r\n            },\r\n            birthday: {\r\n                label: 'Date of birth',\r\n                number: 'Number',\r\n                month: {\r\n                    label: 'Month',\r\n                    options: [\r\n                        \"January\", \"February\", \"March\",\r\n                        \"April\", \"May\", \"June\",\r\n                        \"July\", \"August\", \"September\",\r\n                        \"October\", \"November\",\"December\"\r\n                    ],\r\n                    optionsMonth: [\r\n                        \"January\", \"February\", \"March\",\r\n                        \"April\", \"May\", \"June\",\r\n                        \"July\", \"August\", \"September\",\r\n                        \"October\", \"November\",\"December\"\r\n                    ]\r\n                },\r\n                year: 'Year'\r\n            },\r\n            achievements: {\r\n                label: 'Scientific achievements'\r\n            },\r\n            about: {\r\n                label: 'About'\r\n            },\r\n            city: {\r\n                label: 'City',\r\n                placeholder: 'Enter city'\r\n            },\r\n            btnSave: 'Save changes',\r\n            avatar: {\r\n                photo: 'Photo',\r\n                notPhoto: 'Not photo',\r\n                download: 'Upload photo',\r\n                delete: 'Delete photo'\r\n            },\r\n            error: {\r\n                field: 'Fill out the required field'\r\n            }\r\n\r\n        }\r\n    },\r\n    about : {\r\n        tabs: {\r\n            mission: 'Mission statement',\r\n            introduction: 'Introduction',\r\n            goals: 'Main goals',\r\n            specifications: 'Specifications',\r\n        },\r\n        information: {\r\n            content: {\r\n                mission: {\r\n                    title: 'Mission statement',\r\n                    content: [ {\r\n                        p: {\r\n                            className: '',\r\n                            text: 'The closed network community is focused upon the cross-disciplinary concept of network structures with special emphasis upon its implications for modern-day humankind. The mission of this community is to help the people around the globe make good use of network structures’ enormous potential for the purpose of securing a peaceful, dignified and prosperous life for all citizens of Planet Earth \\n'\r\n                        }}, {\r\n                        p: {\r\n                            className: '',\r\n                            text: 'The community sets out to accomplish the following three interconnected objectives:'}},\r\n                        {ol: ['\\tConducting multidimensional and multidisciplinary  research concerning the concept of network structures , one of the core concepts of modern science,  and also the new role of network structures as a part of the emergent social, political, economic, and cultural superreality', '\\tMaking efforts to provide the material, legal, and psychological foundations   for the development and promotion of socially useful network structures and to harmonize their interaction with non-network structures such as centralized hierarchies and (quasi-)market structures', '\\tConsulting the members of network structures in various spheres of society including business, civil society, education, health care, etc.; helping them create optimum organizational scenarios for their specific goals']}]\r\n                },\r\n                introduction: {\r\n                    title: 'Introduction',\r\n                    content: [\r\n                        {br: 'It is widely accepted in the literature on “network science” that a network is  defined as any “set of items, which we will call vertices or sometimes nodes, with connections between them, called edges” (Newman, M. E. J. (2003). The structure and function of complex networks. SIAM Review, 45(2), 167–256; p.2), and this definition has been adopted by a large number of scientists and scholars around the world.  In terms of this interpretation, the analytical tools that deal with centrality measures, clustering, and community structure-related criteria, small-world behavior, and other network characteristics have provided important insights into the organization and functioning of various objects, including biological systems and human society.'},\r\n                        {br: 'While considering this general definition as the conceptual basis of its own activities, our community places special emphasis on a more specific interpretation of the network concept  that has already been used by some scholars in the humanities and social sciences, starting from the 1980s. “According to this more specific definition, not all sets of connected items may be called networks. '},\r\n                        {br: 'A network lacks a central pacemaker (leader, dominant element), and its activities and collective behaviors result from cooperation among its members often involving a number of partial leaders with limited power and competence. This is exemplified by the World Wide Web, which is largely based upon this organizational principle” (Oleskin, A. V. (2014). Network Structures in Biological Systems and in Human Society. Nova Science Publ. Hauppauge (New York); pp.11-12).'},\r\n                        {br: 'This interpretation is also exemplified by the associations of human individuals or their groups that lack a central leader (pace-maker, boss…). The functioning of such decentralized network structures is based on complex interactions among their multiple partial, project-oriented, or temporary quasi-leaders.  Such networks are contrasted with centralized hierarchies which are managed and controlled by a single leader (boss). Decentralized networks are also to be distinguished from market-type structures in which their members (nodes)  predominantly compete rather than cooperate with one another. Herebelow, we use the term “network structure” or just “network” to refer to such decentralized cooperative  network structures (DCNSs).'},\r\n                        {br: 'Of paramount scientific and philosophical importance is the fact that decentralization and internal cooperation represent universal organizational principles; therefore, analogs of what we call “DCNSs” are to be found in diverse kinds of systems, including conglomerations of stars, crystals, ensembles of elementary particles and technical devices. The diversity of network-structured systems notwithstanding, this community primarily concerns itself with the decentralized networks of human society and the human psyche; they are to be compared with DCNS analogs in various biological systems. This comparison enables singling out typical organizational paradigms to be creatively applied to human social networks.'}\r\n                    ],\r\n                },\r\n                goals: {\r\n                    title: 'Main goals',\r\n                    content: [\r\n                        {p: {\r\n                                className: 'text_blue',\r\n                                text: '1. Conducting basic and applied research on decentralized cooperative network structures.'\r\n                            }},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'In the long run, an unprecedented step should be taken: an interdisciplinary, initially altruistic, team of competent enthusiasts should be set up to deal with the aforementioned challenging task. To an extent, international networked research teams that have recently been established, e.g., in Santa-Fe and Palo-Alto (USA), can be regarded as its forerunners. The prospective team’s internal organisation  should conform with the principle of decentralised network organization. The intellectual production of the team is expected to enrich our knowledge in various fields of science. To reiterate, DCNSs represent an interdisciplinary phenomenon that, apart from human society, also exists in living nature, IT systems, and the human psyche; the notion of DCNSs also has important religious implications. Notwithstanding the above, a DCNSs-exploring creative team is expecte to produce the most important effect in IT, nano- and biotechnology, health care, social politics, and in economics. Owing to the interdisciplinary nature of DCNSs, the members of the prospective creative team will be able to take organizational scenarios used by a specific kind of systems and apply them to systems of a different kind. In particular, living nature provides the developers and promoters of decentralized network structures in human society with a whole palette of organizational recipes to be creatively modified and employed in human society. This goal includes the following important subgoals:'\r\n                            }},\r\n                        {ul: ['Exploring networks in business','Exploring networks in politics', 'Comparing networks in human society to those in biological systems', 'Understanding networks in the human psyche', 'Exploring networks in community-type social structures', '•\\tUnraveling network structures in the media', '•\\tProviding conceptual underpinnings for innovative networks']},\r\n                        {p: {\r\n                                className: 'text_blue',\r\n                                text: '2. Promoting and propagandizing constructive (useful) network structures in society.'\r\n                            }},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'We emphasize that the virtual community to be set up  will be involved in designing and implementing financial and legal measures as well as social-technology approaches and psychological techniques for the purpose of promoting socially useful (constructive, humanitarian, patriotic, etc.) network structures while exposing and suppressing “dark” (criminal, terrorist, corrupt, etc.) network structures. The following are the relevant subgoals:'\r\n                            }},\r\n                        {ul: ['Developing psychological networks-promoting techniques', '•\\tExploiting the media for the purpose of supporting and propagandizing useful DCNSs',\r\n                                'Using political platforms and movements for the purpose of supporting and propagandizing useful DCNSs', 'Providing adequate material support for DCNSs',\r\n                                'Developing an adequate legal framework for the development of DCNSs']},\r\n                        {p: {\r\n                                className: 'text_blue',\r\n                                text: '3. Consulting decentralized network structures.'\r\n                            }},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'In our opinion, establishing a system of state-sponsored or private investor-funded counseling bodies would be an expedient practical step. Such counseling bodies would help DCNSs cope with various kinds of organizational, technical, or psychological problems and issues these innovative structures will inevitably face in diverse spheres of society, including politics, business, helath care, education, and scientific research activities. Emphasis should be placed on the following subgoals:'\r\n                            }},\r\n                        {ul: ['Setting up business incubators', '•\\tConsulting intermediary (broker) networks',\r\n                                'Consuting hierarchies as they interact with DCNSs', 'Consulting social activists’ networks',\r\n                                'Consulting network governance regulators and decision-making network nodes (hubs)']},\r\n                    ]\r\n                },\r\n                specifications: {\r\n                    title: 'Specifications',\r\n                    content: [\r\n                        {p: {\r\n                                className: 'text_blue',\r\n                                text: 'Applying decentralized network organizational principles:\\n' +\r\n                                ' Association of Specialists in Microbial Communication, Neurochemicals, and Probiotics.  A Proposal. \\n'\r\n                            }},\r\n                        {br: 'The implementation of various paradigms of network structures can be illustrated in the example of an imaginary  network. It should actually be established, in the author’s opinion, for the purpose of bringing together the scientists and health care specialists that deal with the currently popular area of research combining Microbial Communication, Neurochemicals, and Probiotics. This network structure could be of direct relevance to  restorative medicine. Its importance is primarily due to the fact that microorganisms, including useful probiotics, produce a wide spectrum of neuroactive substances that influence the human brain. Taking account of this influence is of medical and psychological importance. This interdisciplinary field is not on the agenda of any research institute. Such institutes only deal with some of the facets of the issue separately'} ,\r\n                        {br: 'A pilot network structure for carrying out the aforementioned project comprises three modules that are concerned with the following subprojects'},\r\n                        {br: 'Module 1: Social Organization and Communication of Microorganisms'},\r\n                        {br: 'Module 2: Impact of Microbial Products on the Brain'},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'Module 3: Probiotics'\r\n                            }},\r\n                        {p: {\r\n                                className: 'text_blue',\r\n                                text: 'Applying decentralized network organizational principles: Exploration of Mars'\r\n                            }},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'The long-cherished dream of traveling to Mars and other celestial bodies  provides an opportunity to use network organizational principles both with regard to designing such a project and carrying it out. Space provides much room for innovative  international missions that can be based on decentralized network structures, and network technology in terms of space exploration projects is expected to prevent or mitigate conflicts in space and to impede all kinds of space arms race.'\r\n                            }},\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n    },\r\n    activities: {\r\n        tabs: {\r\n            members: 'Community members',\r\n            formsActivities: 'Forms activities',\r\n            contacts: 'Contact information',\r\n            events: 'Events',\r\n            codex: 'Ethtical statement'\r\n        },\r\n        communityMembers: {\r\n            title: 'Community members',\r\n            userInfoCard: {\r\n                title: 'USER CARD',\r\n                article: 'Articles'\r\n            }\r\n        },\r\n        formsActivities: {\r\n            title: 'Forms activities',\r\n            text: [{\r\n                textBlock: 'Within the framework of a closed on-line community, our activities f necessity  boil down to posting new dicta, texts, newspaper clippings, videos and pictures as well as criticizing  blogs produced by others. However, a really efficient virtual community should eventually  be devirtualized: it should set itself the goal of functioning in the actual world beyond the realm of websites and chats.  Decentralized networks that actually existed for millions of years before  the advent of the digital era as, e.g., nonhierarchical hunter-gatherer bands, and it is only natural for them to be predisposed for devirtualization that can take several different forms:',\r\n                list: [\r\n                    '\\tSetting up a successful real-life DCNS in any part of the world and in any sphere of society  – exemplified by a networked West-Antarctica Penguin Protection Club or an imaginary (so far)  networked nonhierarchical Clean Toilets alliance in Zimbabwe – will inevitably cause people elsewhere in the world and in a different sphere of society to set up similarly efficient decentralized network structures',\r\n                    '\\tSubmitting an application or a petition to governmental officials that is  aimed at promoting the development of any kind of network structures including, for instance, a network composed of  angry bank depositors, is expected to produce a resonance effect on society and result in strengthening the network-promoting movement  not only locally but–in the long run–also globally ',\r\n                    '\\tPublishing network-promoting materials in periodicals and propagandizing them in the media should exert  considerable influence on the mind and the heart  of the people at large',\r\n                    '\\tLast nor least, carrying out the dream of bringing together the community’s members during a professional conference or symposium or, what is still better, during the course of  project supported by a grant or subsidy'\r\n                ]\r\n            }]\r\n        },\r\n        contacts: {\r\n            title: 'CONTACTS',\r\n        },\r\n        events: {\r\n            title: 'EVENTS',\r\n        },\r\n        codex: {\r\n            title: 'Ethtical statement',\r\n            text: 'Contrary to a relatively widespread belief, science has never been ethically neutral. Scientists and scholars are to be held responsible for their activities; they have the power to help humankind and to do much harm to it. Network Structures, the professed subject of this community and a currently widespread social technology, are also ambivalent in terms of their impact on human society; they are not less potentially dangerous than nuclear  weapons  or genetic engineering. \\n' +\r\n            'The members and supporters of our community should be fully aware of their burden of ethical  responsibility\\n'\r\n\r\n    }\r\n    },\r\n    library: {\r\n        tabs: {\r\n            our_publications: 'Our publications'\r\n        }\r\n    },\r\n    articlePublishing: {\r\n        createArticle: {\r\n            title: {\r\n                label: 'New article',\r\n                create: {\r\n                    label: 'New article',\r\n                },\r\n                edit: {\r\n                    label: 'Edit article',\r\n                }\r\n            },\r\n            fullScreen: 'Maximize to full screen',\r\n            collapse: 'Collapse',\r\n            saveAs: 'Save as draft',\r\n            fields: {\r\n                nameArticle: {\r\n                    label: 'Title',\r\n                    placeholder: 'Enter title',\r\n                    required: true\r\n                },\r\n                subject: {\r\n                    label: 'Subject',\r\n                    required: true,\r\n                    placeholder: 'Choise subject',\r\n                    btnLabel: 'Upload image for title'\r\n                },\r\n                upLoadFile: 'Upload image',\r\n                changeFile: 'Change image',\r\n                deleteFile: 'Delete image',\r\n                textFile: 'This image will appear next to the title of your article',\r\n                annotation: {\r\n                    label: 'Annotation',\r\n                    placeholder: 'Enter annotation',\r\n                    required: true\r\n                },\r\n                textArticle: {\r\n                    label: 'Text',\r\n                    link: 'Download text file'\r\n                },\r\n                keyWords: {\r\n                    label: 'Key words',\r\n                    link: 'Enter key words'\r\n                },\r\n                actions: {\r\n                    preview: 'PREVIEW',\r\n                    closePreview: 'Close preview',\r\n                    submit: 'Submit for review'\r\n                }\r\n            }\r\n        },\r\n        publishing_rules: {\r\n            rules: {\r\n                title: 'Publishing rules articles',\r\n                text: [\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                ]\r\n            },\r\n            aboutModeration: {\r\n                title: 'About moderation',\r\n                text: [\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                    {label: 'Публикация не должна нарушать правила сайта'},\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    infoArticle: {\r\n        moreArticles: 'MORE ON THEME',\r\n        comments: {\r\n            title: 'Comments',\r\n            allComments: 'All COMMENTS',\r\n            placeholder: 'Write your comment...',\r\n            collapse: 'COLLAPSE COMMENTS',\r\n            reply: 'Reply',\r\n            send: 'Send'\r\n        }\r\n    },\r\n    my_publications: {\r\n        tabs: {\r\n            all_my_publications: 'All publications',\r\n            published: 'Published',\r\n            draft: 'Draft',\r\n            review: 'Unpublished',\r\n            archive: 'Archive',\r\n            declined: 'Declined'\r\n        },\r\n        status: {\r\n            published: 'Published',\r\n            draft: 'Draft',\r\n            review: 'Review',\r\n            archive: 'Archive',\r\n            declined: 'Declined',\r\n\r\n        },\r\n        menu: {\r\n            edit: 'Edit',\r\n            delete: 'Delete'\r\n        }\r\n    },\r\n    administration: {\r\n        tabs: {\r\n            users: 'Users',\r\n            articles: 'Publications',\r\n            events: 'Events',\r\n        },\r\n        table: {\r\n            users: {\r\n                name: {\r\n                    label: 'ФИО',\r\n                    style: {width: '34%'}\r\n                },\r\n                email: {\r\n                    label: 'E-mail',\r\n                    style: {width: '20%'}\r\n                },\r\n                dataRegistration: {\r\n                    label: 'Date of registration',\r\n                    style: {width: '21%'}\r\n                },\r\n                status: {\r\n                    label: 'Status',\r\n                    style: {width: '25%'}\r\n                }\r\n            },\r\n            articles: {\r\n                name: {\r\n                    label: 'Name ',\r\n                    style: {width: '34%'},\r\n                    type: 'text'\r\n                },\r\n                subject: {\r\n                    label: 'Subject',\r\n                    style: {width: '20%'},\r\n                    type: 'text'\r\n                },\r\n                dataCreate: {\r\n                    label: 'Date of creation',\r\n                    style: {width: '21%'},\r\n                    type: 'text'\r\n                },\r\n                status: {\r\n                    label: 'Status',\r\n                    style: {width: '25%'},\r\n                    type: 'actions'\r\n                }\r\n            },\r\n            events: {\r\n                name: {\r\n                    label: 'Name event',\r\n                    style: {width: '55%'},\r\n                    type: 'text'\r\n                },\r\n                dateCreate: {\r\n                    label: 'Date create',\r\n                    style: {width: '20%'},\r\n                    type: 'text'\r\n                },\r\n                datePublication: {\r\n                    label: 'Date publication',\r\n                    style: {width: '20%'},\r\n                    type: 'text'\r\n                }\r\n            }\r\n        },\r\n        notFoundData: {\r\n            users: 'Not users',\r\n            articles: 'Not publications',\r\n            events: 'Not events'\r\n        },\r\n        status: {\r\n            active: 'Registration confirmed',\r\n            declined: 'Registration rejected',\r\n            locked: 'User is blocked',\r\n            deleted: 'User deleted',\r\n            published: 'Published'\r\n        },\r\n        other: {\r\n            requestUser: 'Request for registration',\r\n            requestArticle: 'Request for publication'\r\n        },\r\n        menu: {\r\n           locked: 'Lock',\r\n            unlocked: 'Unlock',\r\n            deleted: 'Delete'\r\n        },\r\n        buttons: {\r\n            confirm: 'Confirm',\r\n            reject: 'Reject',\r\n            delete: 'Delete'\r\n        }\r\n    },\r\n    createEvent: {\r\n        title: {\r\n            edit: {\r\n                label: 'Edit event'\r\n            },\r\n            create: {\r\n                label: 'Create event'\r\n            }\r\n        },\r\n        fields: {\r\n            publishDate: {\r\n                label: 'Date publication',\r\n            },\r\n            caption: {\r\n                label: 'Title event',\r\n                placeholder: 'Enter title event...'\r\n            },\r\n            text: {\r\n                label: 'Text event',\r\n                placeholder: 'Enter text event...'\r\n            },\r\n            actions: {\r\n                save: 'Save',\r\n                cancel: 'Cancel'\r\n            }\r\n        }\r\n    },\r\n    footer: {\r\n        home: {\r\n            title: 'HOME',\r\n            array: [\r\n                {\r\n                    newArticles: 'New articles',\r\n                    link: 'new_artciles',\r\n                    tab: ''\r\n                },\r\n                {\r\n                    popularArticles: 'Popular articles',\r\n                    link: 'popular_artciles',\r\n                    tab: ''\r\n                }\r\n            ]\r\n        },\r\n        about: {\r\n            title: 'COMMUNITY',\r\n            array: [\r\n                {\r\n                    mission: 'Mission',\r\n                    link: 'about',\r\n                    tab: 'mission'\r\n                },\r\n                {\r\n                    preamble: 'Preamble',\r\n                    link: 'about',\r\n                    tab: 'preamble'\r\n                },\r\n                {\r\n                    aim: 'Main goals',\r\n                    link: 'about',\r\n                    tab: 'aim'\r\n                },\r\n                {\r\n                    specifications: 'Specifications',\r\n                    link: 'about',\r\n                    tab: 'specifications'\r\n                }\r\n            ]\r\n        },\r\n        activities: {\r\n            title: 'ACTIVITIES',\r\n            array: [\r\n                {\r\n                    members: 'Community members',\r\n                    link: 'activities',\r\n                    tab: 'members'\r\n                },\r\n                {\r\n                    formsActivities: 'Forms activities',\r\n                    link: 'activities',\r\n                    tab: 'formsActivities'\r\n                },\r\n                {\r\n                    contacts: 'Contact information',\r\n                    link: 'activities',\r\n                    tab: 'contacts'\r\n                },\r\n                {\r\n                    events: 'Events',\r\n                    link: 'activities',\r\n                    tab: 'events'\r\n                },\r\n                {\r\n                    codex: 'Codex',\r\n                    link: 'activities',\r\n                    tab: 'codex'\r\n                },\r\n            ]\r\n        },\r\n        library: {\r\n            title: 'LIBRARY',\r\n            array: [\r\n                {\r\n                    ourPublications: 'Our publications',\r\n                    link: 'library',\r\n                    tab: 'our_publications'\r\n                },\r\n                {\r\n                    otherPublications: 'Other publications',\r\n                    link: 'library',\r\n                    tab: 'Other_publications'\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    other: {\r\n        textNoData: 'No publications'\r\n    }\r\n};","/**\r\n * Created by smalkov on 05.09.2018.\r\n */\r\nimport React from \"react\";\r\n\r\nexport const TranslateInterface_De = {\r\n    header: {\r\n        language: [\r\n            { key: 1, text: 'Русский', value: 'ru' },\r\n            { key: 2, text: 'English', value: 'en' },\r\n            { key: 3, text: 'Deutsch', value: 'de' }\r\n        ],\r\n        feedBack: {\r\n            link: 'Kontaktieren Sie uns',\r\n            dialog: {\r\n                title: 'Anfrage senden',\r\n                theme: {\r\n                    label: 'Thema',\r\n                    placeholder: 'Betreff eingeben'\r\n                },\r\n                description: {\r\n                    label: 'Beschreibung',\r\n                    placeholder: 'Geben Sie eine Beschreibung ein'\r\n                },\r\n                btn: {\r\n                    label: 'Zu senden'\r\n                }\r\n\r\n            }\r\n        },\r\n        title: 'NETZWERK-TECHNOLOGIEZENTRUM',\r\n        menuNavigation: {\r\n            home: 'ZUHAUSE',\r\n            about: 'GEMEINSCHAFT',\r\n            activities: 'TÄTIGKEIT',\r\n            library: 'BIBLIOTHEK',\r\n            my_publications: 'MEINE VERÖFFENTLICHUNGEN'\r\n        },\r\n        authorization: {\r\n            signUp: 'Um sich zu registrieren',\r\n            signIn: 'Anmelden',\r\n            account: 'in einem privaten Büro',\r\n            dialog: {\r\n                text: {\r\n                    auth: {\r\n                        text_1: 'Um das Portal zu betreten, geben Sie den Benutzernamen und das Passwort ein, die während der Registrierung angegeben wurden',\r\n                        text_2: 'Kein Konto? ',\r\n                        text_3: 'Melde dich an'\r\n                    },\r\n                    reg: {\r\n                        text_1: 'Habe ein Konto?',\r\n                        text_2: 'Anmelden'\r\n                    }\r\n                },\r\n                registrationTitle: 'Registrierung',\r\n                successRegistration: {\r\n                    title: 'Die Registrierung wurde erfolgreich abgeschlossen',\r\n                    text: ''\r\n                },\r\n                errorRegistration: 'Registrierungsfehler',\r\n                backPortal: 'Kehre zum Portal zurück',\r\n                authTitle: 'Melden Sie sich bei Ihrem Konto an',\r\n                fio: {\r\n                    label: 'Vollständiger Name',\r\n                    placeholder: 'Name eingeben'\r\n                },\r\n                email: {\r\n                    label: 'E-Mail',\r\n                    placeholder: 'E-Mail eingeben'\r\n                },\r\n                password: {\r\n                    label: 'Passwort',\r\n                    placeholder: 'Passwort eingeben'\r\n                },\r\n                registrationText: {\r\n                    link_1: 'Datenschutzrichtlinie',\r\n                    link_2: 'Benutzervereinbarung',\r\n                    text_1: 'Mit der Registrierung stimmen Sie den Bedingungen zu ',\r\n                    text_2: ' und ',\r\n                },\r\n                signUp: 'Um sich zu registrieren',\r\n                signIn: 'Anmelden',\r\n                socialRegistration: 'Registrierung über soziale Netzwerke'\r\n            }\r\n        },\r\n        user: {\r\n            published: 'Füge einen Artikel hinzu',\r\n            profileMenu: {\r\n                settings: \"Profileinstellungen\",\r\n                published: \"Meine Veröffentlichungen\",\r\n                administration: \"Verwaltung\",\r\n                signOut: \"Ausstieg\"\r\n            }\r\n        },\r\n        search: 'Portalsuche...',\r\n        mobileMenu: {\r\n            language: 'SPRACHE',\r\n            feedBack: 'KONTAKTIEREN SIE UNS',\r\n            exit: 'AUSSTIEG'\r\n        }\r\n\r\n    },\r\n    home: {\r\n        leftPanel: {\r\n            newArticles: {\r\n                title: 'Neue Artikel',\r\n                link:{\r\n                    name: 'new_articles',\r\n                    label: 'Alle neuen Artikel'\r\n                }\r\n            },\r\n            popularArticles: {\r\n                title: 'Beliebte Artikel',\r\n                link: {\r\n                    name: 'popular_articles',\r\n                    label: 'Alle beliebten Artikel'\r\n                }\r\n            },\r\n            readNext: 'Weiter lesen'\r\n        },\r\n        rightPanel: {\r\n            title: 'EREIGNISSE',\r\n            linkTitle: 'Alle Ereignisse'\r\n        },\r\n        subscription: {\r\n            title: 'Abonnieren Sie den täglichen Newsletter',\r\n            placeholder: 'Geben Sie Ihre E-Mail-Adresse ein',\r\n            btnLabel: 'Jetzt abonnieren'\r\n        }\r\n    },\r\n    setup: {\r\n        leftMenu: {\r\n            personalData: 'Persönliche Daten',\r\n            /*settingsAccount: 'Настройка аккаунта'*/\r\n        },\r\n        rightPanel: {\r\n            personalData: 'Persönliche Daten',\r\n            name: {\r\n                label: 'Name Vorname',\r\n                placeholder: 'Name eingeben'\r\n            },\r\n            rank: {\r\n                label: 'Abschluss',\r\n                placeholder: 'Geben Sie einen Abschluss ein'\r\n            },\r\n            birthday: {\r\n                label: 'Geburtsdatum',\r\n                number: 'Zahl',\r\n                month: {\r\n                    label: 'Monat',\r\n                    options: [\r\n                        \"Januar\", \"Februar\", \"März\",\r\n                        \"April\", \"Mai\", \"Juni\",\r\n                        \"Juli\", \"August\", \"September\",\r\n                        \"Октябрь\", \"November\",\"Dezember\"\r\n                    ],\r\n                    optionsMonth: [\r\n                        \"Januar\", \"Februar\", \"März\",\r\n                        \"April\", \"Mai\", \"Juni\",\r\n                        \"Juli\", \"August\", \"September\",\r\n                        \"Октябрь\", \"November\",\"Dezember\"\r\n                    ]\r\n                },\r\n                year: 'Jahr'\r\n            },\r\n            achievements: {\r\n                label: 'Wissenschaftliche Errungenschaften'\r\n            },\r\n            about: {\r\n                label: 'Über mich'\r\n            },\r\n            city: {\r\n                label: 'Stadt',\r\n                placeholder: 'Geben Sie die Stadt ein'\r\n            },\r\n            avatar: {\r\n                photo: 'Fotografie',\r\n                notPhoto: 'Kein Foto',\r\n                download: 'Laden Sie ein Foto hoch',\r\n                delete: 'Foto löschen'\r\n            },\r\n            btnSave: 'Änderungen speichern',\r\n            error: {\r\n                field: 'Füllen Sie das erforderliche Feld aus'\r\n            }\r\n\r\n        }\r\n    },\r\n    about: {\r\n        tabs: {\r\n            mission: 'Mission',\r\n            preamble: 'Vorwort',\r\n            aim: 'Hauptziele',\r\n            specifications: 'Konkretisierung',\r\n        },\r\n        information: {\r\n            title: 'Центр сетевых технологий (ЦСТ) (NTC - Network Technology Center)',\r\n            content: {\r\n                mission: {\r\n                    title: 'Mission',\r\n                    content: [ {\r\n                        p: {\r\n                            className: '',\r\n                            text: 'Die geplante virtuelle Gemeinschaft befasst sich mit dem fachübergreifenden Netzwerkstrukturen-Konzept   unter besonderer Berücksichtigung  seiner Realisierung in der menschlichen Gesellschaft. Die Online-Gemeinschaft  sieht ihre Mission darin, die maximal vollständige Ausbeutung des enormen   Potentials von Sozial-Netzwerkstrukturen zu ermöglichen,  damit alle Bürger des Planeten Erde ein friedliches und prosperierendes – ein lebenswertes–Leben genießen können.'\r\n                        }}, {\r\n                        p: {\r\n                            className: '',\r\n                            text: 'Die Gemeinschaft  konzentriert sich auf drei miteinander verbundene Aufgaben:'}},\r\n                        {ol: ['\\tMultidisziplinäre fachübergreifende Forschung zum Thema „Netzwerkstrukturen als Kernkonzept der modernen Wissenschaft und zugleich als die neue soziale, ökonomische, kulturelle und politische Superrealität“','\\tAllseitige materielle und juristische Förderung und Unterstützung von sozial nützlichen Netzwerkstrukturen, Vermittlung ihrer Interaktionen mit Sozialstrukturen anderer Art (Hierarchien und Quasi-Marktstrukturen)', '\\tBeratung von Vertretern von Netzwerkstrukturen in verschiedenen Sozialsphären (die Business, die Bürgergesellschaft, das Bildungssystem, das Gesundheitswesen usw.), Hilfe bei der Erarbeitung optimaler Organisationsszenarien für die Realisierung ihrer spezifischen  Ziele ']}]\r\n                },\r\n                preamble: {\r\n                    title: 'Vorwort',\r\n                    content: [\r\n                        {br: 'Die beantragte geschlossene virtuelle Netzwerkgruppe soll sich mit dem fachübergreifenden Forschungsbereich  dezentralisierte Netzwerkstrukturen (dNs) beschäftigen. Die besondere Bedeutung des Forschungsbereichs  steht im Zusammenhang mit der zunehmenden Verbreitung derartiger Netzwerkstrukturen in verschiedenen Gesellschaftssphären. Eine Netzwerkstruktur (oder bloβ: ein Netzwerk) ist eine Gesamtheit von Elementen (Knoten), von denen einige durch Verbindungen (Kanten) miteinander verknüpft sind. Die Netzwerkrepräsentanz von einem System ermöglicht die Analyse einiger wesentlicher Eigenschaften des Systems, welche  die Prognostizierung seiner Verhaltensdynamik fördern sowie u. U. die Kontrolle über das System garantieren dürften.ermöglichen? In der ökologischen und auch sozialwissenschaftlichen Literatur werden Netzwerke oft als dezentralisierte kooperative Strukturen angesehen.'},\r\n                        {br: 'Typische Beispiele hierfür sind  Kollektive (Organisationen, Unternehmen,  Assoziationen, Gemeinschaften usw.), die keine Führungsperson an der Spitze haben und deren Funktionieren auf komplexen Interaktionen zwischen mehreren  Anführern mit zeitlich und/oder funktional begrenzter Autorität basiert. Solche dezentralisierten Strukturen sollten zentralisierten Hierarchien entgegengesetzt werden, in denen es einen zentralen Leader (Boss, Anführer) notwendigerweise gibt. Allerdings ist bei weitem nicht jede hierarchielose Struktur als dezentralisierte Netzwerkstruktur zu bezeichnen. Markt- oder Quasimarktstrukturen in denen Konkurrenz zwischen ihren Elementen und nicht ihre Kooperation dominiert  sind keine dNs unserer Ansicht nach.  Dezentralisierte Netzwerkstrukturen, die auf stabilen Kooperationsbeziehungen zwischen ihren Bestandteilen basieren, sind nicht nur in der menschlichen   Gesellschaft zu finden. Vielmehr handelt es sich um ein universelles Organisationsprinzip, dem dezentralisierte kooperative Interaktionen zugrundeliegen uns das sich auf die menschliche Gesellschaft  anwenden lässt. Analoga solcher dezentralisierter kooperativer Netzwerkstrukturen existieren in diversen Systemen, die von Sternassoziationen über Kristalle bis  hin zu Gruppen von Elementarteilchen und IT-Geräten reichen. '},\r\n                        {br: 'Ungeachtet der Vielfalt von Objekten, die sich als dNs darstellen lassen, konzentrieren wir uns in erster Linie auf Netzwerkstrukturen in der Gesellschaft und in der Innenwelt eines menschlichen Individuums, wobei wir sie mit ihren Analoga in diversen Biosystemen vergleichen.'},\r\n                    ],\r\n                },\r\n                aim: {\r\n                    title: 'Hauptziele',\r\n                    content: [\r\n                        {p: {\r\n                                className: 'text_blue',\r\n                                text: '1.\\tGrundlagen- und angewandte Forschungen zu Dezentralisierten Kooperativen Netzwerkstrukturen.'\r\n                            }},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'Langzeitperspektive haben wir eine bislang noch nie realisierte Idee im Sinn: es sollte eine fachübergreifende, anfänglich altruistische  Gemeinschaft von Enthusiasten gegründet werden, die sich der Erforschung von dezentralisierten kooperativen Netzwerkstrukturen widmen möchte! Als Vorläufer oder Analoga einer derartigen imaginären Gemeinschaft könnten vielleicht solche globalen interdisziplinären Forschungszentren wie die in Sante-Fe oder Palo-Alto (USA) gelten. Die innere Organisation der Gemeinschaft sollte dem dezentralisierten Netzwerk-Prinzip entsprechen. Ihre Tätigkeit (wenn auch als Freizeithobby betrachtet) könnte Beiträge zu unseren Kenntnissen auf verschiedenen Wissenschaftsgebieten leisten, zumal die Netzwerkstruktur einen fachübergreifenden Begriff darstellt. Er ist – neben der menschlichen Gesellschaft -- auf Bioobjekte, technische Einrichtungen oder die Psyche eines Individuums anwendbar; Netwerkstrukturen haben auch religiöse Konnotationen. Nichtsdestoweniger müsste der Haupteffekt der virtuellen dNs-Gemeinschaft in der menschlichen Gesellschaft zustandekommen, wobei vor allem an seine Wirkung auf das Gesundheitswesen, die IT- und Biotechnologie, die Sozialpolitik und die Wirtschaft zu denken ist. Dank ihres fachübergreifenden Charakters könnten dNs-Gemeinischaftsmitglieder Organisationsmuster von einem Wissenschaftsbereich auf einen anderen kreativ übertragen. Insbesondere bietet die lebende Natur eine reiche Palette von Organisationsrezepten für Netzwerkstrukturen-Entwickler und Förderer in der menschlichen Gesellschaft. Im Rahmen  von  dieser Zielsetzung möchten wir auf folgende Schwerpunkte hinweisen:'\r\n                            }},\r\n                        {ul: ['Netzwerkstrukturen im Business-Bereich', 'Netzwerkstrukturen in der Politik', 'Netzwerkstrukturen in der Biologie', 'Netzwerkstrukturen in der Psychologie unter Berücksichtigung  der menschlichen Intelligenz ',\r\n                                'Netzwerkstrukturen in Menschengruppen und Gemeinschaften', 'Netwerkstrukturen in den Medien', 'Innovative Netzwerkstrukturen']},\r\n                        {p: {\r\n                                className: 'text_blue',\r\n                                text: '2. Die Förderung und Propagierung von nützlichen (“positiven”) Netzwerkstrukturen in der Gesellschaft.'\r\n                            }},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'Die geplante virtuelle Gemeinschaft geht davon aus, dass finanzielle, gesetzliche und auch psychotechnologische Maβnahmen zur Förderung  von Netzwerken, die gesellschafltlich nützliche  (konstruktive, humanitäre, patriotische usw) Ziele verfolgen.Daneben sollten potentiell gefährliche Netzwerkstrukturen einschlieβlich korrumpierter oder terroristischer Schattennetzwerke aufgespürt und verharmlost werden, wobei die virtuelle Gemeinschaft auch eine Rolle spielen könnte.  Es gibt hiermit folgende wichtige Schwerpunkte:'\r\n                            }},\r\n                        {ul: ['Psychotechnische Ansätze', 'Informationsmedien als Mittel zur Förderung von Netzwerkstrukturen',\r\n                                'Politische Plattformen und Bewegungen als Potentiale für nützliche Netzwerke ', 'Materielle Unterstützung von Netzwerken',\r\n                                'Rechtliche Basis von Netzwerken']},\r\n                        {p: {\r\n                                className: 'text_blue',\r\n                                text: '3. Die Beratung von Netzwerkstrukturen. '\r\n                            }},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'Gemeinschaft setzt sich für die Entwicklung von staatlich oder privat finanzierten Beratungszentren, die den Vertretern von dezentralisierten Netzwerkstrukturen im Bereich der Politik, der Business, des Gesundheitswesen oder des Bildungssystems organisatorische, technische oder psychologische Probleme lösen helfen würden. Wir möchten dabei folgende Schwerpunkte hervorheben:'\r\n                            }},\r\n                        {ul: ['Beratung von Gründerzentren zur Unterstützung technologieorientierter, möglichst innovativer Neugründungen und Jungunternehmen', 'Beratung von Vermittler-Netzwerke',\r\n                                'Beratung von hierarchischen Strukturen', 'Beratung von Sozialaktivisten-Netwerken',\r\n                                'Beratung von Netwerk-Verwaltungsvertretern sowie von Entscheidungsfunktionsknoten']},\r\n                    ]\r\n                },\r\n                specifications: {\r\n                    title: 'Konkretisierung',\r\n                    content: [\r\n                        {p: {\r\n                                className: 'text_blue',\r\n                                text: 'Konkretisierung der obengenannten Ziele in Bezug auf das  Thema MIKROBIELLE KOMMUNIKATION, NEUROMEDIATOREN UND PROBIOTIKA'\r\n                            }},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'Derzeitdurchläuft die Mikrobiologie einen Paradigmenwechsel : im Mittelpunkt stehen jetzt nicht mikrobielle Reinkulturen sondern Mehrspezies-Assoziationen,  anstatt einzelner Zellen werden jetzt vorherrschend komplexe  integrierte Zellgemeinschaften (Kolonien, Biofilme, Flocs, Granulen usw)  erforscht, die einige exotische Mikrobiologen, z. B. James Shapiro und Eschell Ben-Jacob als mehrzellige Organismen bezeichnet werden. Kennzeichnend für solche Systeme ist ein intensiver Informationsaustausch zwischen mikrobielle Zellen; besonders eingehend wurde in den letzten Jahrzehnten verschiedene Varianten des Quorum-sensing-Phänomens untersucht. Mikrobielle Biofiulme wachsen in diversen ökologischen Nischen innerhalb des menschlichen Organismus, insbesondere im Darmkanal. Das letztgenannte Thema ist nicht nur von mikrobiologischer und klinischer (gastroenterologischer) Bedeutung, sondern auch von Interesse in Bezug auf die Neurologie (einschließlich der Neurochemie).  Es mehren sich Informationen über die gegenseitige Kommunikation zwischen der Mikrobiota und dem Wirtsorganismus „in der Sprache“ von Neuromediatoren und Hormonen, einschließlich des Serotonins, Noradrenalins, Dopamins, Histamins usw.  Vom neurochemischen Standpunkt aus verhält sich die sozial organisierte Mikrobiota  als Analogon des Gehirns des Wirtsorganismus. Aufgrund der Ausscheidung von Neuromediatoren sollte ein neurochemischer Effekt auch für viele der Mikroorganismen die heutztage als Probiotika betrachtet werden charakteristisch sein.'\r\n                            }},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'Die Gründung einer fachübergreifenden kreativen Labors ist eine aktuelle Herausforderung wegen der besonderen Bedeutung des Schnittpunkts zwischen der Mikrobiologie und der Neurochemie (sowie der Endokrinologie) im Zusammenhang mit den Interaktionen zwischen dem Wirt und der Mikrobiota. Die Enthusiasten, die das Labor etablieren würden, könnten verschiedene Fachbereiche vertreten; das Labor könnte allgemeine und medizinische Mikrobiologen, Neurologen, Gastroenterologen, Diätethiker, Pharmakologen usw. kombinieren.  Nichtsdestoweniger müssten sie alle gemeinsame Interessen haben- diese  wurden von uns oben kurz skizziert.'\r\n                            }},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'Leider ist es wegen des interdisziplinären Charakters des Netzwerklabor-Themas  kaum möglich, seine Tätigkeit im Rahmen eines existierenden hierarchischen Forschungsinstituts zu organisieren. Solche Forschungsinstitute spezialisieren sich hauptsächlich auf viel engere Problemfelder. Eine dezentralisierte Netzwerkstruktur mit mehreren fachspezialisierten Team-Leaders  bietet sich als natürliche Alternativform für ein solches kreatives Labor an. Es könnte Teams aus verschiedenen Forschungseinrichtungen einschließen. Ein solches anfänglich informelle Labor könnte  Anträge auf Zuschüsse stellen, Konferenzen (auch online-Symposia) organisieren, wissenschaftliche Werke verfassen und Behörden kontaktieren, die für die Realisierung kommerzieller und staatlicher Förderungsinitiativen verantwortlich sein sollen. '\r\n                            }},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'Interessanterweise ist in Russland eine informelle dezentralisierte Netzwerkstruktur von „Exoten“-Mikiobiologen vor einigen Jahren entstanden, die sich für das Sozialverhalten und die Kommunikation von Mikroorganismen interessieren und deshalb als Vorläufer des geplanten Enthusiasten-Labor  angesehen werden dürfte.'\r\n                            }},\r\n                        {p: {\r\n                                className: 'text_blue',\r\n                                text: 'Konkretisierung der obengenannten Ziele in Bezug auf das Thema WEG ZUM MARS'\r\n                            }},\r\n                        {p: {\r\n                                className: '',\r\n                                text: 'Der seit langem gehegte Traum, zum Mars und anderen Himmelskörpern zu fliegen,  bietet Gelegenheit für die Realisierung von Netzwerk-Prinzipien während der Erarbeitung eines derartigen Prjekts sowie während seiner  Verwirklichung. Der Weltraum  bietet viele Möglichkeiten für innovative international Missionen, die Netzwerkstrukturen kreativ benutzen können. Es ist zu erwarten, dass die Anwendung von dezentralisierten Netzwerkstrukturen auf Raumforschungsprojekte  alle Arten von Konflikten im Weltraum verhindern und die Raumwettrüstung hemmen würde.'\r\n                            }},\r\n                    ]\r\n                }\r\n            }\r\n        },\r\n    },\r\n    activities: {\r\n        tabs: {\r\n            members: 'Mitglieder',\r\n            formsActivities: 'Tätigkeitsformen',\r\n            contacts: 'Kontakte',\r\n            events: 'Ereignisse',\r\n            codex: 'Ethik'\r\n        },\r\n        communityMembers: {\r\n            title: 'Mitglieder',\r\n            userInfoCard: {\r\n                title: 'BENUTZERKARTE',\r\n                article: 'Artikel'\r\n            }\r\n        },\r\n        formsActivities: {\r\n            title: 'Tätigkeitsformen',\r\n            text: [{\r\n                textBlock: 'Die online Publikation von…von neuen Ideen, Texten, Zeitungsausschnitten , Videos und Bildern sowie die Kritik an anderen Bloggern sind die routinisierten/ Aktivitätsfomen, auf die die Mitglieder einer geschlossenen online-Gemeinschaft sich beschränken müssen. Aber nur eine solche online-Gemeinschaft kann unserer Meinung nach  als effizient gelten, die sich auch im wirklichen Leben außerhalb  von Webseiten und –Chats realisieren will!Die Spezifik von dezentralisierten Netzwerken – die im Laufe von vielen Jahrtausenden vor dem Entstehen der modernen digitalen Epoche in Form von hierarchielosen Jäger-Sammler-Gruppen existierten –besteht eben darin, dass sie sich devirtualisieren möchten. Dazu gibt es u. a. folgende Möglichkeiten:',\r\n                list: [\r\n                    'Publikation von praktischen Erfolgen von Netzwerkstrukturen, die sich in irgendeinem Land und in irgendeiner Gesellschaftssphären entwickeln  (die Netzwerke dürften sich z. B. mit dem Schutz von Pinguinen in der Westantarktis oder mit der Sauberkeit von Toiletten in Zimbabwe beschäftigen!) führt dazu, dass andere ähnliche Strukturen  anderswo zu schaffen versuchen',\r\n                    'Anträge an Politiker (Regierungsmitgliedern u. ä) mit dem Ziel, eine netzwerkfördernde politische Atmosphäre zu  schaffen und die Arbeit von Netzwerkentwicklern zu erleichtern (beispielsweise kann es sich um das Netzwerk von frustrierten  Bankkunden handeln); auch in diesem Fall ist ein Resonanzeffekt zu erwarten, der die Entwicklung von Netwerkstrukturen auf lokaler und auch globaler Ebene beschleunigen könnte',\r\n                    'Informationen über Netzwerkstrukturen  in Periodika und Filmen sollte einen bedeutenden Einfluss  auf  die Gehirne und die Herzen von Menschen ausüben',\r\n                    'Zuletzt (unser Haupttraum): die devirualisierte Zusammenarbeit von den Mitgliedern  dieser online-Gemeinschaft  im Rahmen einer beruflichen Tagung oder eines Symposiums/Kongresses oder, noch besser, im Rahmen eines bezuschußten Projekts'\r\n                ]\r\n            }]\r\n        },\r\n        contacts: {\r\n            title: 'KONTAKTE',\r\n        },\r\n        events: {\r\n            title: 'EREIGNISSE',\r\n        },\r\n        codex: {\r\n            title: 'Ethik',\r\n            text: 'Ungeachtet der ziemlich weit verbreiteten Meinung, ist die Wissenschaft nicht neutral in ethischer Hinsicht. Natur- und Sozialwissenschaftler  sind verantwortlich für die Folgen ihrer Tätigkeit; die für die Menschheit sowohl nützlich als auch schädlich sein könnte! Die Netzwerkstrukturen, mit denen unsere Gemeinschaft sich beschäftigt und die eine weit verbreitete Sozialtechnologie darstellen, sind ambivalent in Bezug auf ihren Einfluss auf die Gesellschaft; wegen ihrer potentiellen Effizienz könnten sie auch etwa so gefährlich wie Nuklearwaffen oder Gentechniken sein. Die Gründungsmitglieder und die Anhänger unserer online-Gemeinschaft sind sich dessen bewusst. Auch bei der Entwicklung neuer Netzwerke muss man sich ständig fragen: Ist meine Tätigkeit ethisch gerechtfertigt? Sind diese Netzwerke nicht etwa gefährlich? Anscheinend haben Gläubige einen Vorteil: sie sind sich  der geistigen Aspekte ihrer Tätigkeit bewusst. Letztendlich handelt es sich auch bei der Entwicklung von Netzwerken um die göttliche Vorsehung.  \\n' +\r\n            'Es ist in diesem Zusammenhng  von Bedeutung, dass die frühchristliche Kirche eine dezentralisierte Struktur darstellte. Das wurde beispielsweise in Paulus Galaterbrief betont. Jede Religion geht davon aus, dass es wichtige Grenzen gibt, die die Menschen nicht überschreiten dürfen! Im Kontrast dazu lassen sich Atheisten nur von irdischen ethischen Normen leiten; nichtsdestoweniger können unserer Meinung nach auch diese Normen für die Lösung ethischer Probleme behilflich sein,! '\r\n        }\r\n    },\r\n    library: {\r\n        tabs: {\r\n            our_publications: 'Alle Veröffentlichungen'\r\n        }\r\n    },\r\n    articlePublishing: {\r\n        createArticle: {\r\n            title: {\r\n                create: {\r\n                    label: 'Artikel erstellen',\r\n                },\r\n                edit: {\r\n                    label: 'Bearbeiten eines Artikels',\r\n                }\r\n            },\r\n            fullScreen: 'Erweitern Sie den Vollbildmodus',\r\n            collapse: 'Einklappen',\r\n            saveAs: 'Als Entwurf speichern',\r\n            fields: {\r\n                nameArticle: {\r\n                    label: 'Artikeltitel',\r\n                    placeholder: 'Geben Sie den Titel des Artikels ein',\r\n                    required: true\r\n                },\r\n                subject: {\r\n                    label: 'Richtung',\r\n                    placeholder: 'Wählen Sie ein Ziel',\r\n                    required: true,\r\n                    btnLabel: 'Laden Sie das Bild für den Titel herunter'\r\n                },\r\n                annotation: {\r\n                    label: 'Zusammenfassung',\r\n                    required: true\r\n                },\r\n                upLoadFile: 'Bild hochladen',\r\n                changeFile: 'Ändern Sie das Headerbild',\r\n                deleteFile: 'Bild löschen',\r\n                textFile: 'Dieses Bild erscheint neben dem Titel Ihres Artikels',\r\n                textArticle: {\r\n                    label: 'Artikeltext',\r\n                    link: 'Laden Sie die Textdatei herunter'\r\n                },\r\n                keyWords: {\r\n                    label: 'Stichworte',\r\n                    placeholder: 'Geben Sie Schlüsselwörter ein'\r\n                },\r\n                actions: {\r\n                    preview: 'VORSCHAU',\r\n                    closePreview: 'Vorschau schließen',\r\n                    submit: 'Zur Überprüfung einreichen'\r\n                }\r\n            }\r\n        },\r\n        publishing_rules: {\r\n            rules: {\r\n                title: 'Regeln für die Veröffentlichung eines Artikels',\r\n                text: [\r\n                    {label: 'Die Veröffentlichung sollte nicht gegen die Regeln der Website verstoßen'},\r\n                    {label: 'Die Veröffentlichung sollte nicht gegen die Regeln der Website verstoßen'},\r\n                    {label: 'Die Veröffentlichung sollte nicht gegen die Regeln der Website verstoßen'},\r\n                    {label: 'Die Veröffentlichung sollte nicht gegen die Regeln der Website verstoßen'},\r\n                    {label: 'Die Veröffentlichung sollte nicht gegen die Regeln der Website verstoßen'},\r\n                    {label: 'Die Veröffentlichung sollte nicht gegen die Regeln der Website verstoßen'}\r\n                ]\r\n            },\r\n            aboutModeration: {\r\n                title: 'Über Moderation',\r\n                text: [\r\n                    {label: 'Die Veröffentlichung sollte nicht gegen die Regeln der Website verstoßen'},\r\n                    {label: 'Die Veröffentlichung sollte nicht gegen die Regeln der Website verstoßen'}\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    infoArticle: {\r\n        moreArticles: 'MEHR ÜBER THEMA',\r\n        comments: {\r\n            title: 'Kommentare',\r\n            allComments: 'ALLE KOMMENTARE',\r\n            placeholder: 'Schreibe deinen Kommentar...',\r\n            collapse: 'EINKLAPPEN KOMMENTARE',\r\n            reply: 'Antwort',\r\n            send: 'Zu senden'\r\n        }\r\n    },\r\n    my_publications: {\r\n        tabs: {\r\n            all_my_publications: 'Alle Veröffentlichungen',\r\n            published: 'Veröffentlicht',\r\n            draft: 'Entwurf',\r\n            review: 'Unveröffentlicht',\r\n            archive: 'Archivieren',\r\n            declined: 'Abgelehnt'\r\n        },\r\n        status: {\r\n            published: 'Veröffentlicht',\r\n            draft: 'Entwurf',\r\n            review: 'Ausstehend',\r\n            archive: 'Im Archiv',\r\n            declined: 'Administrator wurde abgelehnt',\r\n\r\n        },\r\n        menu: {\r\n            edit: 'Redigieren',\r\n            delete: 'Löschen'\r\n        }\r\n    },\r\n    administration: {\r\n        tabs: {\r\n            users: 'Benutzer',\r\n            articles: 'Publikationen',\r\n            events: 'Ereignisse',\r\n        },\r\n        table: {\r\n            users: {\r\n                name: {\r\n                    label: 'Name',\r\n                    style: {width: '34%'}\r\n                },\r\n                email: {\r\n                    label: 'E-MAIL',\r\n                    style: {width: '20%'}\r\n                },\r\n                dataRegistration: {\r\n                    label: 'Registrationsdatum',\r\n                    style: {width: '21%'}\r\n                },\r\n                status: {\r\n                    label: 'Status',\r\n                    style: {width: '25%'}\r\n                }\r\n            },\r\n            articles: {\r\n                name: {\r\n                    label: 'Name der Veröffentlichung',\r\n                    style: {width: '34%'},\r\n                    type: 'text'\r\n                },\r\n                subject: {\r\n                    label: 'Richtung',\r\n                    style: {width: '20%'},\r\n                    type: 'text'\r\n                },\r\n                dataCreate: {\r\n                    label: 'Erstellungsdatum',\r\n                    style: {width: '21%'},\r\n                    type: 'text'\r\n                },\r\n                status: {\r\n                    label: 'Status',\r\n                    style: {width: '25%'},\r\n                    type: 'actions'\r\n                }\r\n            },\r\n            events: {\r\n                name: {\r\n                    label: 'Название события',\r\n                    style: {width: '55%'},\r\n                    type: 'text'\r\n                },\r\n                dateCreate: {\r\n                    label: 'Дата создания',\r\n                    style: {width: '20%'},\r\n                    type: 'text'\r\n                },\r\n                datePublication: {\r\n                    label: 'Дата публикации',\r\n                    style: {width: '20%'},\r\n                    type: 'text'\r\n                }\r\n            }\r\n        },\r\n        notFoundData: {\r\n            users: 'Keine Benutzer',\r\n            articles: 'Keine Veröffentlichungen',\r\n            events: 'Keine Ereignisse'\r\n        },\r\n        status: {\r\n            active: 'Registrierung bestätigt',\r\n            declined: 'Registrierung abgelehnt',\r\n            locked: 'Benutzer ist blockiert',\r\n            deleted: 'Benutzer gelöscht',\r\n            published: 'Veröffentlicht'\r\n        },\r\n        other: {\r\n            requestUser: 'Antrag auf Registrierung',\r\n            requestArticle: 'Antrag auf Veröffentlichung'\r\n        },\r\n        menu: {\r\n            locked: 'Blockieren',\r\n            unlocked: 'Entsperren',\r\n            deleted: 'Löschen'\r\n        },\r\n        buttons: {\r\n            confirm: 'Bestätigen',\r\n            reject: 'Ablehnen',\r\n            deleted: 'Löschen'\r\n        }\r\n    },\r\n    createEvent: {\r\n        title: {\r\n            edit: {\r\n                label: 'Ereignis bearbeiten'\r\n            },\r\n            create: {\r\n                label: 'Veranstaltung erstellen'\r\n            }\r\n        },\r\n        fields: {\r\n            publishDate: {\r\n                label: 'Datum',\r\n            },\r\n            caption: {\r\n                label: 'Titel der Veranstaltung',\r\n                placeholder: 'Geben Sie den Titel der Veranstaltung ein...'\r\n            },\r\n            text: {\r\n                label: 'Ereignistext',\r\n                placeholder: 'Geben Sie den Ereignistext ein...'\r\n            },\r\n            actions: {\r\n                save: 'Speichern',\r\n                cancel: 'Abbrechen'\r\n            }\r\n        }\r\n    },\r\n    footer: {\r\n        home: {\r\n            title: 'ZUHAUSE',\r\n            array: [\r\n                {\r\n                    newArtciles: 'Neue artikel',\r\n                    link: 'new_artciles',\r\n                    tab: ''\r\n                },\r\n                {\r\n                    popularArtciles: 'Beliebte artikel',\r\n                    link: 'popular_artciles',\r\n                    tab: ''\r\n                }\r\n            ]\r\n        },\r\n        about: {\r\n            title: 'GEMEINSCHAFT',\r\n            array: [\r\n                {\r\n                    mission: 'Mission',\r\n                    link: 'about',\r\n                    tab: 'mission'\r\n                },\r\n                {\r\n                    preamble: 'Vorwort',\r\n                    link: 'about',\r\n                    tab: 'preamble'\r\n                },\r\n                {\r\n                    aim: 'Hauptziele',\r\n                    link: 'about',\r\n                    tab: 'aim'\r\n                },\r\n                {\r\n                    specifications: 'Konkretisierung',\r\n                    link: 'about',\r\n                    tab: 'specifications'\r\n                }\r\n            ]\r\n        },\r\n        activities: {\r\n            title: 'TÄTIGKEIT',\r\n            array: [\r\n                {\r\n                    members: 'Mitglieder',\r\n                    link: 'activities',\r\n                    tab: 'members'\r\n                },\r\n                {\r\n                    formsActivities: 'Tätigkeitsformen',\r\n                    link: 'activities',\r\n                    tab: 'formsActivities'\r\n                },\r\n                {\r\n                    contacts: 'Kontakte',\r\n                    link: 'activities',\r\n                    tab: 'contacts'\r\n                },\r\n                {\r\n                    events: 'Ereignisse',\r\n                    link: 'activities',\r\n                    tab: 'events'\r\n                },\r\n                {\r\n                    codex: 'Ethik',\r\n                    link: 'activities',\r\n                    tab: 'codex'\r\n                },\r\n            ]\r\n        },\r\n        library: {\r\n            title: 'BIBLIOTHEK',\r\n            array: [\r\n                {\r\n                    ourPublications: 'Unsere Veröffentlichungen',\r\n                    link: 'library',\r\n                    tab: 'our_publications'\r\n                },\r\n                {\r\n                    OtherPublications: 'Andere Veröffentlichungen',\r\n                    link: 'library',\r\n                    tab: 'other_publications'\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    other: {\r\n        textNoData: 'Keine Veröffentlichungen'\r\n    }\r\n};","/**\r\n * Created by smalkov on 04.09.2018.\r\n */\r\n\r\n// react - redux\r\nimport React from \"react\";\r\n/*constants*/\r\nimport { TranslateInterface_Ru } from \"../../constants/language/InterfaceBuilder_Ru\"\r\nimport { TranslateInterface_En } from \"../../constants/language/InterfaceBuilder_En\"\r\nimport { TranslateInterface_De } from \"../../constants/language/InterfaceBuilder_De\"\r\n\r\nexport const TranslateInterface = language => {\r\n    let languageInterface = '';\r\n    switch (language) {\r\n        case 'ru': {\r\n            languageInterface = TranslateInterface_Ru;\r\n            break;\r\n        }\r\n        case 'en': {\r\n            languageInterface = TranslateInterface_En;\r\n            break;\r\n        }\r\n        case 'de': {\r\n            languageInterface = TranslateInterface_De;\r\n            break;\r\n        }\r\n        default: {\r\n            languageInterface = TranslateInterface_Ru;\r\n            break;\r\n        }\r\n    }\r\n    return (languageInterface)\r\n};","/**\r\n * Created by smalkov on 05.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\n/*semantic-ui components*/\r\nimport { Dropdown } from 'semantic-ui-react'\r\n/*css*/\r\nimport \"./menuNavigation.css\"\r\nimport 'semantic-ui-css/semantic.min.css';\r\n/*custom-components*/\r\n\r\n/**\r\n * Компонент рендеринга навигации кнопок\r\n */\r\n\r\n\r\nclass MenuNavigation extends React.PureComponent {\r\n\r\n    renderMenuButtons(buttons, activeButton, page, user) {//Отрисовка кнопок меню\r\n        if(buttons && buttons.length) {\r\n            return buttons.map((item, index) => {\r\n                if(!Object.keys(user).length && (item.name === 'my_publications' || item.name === 'library')) {\r\n                    return ''\r\n                } else {\r\n                    return (\r\n                        <div className={item.name === page ? `menu_button_${index} button-menu active-menu-button` : `menu_button_${index} button-menu`}\r\n                             key={`menu_button_${index}`}\r\n                             onClick={() => {\r\n                                 this.props.onClick(item.name);\r\n                             }}\r\n                        >{item.label}</div>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { buttons, className, activeButton = 0, page, user, exit, exitName } = this.props;\r\n\r\n        return (\r\n            <div id=\"menu-navigation\" className={className}>\r\n                {this.renderMenuButtons(buttons, activeButton, page, user)}\r\n                { exit && <div className=\"button-menu mobile_menu_exit_user\" onClick={exit}>{exitName}</div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (MenuNavigation)","/**\r\n * Created by smalkov on 12.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\n/*semantic-ui components*/\r\nimport { Button, Modal, Input, Icon} from 'semantic-ui-react'\r\n/*svgIcons*/\r\nimport { CloseIcon } from \"../../ui/svgIcons/svgIcons\"\r\n/*css*/\r\nimport \"./dialog.css\"\r\n\r\n/**\r\n *  Компонент отображения тектового списка с заголовком\r\n */\r\n\r\nclass Dialog extends React.PureComponent {\r\n\r\n    render() {\r\n        let { title = '', content = '', actions = '', className = '', isOpen, isIconClose, close } = this.props;\r\n\r\n        return (\r\n        <Modal\r\n            open={isOpen}\r\n            closeOnEscape={true}\r\n            closeOnDimmerClick={false}\r\n            onClose={close}\r\n            id=\"dialog_modal_window\"\r\n            className={className}\r\n        >\r\n            {title ? <Modal.Header>{title}</Modal.Header> : ''}\r\n            <Modal.Content>\r\n                {content}\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                {actions}\r\n            </Modal.Actions>\r\n            {isIconClose\r\n                ?   <div className=\"close icon\" onClick={close}>\r\n                        <CloseIcon/>\r\n                    </div>\r\n                        : ''}\r\n        </Modal>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default (Dialog);\r\n\r\n\r\n","/**\r\n * Created by smalkov on 06.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\n/*semantic-ui components*/\r\nimport { Icon } from 'semantic-ui-react'\r\n/*css*/\r\nimport \"./user.css\"\r\n\r\n/**\r\n *  Компонент отображения аватара с именем пользователя.\r\n */\r\n\r\nclass User extends React.PureComponent {\r\n\r\n    getAvatar(avatar_id) { //Отображение аватара\r\n        let imgAvatar = <div className=\"user_avatar\"><Icon name='user circle outline'/></div>;\r\n        if (avatar_id) {\r\n            imgAvatar = <div className=\"user_avatar\"\r\n                             style={{background: `url(${document.location.origin}/api/file/get?id=${avatar_id}) center no-repeat`,\r\n                                    border: '1px solid lightgray'\r\n                             }}/>\r\n        }\r\n        return imgAvatar\r\n    }\r\n\r\n    render() {\r\n        let { className, name, rank, avatar_id, date } = this.props;\r\n\r\n        return (\r\n            <div className={`user_info ${className}`}>\r\n                {this.getAvatar(avatar_id)}\r\n                <div className=\"user_name_science\">\r\n                    <div className=\"user_name\">{name}</div>\r\n                    <div className=\"user_science\">{rank}</div>\r\n                </div>\r\n                <div className=\"user_date\">{date}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (User)","/**\r\n * Created by smalkov on 05.09.2018.\r\n */\r\n\r\n// react - redux\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*semantic-ui components*/\r\nimport { Button, Modal, Input, Icon} from 'semantic-ui-react'\r\n/*svgIcons*/\r\nimport { CloseIcon } from \"../../ui/svgIcons/svgIcons\"\r\n/*utils*/\r\nimport { isAutoFocusMobile } from \"../../../utils/utils\";\r\n/*css*/\r\nimport \"./registration.css\"\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewPassword: false,\r\n            name: '',\r\n            login: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    close = () => this.setState({ open: false });\r\n\r\n    onChageRegistration(value, type) {\r\n        switch (type) {\r\n            case 'name': {\r\n                this.setState({name: value});\r\n                break;\r\n            }\r\n            case 'email': {\r\n                this.setState({login: value});\r\n                break;\r\n            }\r\n\r\n            case 'password': {\r\n                this.setState({password: value});\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkValidation(name, login, password) {\r\n        let check = true;\r\n        if (name && password) {\r\n            let array = login.split('@');\r\n            if (array[0] &&  array[1] && array[1].split('.') && array[1].split('.')[0] &&  array[1].split('.')[1])  {\r\n                check = false;\r\n            }\r\n        }\r\n        return check\r\n    }\r\n\r\n    render() {\r\n        let { registration, close, dialog, onRegAuth, handleTextFieldKeyDown, isOpenSignWindow, isOpenRegWindow } = this.props;\r\n        let { name, login, password, viewPassword } = this.state\r\n        let isDisabled = this.checkValidation(name, login, password);\r\n        let objReg = {\r\n            name: name,\r\n            login: login,\r\n            password: password,\r\n            type: 'LOGIN_PASSWORD'\r\n        };\r\n\r\n        return (\r\n            <Modal\r\n                open={registration.signUp || false}\r\n                closeOnEscape={true}\r\n                closeOnDimmerClick={false}\r\n                onClose={this.close}\r\n                className='registration_auth_panel registration'\r\n            >\r\n                <div>\r\n                    <Modal.Header>\r\n                        <div className=\"registration-auth_title\">{dialog.registrationTitle}</div>\r\n                    </Modal.Header>\r\n                    {registration.signUp === 'reg' &&\r\n                    <Modal.Content>\r\n                        <div className=\"ui input container focus\">\r\n                            <span>{dialog.fio.label}</span>\r\n                            <Input type=\"text\"\r\n                                   value={name}\r\n                                   placeholder={dialog.fio.placeholder}\r\n                                   autoFocus={isAutoFocusMobile()}\r\n                                   onKeyDown={(e) => {handleTextFieldKeyDown(e, 'reg', objReg, isDisabled)}}\r\n                                   onChange={(e) => this.onChageRegistration(e.currentTarget.value, 'name')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ui input container\">\r\n                            <span>{dialog.email.label}</span>\r\n                            <Input type=\"text\"\r\n                                   value={login}\r\n                                   placeholder={dialog.email.placeholder}\r\n                                   onKeyDown={(e) => {handleTextFieldKeyDown(e, 'reg', objReg, isDisabled)}}\r\n                                   onChange={(e) => this.onChageRegistration(e.currentTarget.value, 'email')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ui input container\">\r\n                            <span>{dialog.password.label}</span>\r\n                            <Input type={!viewPassword && \"password\" || \"text\"}\r\n                                   value={password}\r\n                                   placeholder={dialog.password.placeholder}\r\n                                   onKeyDown={(e) => {handleTextFieldKeyDown(e, 'reg', objReg, isDisabled)}}\r\n                                   onChange={(e) => this.onChageRegistration(e.currentTarget.value, 'password')}\r\n                            />\r\n                            <div className=\"view_password\"\r\n                                 onClick={() => {\r\n                                     this.setState({viewPassword: !viewPassword})\r\n                                 }}>{viewPassword && <Icon name='eye'/> || <Icon name='hide'/>}</div>\r\n                        </div>\r\n                        <div className='registration_text'>\r\n                            <span>{dialog.registrationText.text_1}</span>\r\n                            <span className=\"link\">{dialog.registrationText.link_1}</span>\r\n                            <span>{dialog.registrationText.text_2}</span>\r\n                            <span className=\"link\">{dialog.registrationText.link_2}</span>\r\n                        </div>\r\n                    </Modal.Content>\r\n                    }\r\n                    {registration.signUp === 'success' &&\r\n                    <Modal.Content>\r\n                        <div className=\"container_registration_success\">\r\n                            <div className=\"container_icon_check\">\r\n                                <Icon className=\"icon_check\" name=\"check\"/>\r\n                            </div>\r\n                            <div className=\"check_window_text\">{dialog.successRegistration.title}</div>\r\n                        </div>\r\n                    </Modal.Content>\r\n                    }\r\n                    {registration.signUp === 'error' &&\r\n                    <Modal.Content>\r\n                        <div className=\"container_registration_warning \">\r\n                            <div>\r\n                                <Icon className=\"icon_warning\" name=\"warning circle\"/>\r\n                            </div>\r\n                            <div className=\"check_window_text\">{registration.text || dialog.errorRegistration}</div>\r\n                        </div>\r\n                    </Modal.Content>\r\n                    }\r\n                    <Modal.Actions>\r\n                        {registration.signUp === 'reg' ?\r\n                            <Button className=\"btn_standart_style\"\r\n                                    disabled={isDisabled}\r\n                                    onClick={() =>{\r\n                                        onRegAuth(objReg, 'reg')}}>{dialog.signUp}\r\n                            </Button>\r\n                            :\r\n                            <Button className=\"btn_standart_style\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            name: '',\r\n                                            login: '',\r\n                                            password: ''\r\n                                        });\r\n                                        close();\r\n                                    }}>\r\n                                {dialog.backPortal}\r\n                            </Button>}\r\n                    </Modal.Actions>\r\n                    <div className=\"close icon\" onClick={close}>\r\n                        <CloseIcon/>\r\n                    </div>\r\n                    <div className=\"yes_sign_in\">\r\n                        <div className=\"yes_sign_in_text\">{dialog.text.reg.text_1}</div>\r\n                        <div\r\n                            className=\"yes_sign_in_link link\"\r\n                            onClick={() => {\r\n                                isOpenSignWindow(true);\r\n                                isOpenRegWindow(false);\r\n                            }}\r\n                        >{dialog.text.reg.text_2}</div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default (Registration)","/**\r\n * Created by smalkov on 05.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\n/*semantic-ui components*/\r\nimport { Button, Modal, Input, Icon} from 'semantic-ui-react'\r\n/*svgIcons*/\r\nimport { CloseIcon } from \"../../ui/svgIcons/svgIcons\"\r\nimport { isAutoFocusMobile } from \"../../../utils/utils\";\r\n/*css*/\r\nimport \"./auth.css\"\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass Auth extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewPassword: false,\r\n            login: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    onChangeAuth(value, type) {\r\n        this.setState({\r\n            [type]: value\r\n        })\r\n    }\r\n\r\n    close = () => this.setState({ open: false });\r\n\r\n    render() {\r\n        let { auth, close,  dialog, onRegAuth, handleTextFieldKeyDown, isOpenSignWindow, isOpenRegWindow, language } = this.props;\r\n        let { login, password, viewPassword } = this.state;\r\n        let objAuth = {\r\n            login: login,\r\n            password: password,\r\n            type: 'LOGIN_PASSWORD',\r\n            language: language\r\n        };\r\n\r\n        return (\r\n            <Modal\r\n                open={auth.signIn}\r\n                closeOnEscape={true}\r\n                closeOnDimmerClick={false}\r\n                onClose={this.close}\r\n                className='registration_auth_panel auth'\r\n            >\r\n                <div>\r\n                    <Modal.Header>\r\n                        <div className=\"registration-auth_title\">{dialog.authTitle}</div>\r\n                    </Modal.Header>\r\n                    <div className=\"yes_sign_in_title\">{dialog.text.auth.text_1}</div>\r\n                    <Modal.Content>\r\n                        <div className=\"ui input container\">\r\n                            <span>{dialog.email.label}</span>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"login\"\r\n                                value={login}\r\n                                autoFocus={isAutoFocusMobile()}\r\n                                placeholder={dialog.email.placeholder}\r\n                                onKeyDown={(e) => {handleTextFieldKeyDown(e, 'auth', objAuth, !login || !password)}}\r\n                                onChange={(e) => {\r\n                                    this.onChangeAuth(e.currentTarget.value, 'login');\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ui input container\">\r\n                            <span>{dialog.password.label}</span>\r\n                            <Input\r\n                                type={!viewPassword && \"password\" || \"text\"}\r\n                                name=\"password\"\r\n                                value={password}\r\n                                placeholder={dialog.password.placeholder}\r\n                                onKeyDown={(e) => {handleTextFieldKeyDown(e, 'auth', objAuth, !login || !password)}}\r\n                                onChange={(e) => {\r\n                                    this.onChangeAuth(e.currentTarget.value, 'password');\r\n                                }}\r\n                            />\r\n                            <div className=\"view_password\"\r\n                                 onClick={() => {\r\n                                     this.setState({viewPassword: !viewPassword})\r\n                                 }}>{viewPassword && <Icon name='eye'/> || <Icon name='hide'/>}</div>\r\n                            {auth.errorMessage ? <div className=\"error error_log_in\">{auth.errorMessage}</div> : ''}\r\n                        </div>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button\r\n                            disabled={!login || !password}\r\n                            className=\"btn_standart_style\"\r\n                            onClick={() => {\r\n                                onRegAuth(objAuth, 'auth');\r\n                            }}>{dialog.signIn}</Button>\r\n                    </Modal.Actions>\r\n                    <div className=\"close icon\" onClick={close}>\r\n                        <CloseIcon/>\r\n                    </div>\r\n                    <div className=\"yes_sign_in\">\r\n                        <div className=\"yes_sign_in_text\">{dialog.text.auth.text_2}</div>\r\n                        <div\r\n                            className=\"yes_sign_in_link link\"\r\n                            onClick={() => {\r\n                                isOpenSignWindow(false);\r\n                                isOpenRegWindow('reg');\r\n                            }}\r\n                        >{dialog.text.auth.text_3}</div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default (Auth)","const initState = {\r\n    isCheckedAuth: false,\r\n    signIn: false,\r\n    errorMessage: ''\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"WINDOW_SIGN_UP_IN\":\r\n            let isOpen = action.payload.isOpen;\r\n            return {\r\n                ...state,\r\n                ['signIn']: isOpen\r\n            };\r\n            break;\r\n        case \"CHECK_AUTH_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                isPending: false,\r\n                isFailure: false,\r\n                isCheckedAuth: action.payload.isCheckedAuth,\r\n                profile: action.payload.profile\r\n            };\r\n        break;\r\n        case \"CHECK_AUTH_PENDING\":\r\n            return {\r\n                ...state,\r\n                isPending: true,\r\n                isFailure: false,\r\n            };\r\n        break;\r\n        case \"CHECK_AUTH_FAIL\":\r\n            let errorMessage = action.payload.errorMessage;\r\n            return {\r\n                ...state,\r\n                errorMessage: errorMessage,\r\n            };\r\n        break;\r\n        default: break;\r\n\r\n    }\r\n    return state\r\n}","const initState = {\r\n    signUp: '',\r\n    isError: false,\r\n    text: ''\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'WINDOW_REGISTRATION': {\r\n            let isOpen = action.payload.isOpen;\r\n            return {\r\n                ...state,\r\n                signUp: isOpen,\r\n                isError: false,\r\n                text: ''\r\n            };\r\n            break;\r\n        }\r\n        case 'REGISTRATION':\r\n            let data = action.payload.data;\r\n            let signUp = 'success';\r\n            let isError = false;\r\n            let text = '';\r\n            if(data.status !== 200) {\r\n                signUp = 'error';\r\n                isError = true;\r\n                text = data.data.message;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                signUp: signUp,\r\n                isError: isError,\r\n                text: text\r\n            };\r\n            break;\r\n        default: break;\r\n\r\n    }\r\n    return state\r\n}","const initState = {};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'USER':{\r\n            let user = action.payload.user;\r\n            return {\r\n                ...user\r\n            }\r\n        }\r\n            break;\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","\r\nconst initState = {\r\n   language: '',\r\n   page: 'home'\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SWITCH_LANGUAGE':\r\n            let language = action.payload.language;\r\n            return {\r\n                ...state,\r\n                ['language']: language\r\n            }\r\n         break;\r\n        case 'SWITCH_PAGE': {\r\n            let page = action.payload.page;\r\n            return {\r\n                ...state,\r\n                ['page']: page\r\n            }\r\n        }\r\n            break;\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","const initState = {\r\n    params: {\r\n        tabLeftMenu: 'personalData',\r\n        edit: false\r\n    },\r\n    personalData: {\r\n        id: '',\r\n        birthday: '',\r\n        name: '',\r\n        rank: '',\r\n        avatarId: '',\r\n        newAvatar: '',\r\n        city: '',\r\n        about: '',\r\n        status: ''\r\n    }\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'USER':{\r\n                let user = action.payload.user;\r\n                return {\r\n                    ...state,\r\n                     personalData: user,\r\n                    params: {\r\n                        ...state.params,\r\n                        ['edit']: false\r\n                    }\r\n                }\r\n            break;\r\n            }\r\n        case 'CLEAR_SETUP_USER':{\r\n            return {\r\n                ...initState\r\n            }\r\n            break;\r\n        }\r\n        case 'SWITCH_SETUP_MENU_TAB': {\r\n            let tabMenu = action.payload.tabMenu;\r\n            return {\r\n                ...state,\r\n                ['tabLeftMenu']: tabMenu\r\n            }\r\n            break;\r\n        }\r\n        case 'SUCCESS_SAVE_DATA': {\r\n            let block = action.payload.block;\r\n            return {\r\n                [block]: {\r\n                    ...state,\r\n                },\r\n                params: {\r\n                    ...state.params,\r\n                    ['edit']: false\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'HANDLE_CHANGE_SETUP_DATA': {\r\n            let value = action.payload.value;\r\n            let type = action.payload.type;\r\n            let block = action.payload.block;\r\n            return {\r\n                ...state,\r\n                [block]: {\r\n                    ...state[block],\r\n                    [type]: value\r\n                },\r\n                params: {\r\n                    ...state.params,\r\n                    ['edit']: true\r\n                }\r\n\r\n            }\r\n            break;\r\n        }\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","const initState = {\r\n    newArticles: {},\r\n    popularArticles: {},\r\n    events: []\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'MAIN_PAGE_GET_SAVE_ARTICLES': {\r\n            let articles = action.payload.articles;\r\n            return {\r\n                ...state,\r\n                newArticles: articles,\r\n                popularArticles: articles\r\n            }\r\n            break;\r\n        }\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","const initState = {\r\n\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'GET_ARTICLE_INFO': {\r\n            let article = action.payload.article;\r\n            return {\r\n                ...article,\r\n            }\r\n            break;\r\n        }\r\n        case 'CLEAR_INFO_ARTICLE': {\r\n            return {\r\n                ...initState\r\n            }\r\n            break;\r\n        }\r\n        case 'SAVE_COMMENTS': {\r\n            let comments = action.payload.comments;\r\n            return {\r\n                ...state,\r\n                ['comments']: comments\r\n            }\r\n            break;\r\n        }\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","const initState = {\r\n    list: {}\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'GET_PUBLISH_EVENTS': {\r\n            let events = action.payload.events;\r\n            return {\r\n                ...events\r\n            }\r\n            break;\r\n        }\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","const initState = {\r\n    tabLeftAbout: 'mission',\r\n    communityMembers: {\r\n    users: []\r\n    }\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SWITCH_ABOUT_MENU_TAB': {\r\n            let tabMenu = action.payload.tabMenu;\r\n            return {\r\n                ...state,\r\n                ['tabLeftAbout']: tabMenu\r\n            }\r\n        }\r\n        default: break;\r\n    }\r\n    return state;\r\n}","\r\nconst initState = {\r\n    isOpen: false,\r\n    title: '',\r\n    text: '',\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'WARNING_DIALOG': {\r\n            let isOpen = action.payload.isOpen;\r\n            let title = action.payload.title;\r\n            let text = action.payload.text;\r\n            return {\r\n                ...state,\r\n                isOpen: isOpen,\r\n                title: title,\r\n                text: text\r\n            }\r\n            break;\r\n        }\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","const initState = {\r\n    article: {\r\n        id: null,\r\n        label: '',\r\n        subjectId: '',\r\n        annotation: '',\r\n        text: \"\",\r\n        imageId: null,\r\n        keyWords: null\r\n    },\r\n    params: {\r\n        subjects: [],\r\n        isFullScreenEditor: false,\r\n        preview: false,\r\n        edit: false,\r\n        create: false\r\n    }\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'ON_CHANGE_ARTICLE': {\r\n            let type = action.payload.type;\r\n            let text = action.payload.text;\r\n            return {\r\n                ...state,\r\n                article: {\r\n                    ...state.article,\r\n                    [type]: text\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'SAVE_SUBJECTS': {\r\n            let subjects = action.payload.subjects;\r\n            let newSubjects = [];\r\n            for(let i = 0; i < subjects.length; i++) {\r\n                let element = {\r\n                    key: i,\r\n                    text: subjects[i].label,\r\n                    value: subjects[i].id\r\n                };\r\n                newSubjects.push(element);\r\n            }\r\n            return {\r\n                ...state,\r\n                params: {\r\n                    ...state.params,\r\n                    ['subjects']: newSubjects\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case 'IS_FULL_SCREEN_PREVIEW_EDITOR': {\r\n            let isOpen = action.payload.isOpen;\r\n            let type = action.payload.type;\r\n            return {\r\n                ...state,\r\n                    params: {\r\n                        ...state.params,\r\n                        [type]: isOpen\r\n                    }\r\n            }\r\n            break;\r\n        }\r\n        case 'CLEAR_ARTICLE_CREATE': {\r\n            return {\r\n                ...initState\r\n            }\r\n            break;\r\n        }\r\n        case 'ARTICLE_EDIT': {\r\n            let articleEdit = action.payload.articleEdit;\r\n            return {\r\n                ...state,\r\n                params: {\r\n                    ...state.params,\r\n                    ['edit']: true\r\n                },\r\n                article: {\r\n                    ...articleEdit\r\n                }\r\n            }\r\n        }\r\n\r\n        case 'ARTICLE_CREATE': {\r\n            return {\r\n                ...state,\r\n                params: {\r\n                    ...state.params,\r\n                    ['create']: true\r\n                }\r\n            }\r\n        }\r\n\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","const initState = {\r\n    tabLeftLibrary: 'our_publications',\r\n    articles: {\r\n        our_publications: {},\r\n        other_publications: {},\r\n    }\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SWITCH_LIBRARY_MENU_TAB': {\r\n            let tabMenu = action.payload.tabMenu;\r\n            return {\r\n                ...state,\r\n                ['tabLeftLibrary']: tabMenu\r\n            }\r\n        }\r\n        case 'GET_ARTICLES_LIBRARY': {\r\n            let articles = action.payload.articles;\r\n            return {\r\n                ...state,\r\n                articles: {\r\n                    our_publications: {\r\n                        ...articles\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        default: break;\r\n    }\r\n    return state;\r\n}","const initState = {\r\n    isOpen: false,\r\n    label: '',\r\n    description: '',\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'FEEDBACK': {\r\n            let type = action.payload.type;\r\n            let value = action.payload.value;\r\n            return {\r\n                ...state,\r\n              [type]: value\r\n            }\r\n            break;\r\n        }\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","const initState = {\r\n    tabLeftLibrary: 'all_my_publications',\r\n    articles: {\r\n        all_my_publications: {},\r\n        published: {},\r\n        draft: {},\r\n        review: {},\r\n        archive: {},\r\n        declined: {}\r\n    }\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SWITCH_MY_PUBLICATIONS_MENU_TAB': {\r\n            let tabMenu = action.payload.tabMenu;\r\n            return {\r\n                ...state,\r\n                ['tabLeftLibrary']: tabMenu\r\n            }\r\n        }\r\n        case 'GET_MY_PUBLICATIONS': {\r\n            let articles = action.payload.articles;\r\n            let draft = [], published = [], review = [], archive = [], declined = [];\r\n            for(let i = 0; i < articles.length; i++) {\r\n                switch (articles[i].status) {\r\n                    case 'PUBLISHED': {\r\n                        published.push(articles[i]);\r\n                        break;\r\n                    }\r\n                    case 'DRAFT': {\r\n                        draft.push(articles[i]);\r\n                        break;\r\n                    }\r\n                    case 'REVIEW': {\r\n                        review.push(articles[i]);\r\n                        break;\r\n                    }\r\n                    case 'ARCHIVE': {\r\n                        archive.push(articles[i]);\r\n                        break;\r\n                    }\r\n                    case 'DECLINED': {\r\n                        declined.push(articles[i]);\r\n                        break;\r\n                    }\r\n                    default: break;\r\n                }\r\n            }\r\n\r\n            let newArticles = {\r\n               all_my_publications: articles,\r\n               published: published,\r\n               draft: draft,\r\n               review: review,\r\n               archive: archive,\r\n               declined: declined\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                articles: newArticles\r\n            }\r\n        }\r\n        default: break;\r\n    }\r\n    return state;\r\n}","const initState = {\r\n    file: '',\r\n    preview: ''\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'IMAGE_PREVIEW': {\r\n            let preview = action.payload.preview;\r\n            let file = action.payload.file;\r\n            return {\r\n                ...state,\r\n                preview: preview,\r\n                file: file,\r\n            }\r\n            break;\r\n        }\r\n        case 'CLEAR_PREVIEW': {\r\n            return {\r\n                ...initState\r\n            }\r\n            break;\r\n        }\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","const initState = {\r\n    tabLeftActivities: 'members',\r\n    communityMembers: {\r\n        users: {}\r\n    }\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SWITCH_ACTIVITIES_MENU_TAB': {\r\n            let tabMenu = action.payload.tabMenu;\r\n            return {\r\n                ...state,\r\n                ['tabLeftActivities']: tabMenu\r\n            }\r\n        }\r\n        case 'GET_LIST_USERS_ACTIVITIES': {\r\n            let listUsers = action.payload.listUsers;\r\n            return {\r\n                ...state,\r\n                communityMembers: {\r\n                    ...state.communityMembers,\r\n                    users: {\r\n                        ...listUsers\r\n                    }\r\n                },\r\n            }\r\n            break;\r\n        }\r\n        default: break;\r\n    }\r\n    return state;\r\n}","/*utils*/\r\nimport { sortField } from \"../../../utils/utils\";\r\n\r\nconst initState = {\r\n    tabLeftAdministration: 'users',\r\n    articles: {\r\n        list: {}\r\n    },\r\n    users: {\r\n        list: {}\r\n    },\r\n    events: {\r\n        list: {}\r\n    }\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'SWITCH_ADMINISTRATION_MENU_TAB': {\r\n            let tabMenu = action.payload.tabMenu;\r\n            return {\r\n                ...state,\r\n                ['tabLeftAdministration']: tabMenu\r\n            }\r\n        }\r\n        case 'ADMINISTRATION_GET_USERS': {\r\n            let reviewSort = [];\r\n            let dateSort = [];\r\n            let newUsersSort = [];\r\n            let users = action.payload.users;\r\n            for (let i = 0; i< users.length; i++) {\r\n                if (users[i].status === 'REVIEW') {\r\n                    reviewSort.push(users[i]);\r\n                } else {\r\n                    dateSort.push(users[i]);\r\n                }\r\n            }\r\n            newUsersSort = reviewSort.sort(sortField('createTime')).concat(dateSort.sort(sortField('createTime')));\r\n            return {\r\n                ...state,\r\n                ['users']: {\r\n                    list: newUsersSort\r\n                }\r\n            }\r\n        }\r\n        case 'ADMINISTRATION_GET_ARTICLES': {\r\n            let articles = action.payload.articles;\r\n            return {\r\n                ...state,\r\n                ['articles']: {\r\n                    list: articles\r\n                }\r\n            }\r\n        }\r\n        case 'ADMINISTRATION_GET_NEWS': {\r\n            let events = action.payload.events;\r\n            return {\r\n                ...state,\r\n                ['events']: events\r\n            }\r\n        }\r\n        case 'SAVE_EVENT': {\r\n            let newEvent = action.payload.newEvent;\r\n            let events = action.payload.events;\r\n            let isNewEvent = action.payload.isNewEvent;\r\n            if(events && !events.length || isNewEvent) {\r\n                events.push(newEvent)\r\n            } else {\r\n                for(let i = 0; i < events.length; i++) {\r\n                    if(events[i].id === newEvent.id) {\r\n                        events[i] = newEvent;\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                events: {\r\n                    ...state.events,\r\n                    ['list']: events\r\n                }\r\n            }\r\n        }\r\n\r\n        default: break;\r\n    }\r\n    return state;\r\n}","const initState = {\r\n    data: []\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SAVE_SUBJECTS': {\r\n            let subjects = action.payload.subjects;\r\n            return {\r\n                data: subjects\r\n            }\r\n            break;\r\n        }\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","const initState = {};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SAVE_USER_INFO_CARD':{\r\n            let userInfo = action.payload.userInfo;\r\n            return {\r\n                ...userInfo\r\n            }\r\n        }\r\n            break;\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","const initState = {\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'GET_EVENT_INFO': {\r\n            let event = action.payload.event;\r\n            return {\r\n                ...event,\r\n            }\r\n            break;\r\n        }\r\n        case 'CLEAR_INFO_EVENT': {\r\n            return {\r\n                ...initState\r\n            }\r\n            break;\r\n        }\r\n        case 'ONCHANGE_EVENT': {\r\n            let field = action.payload.field;\r\n            let value = action.payload.value;\r\n            return {\r\n                ...state,\r\n                [field]: value\r\n            }\r\n        }\r\n        default: break;\r\n    }\r\n\r\n    return state;\r\n}","/**\r\n * Created by admin on 28.07.2017.\r\n */\r\n\r\nconst month = [\r\n    \"Январь\", \"Февраль\", \"Март\",\r\n    \"Апрель\", \"Май\", \"Июнь\",\r\n    \"Июль\", \"Август\", \"Сентябрь\",\r\n    \"Октябрь\", \"Ноябрь\",\"Декабрь\"];\r\n\r\nconst timeParse =() => {\r\n    let hourse = new Date(new Date().setHours(new Date().getHours() + 1)).getHours();\r\n    let minutes = new Date().getMinutes();\r\n    if(hourse < 10) {\r\n        hourse = \"0\" + hourse\r\n    }\r\n\r\n    if(minutes < 10) {\r\n        minutes = \"0\" + minutes\r\n    }\r\n\r\n    return {\r\n        time: hourse + \":\" + minutes\r\n    }\r\n};\r\n\r\nconst dateParse =() => {\r\n    let date =  new Date(new Date().setHours(new Date().getHours() + 1));\r\n    let options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\r\n    let newDate = date.toLocaleString('en-GB', options).replace(',', ' ');\r\n    return {\r\n        newDate: newDate\r\n    }\r\n};\r\n\r\nconst initState = {\r\n    date: new Date(),\r\n    isCheckDate: true,\r\n    textError: \"\"\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"CHANGE_CALENDAR_DATE_PICKER_DAY\":{\r\n            let date = action.payload.date;\r\n            return {\r\n                ...state,\r\n                date: action.payload.date\r\n            }\r\n        }\r\n        case \"CALENDAR_DATA_VALIDATION_CHECK\":{\r\n            return {\r\n                ...state,\r\n                isCheckDate: action.payload.isCheckDate,\r\n                textError: action.payload.text,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import {combineReducers} from \"redux\";\r\n// import {routerReducer as routing} from \"react-router-redux\";\r\nimport auth from \"./components/auth\"\r\nimport registration from \"./components/registration\"\r\nimport user from \"./components/user\"\r\nimport settings from \"./components/settings\"\r\nimport setup from \"./components/setup\"\r\nimport articles from \"./components/articles\"\r\nimport infoArticle from \"./components/infoArticle\"\r\nimport events from \"./components/events\"\r\nimport about from \"./components/about\"\r\nimport warningDialog from \"./components/warningDialog\"\r\nimport articlePublishing from \"./components/articlePublishing\"\r\nimport library from \"./components/library\"\r\nimport feedBack from \"./components/feedBack\"\r\nimport myPublications from \"./components/myPublications\"\r\nimport imagePreview from \"./components/imagePreview\"\r\nimport activities from \"./components/activities\"\r\nimport administration from \"./components/administration\"\r\nimport subjects from \"./components/subjects\"\r\nimport userInfoCard from \"./components/userInfoCard\"\r\nimport infoEvent from  \"./components/infoEvent\"\r\nimport calendarDatePicker from  \"./components/calendarDatePicker\"\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    registration,\r\n    user,\r\n    setup,\r\n    about,\r\n    activities,\r\n    articles,\r\n    infoArticle,\r\n    events,\r\n    settings,\r\n    articlePublishing,\r\n    myPublications,\r\n    warningDialog,\r\n    library,\r\n    feedBack,\r\n    imagePreview,\r\n    administration,\r\n    subjects,\r\n    userInfoCard,\r\n    infoEvent,\r\n    calendarDatePicker\r\n});","/**\r\n * Created by smalkov on 05.09.2018.\r\n */\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport reducers from './reducers';\r\nimport history from \"../history\";\r\n\r\nimport {routerMiddleware} from 'react-router-redux'\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n\r\nconst preloadedState = {};\r\nfunction makeStore() {\r\n    return createStore(reducers,\r\n        preloadedState,\r\n        composeWithDevTools(applyMiddleware(thunk, routerMiddleware(history))));\r\n}\r\n\r\nconst ReduxStore = makeStore();\r\n\r\nexport default ReduxStore;","/**\r\n * Created by smalkov on 05.09.2018.\r\n */\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ReduxStore from \"./redux/ReduxStore\"\r\n\r\nlet history = createHistory();\r\nconst _push = history.push;\r\nconst _goBack = history.goBack;\r\nconst pagesWithConfirmation = ['edit', 'create'];\r\n\r\nexport const createNotificationDialog = (notyEvents, isCreateEntity) => {\r\n    const container = document.getElementById('noty');\r\n    let elem = <div></div>;\r\n\r\n    ReactDOM.render(elem, container);\r\n};\r\n\r\nconst callTheNotify = (move) => {\r\n\r\n    let pathArray = history.location.pathname.split('/');\r\n    let lastPointInThePath = pathArray[pathArray.length - 1];\r\n    let penultInThePath = pathArray[pathArray.length - 2];\r\n    let isConfirmationNeeded = pagesWithConfirmation.includes(lastPointInThePath) || pagesWithConfirmation.includes(penultInThePath);\r\n\r\n    if(isConfirmationNeeded){\r\n        const isCreateEntityPanel = lastPointInThePath === 'create' || penultInThePath === 'create';\r\n        let entityState = isCreateEntityPanel ? ReduxStore.getState().createEntity : ReduxStore.getState().editEntity;\r\n        let notyEvents = entityState.notyEvents;\r\n\r\n        if(notyEvents && notyEvents.dataWasChanged){\r\n            notyEvents.onDoNotSave = move;\r\n            createNotificationDialog(notyEvents, isCreateEntityPanel);\r\n        }else{\r\n            move();\r\n        }\r\n    }else{\r\n        move();\r\n    }\r\n\r\n};\r\n\r\nhistory.push = (push, state) => {\r\n    callTheNotify(()=>{_push(push, state)});\r\n};\r\n\r\nhistory.goBack = () => {\r\n    callTheNotify(_goBack);\r\n};\r\n\r\nexport default history;","export const API = {\r\n    USER: {\r\n        LOGIN: 'public/login',\r\n        LOGOUT: '/private/logout',\r\n        REGISTRATION: 'public/registration',\r\n        GET_USER_INFO: '/private/getUserInfo',\r\n        SAVE_USER: '/private/saveUser',\r\n        GET_ALL_USERS: 'private/getAllUsers',\r\n    },\r\n    ARTICLE: {\r\n        GET_ALL_ARTICLES: 'public/getAllArticles',\r\n        GET_ARTICLE: 'private/getArticle',\r\n        GET_MY_ARTICLES: 'private/getMyArticles',\r\n        SAVE_ARTICLE: 'private/saveArticle',\r\n        GET_FILTERED_ARTICLES: 'private/getFilteredArticles',\r\n        GET_ALL_ARTICLES_VERSIONS: 'private/getAllArticlesVersions'\r\n    },\r\n    SUBJECTS: {\r\n        GET_ALL_SUBJECTS: 'public/getAllSubjects'\r\n    },\r\n    FILES: {\r\n        FILE_SAVE: 'file/save',\r\n        FILE_GET: 'file/get'\r\n    },\r\n    ADMINISTRATION: {\r\n        GET_USERS: 'admin/getAllUsers ',\r\n        GET_ARTICLES: '',\r\n        SET_STATUS_USER: 'admin/setUserStatus',\r\n        GET_ALL_NEWS: 'private/getAllNews',\r\n        GET_PUBLISH_NEWS: 'public/getNews',\r\n        SAVE_NEWS: 'private/saveNews',\r\n        CONFIRM_ARTICLE: 'private/confirmArticle',\r\n        SET_STATUS_ARTICLE: '',\r\n        DECLINE_ARTICLE: 'private/declineArticle'\r\n    },\r\n    COMMENTS: {\r\n        SAVE_COMMMENT: 'public/saveComment'\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\n","/**\r\n * Created by smalkov on 04.09.2018.\r\n */\r\n\r\n// react - redux\r\nimport React from \"react\";\r\n/*semantic-ui components*/\r\nimport { Button, Dropdown, Icon } from 'semantic-ui-react'\r\n/*custom components*/\r\nimport User from \"../../../ui/user/User\";\r\nimport Registration from \"../../../../components/scenes/registration/Registration\";\r\nimport Auth from \"../../../../components/scenes/auth/Auth\";\r\n/*utils*/\r\nimport history from \"../../../../history\";\r\n/*css*/\r\nimport \"./headerUser.css\"\r\nimport { fetchData } from \"../../../../utils/fetchHelper\";\r\n/*constants*/\r\nimport { API } from \"../../../../redux/constant/UIConst\";\r\n\r\n\r\n/**\r\n * Компонент отвечающий за информацию о пользователе, регистрацию, авторизацию.\r\n */\r\n\r\nclass HeaderUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        let articles = document.getElementsByClassName('user_science');\r\n        if (articles && articles.length) {\r\n            for(let a = 0; a < articles.length; a++) {\r\n                articles[a].style.webkitBoxOrient = 'vertical';\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { Translate, auth, isOpenSignWindow, isOpenRegWindow, user, onClick, changeMenu, switchMenuNavigation,\r\n            clearArticle, createArticle, registration, myUserInfo, onRegAuth, handleTextFieldKeyDown, language,\r\n            administrationDefaultTab } = this.props;\r\n\r\n        return (\r\n            <div id=\"header_user\">\r\n                {!Object.keys(user).length ?\r\n                    <div className=\"header-sign\">\r\n                        <div className=\"header-sign-in\">\r\n                                <span\r\n                                    className=\"link\"\r\n                                    onClick={() => {\r\n                                        isOpenSignWindow(true)\r\n                                    }}\r\n                                >{Translate.header.authorization.signIn}</span>\r\n                            {/*<span>{Translate.header.authorization.account}</span>*/}\r\n                        </div>\r\n                        <div className=\"vertical-divider\"> или </div>\r\n                        <div\r\n                            className=\"header-sign-up link\"\r\n                            onClick={() => {\r\n                                isOpenRegWindow('reg')\r\n                            }}\r\n                        >{Translate.header.authorization.signUp}</div>\r\n                        <Registration\r\n                            className=\"registration\"\r\n                            registration={registration}\r\n                            dialog={Translate.header.authorization.dialog}\r\n                            handleTextFieldKeyDown={handleTextFieldKeyDown}\r\n                            isOpenSignWindow={isOpenSignWindow}\r\n                            isOpenRegWindow={isOpenRegWindow}\r\n                            onRegAuth={onRegAuth}\r\n                            close={() => {\r\n                                isOpenRegWindow('');\r\n                            }}\r\n                            onClickRegistration={onClick}\r\n                        />\r\n                        <Auth\r\n                            className=\"auth\"\r\n                            auth={auth}\r\n                            onRegAuth={onRegAuth}\r\n                            dialog={Translate.header.authorization.dialog}\r\n                            handleTextFieldKeyDown={handleTextFieldKeyDown}\r\n                            isOpenSignWindow={isOpenSignWindow}\r\n                            isOpenRegWindow={isOpenRegWindow}\r\n                            language={language}\r\n                            close={() => {\r\n                                isOpenSignWindow(false);\r\n                            }}\r\n                            onClickAuth={onClick}\r\n                        />\r\n                    </div> :\r\n                    <div className=\"header_user_info_auth\">\r\n                        <Button\r\n                            className=\"published_article_btn btn btn_user articles_btn_style btn_standart_style\"\r\n                            onClick={() => {\r\n                                switchMenuNavigation('article_publishing');\r\n                                history.push('/article_publishing');\r\n                                clearArticle();\r\n                                createArticle();\r\n                            }}\r\n                        ><Icon name=\"add\"/>{Translate.header.user.published}</Button>\r\n                        <div className=\"header_user_info_user_menu\"\r\n                             onClick={() => {\r\n                                 changeMenu('settings');\r\n                                 fetchData(API.USER.GET_USER_INFO, {}, myUserInfo);\r\n                                 }}>\r\n                            <User\r\n                                className=\"my_info_user\"\r\n                                name={user.name}\r\n                                rank={user.rank}\r\n                                avatar_id={user.avatarId}/>\r\n                            <Dropdown text=''>\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item text={Translate.header.user.profileMenu.settings}\r\n                                                   onClick={() => {\r\n                                                       changeMenu('settings');\r\n                                                       fetchData(API.USER.GET_USER_INFO, {}, myUserInfo);\r\n                                                   }}/>\r\n                                    <Dropdown.Item text={Translate.header.user.profileMenu.published}\r\n                                                   onClick={() => {\r\n                                                       history.push(`/my_publications`);\r\n                                                       switchMenuNavigation('my_publications');\r\n                                                   }}/>\r\n                                    {user.role === 'ADMIN'\r\n                                        ?   <Dropdown.Item text={Translate.header.user.profileMenu.administration}\r\n                                                           onClick={() => {\r\n                                                               history.push(`/administration/${administrationDefaultTab}`);\r\n                                                               switchMenuNavigation('administration');\r\n                                                           }}/> : ''}\r\n                                    <Dropdown.Item text={Translate.header.user.profileMenu.signOut}\r\n                                                   onClick={() => {\r\n                                                       myUserInfo({});\r\n                                                       isOpenSignWindow(false);\r\n                                                       switchMenuNavigation('home');\r\n                                                       history.push(`/`);\r\n                                                       fetchData(API.USER.LOGOUT);\r\n                                                   }}/>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (HeaderUser)","export const CONSTANTS = {\r\n    LANGUAGE: {\r\n        ru: \"Русский\",\r\n        en: 'English',\r\n        de: 'Deutsch'\r\n    }\r\n};","/**\r\n * Created by smalkov on 04.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n/*semantic-ui components*/\r\nimport { Dropdown, Input, Button, Icon } from 'semantic-ui-react'\r\n/*svgIcons*/\r\nimport { CloseIcon, Menu, Search, Add } from \"../ui/svgIcons/svgIcons\"\r\n/*css*/\r\nimport \"./header.css\"\r\nimport 'semantic-ui-css/semantic.min.css';\r\n/*utils*/\r\nimport { fetchData, regAuthUser } from \"../../utils/fetchHelper\";\r\nimport { getLang } from \"../../utils/utils\";\r\n/*custom-components*/\r\nimport { TranslateInterface } from \"../../utils/translate/Translate\"\r\nimport MenuNavigation from \"../ui/menuNavigation/MenuNavigation\"\r\nimport Dialog from \"../ui/dialog/Dialog\"\r\nimport HeaderUser from \"../workspace/blocks/headerUser/HeaderUser\"\r\n\r\nimport history from \"../../history\";\r\n/*constants*/\r\nimport { API } from \"../../redux/constant/UIConst\";\r\nimport { CONSTANTS } from \"../../redux/constant/OtherConstants\";\r\n\r\n/**\r\n * Компонент отвечающий за шапку\r\n */\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeMenu = this.changeMenu.bind(this);\r\n        this.userAuth = this.userAuth.bind(this);\r\n        this.onRegAuth = this.onRegAuth.bind(this);\r\n        this.isCloseFeedBack = this.isCloseFeedBack.bind(this);\r\n        this.handleTextFieldKeyDown = this.handleTextFieldKeyDown.bind(this);\r\n        this.switchLanguagePage = this.switchLanguagePage.bind(this);\r\n        this.exitUser = this.exitUser.bind(this);\r\n        this.state = {\r\n            isMobileSearch: false,\r\n            isMobileMenu: false,\r\n            languagePage: false\r\n        }\r\n    }\r\n\r\n    isCloseFeedBack(isOpen) {\r\n        this.props.onChangeFeedback(isOpen, 'isOpen');\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { myUserInfo, switchMenuNavigation } = this.props;\r\n        let pathname = window.location.pathname;\r\n        if(pathname.includes('/library')){\r\n            this.props.switchMenuNavigation('library');\r\n        } else {\r\n            this.props.switchMenuNavigation(pathname.replace(/\\/+/g, '') || 'home');\r\n        }\r\n        fetchData(API.USER.GET_USER_INFO, {}, (data) => {\r\n            if (Array.isArray(data) && !data.length) {\r\n                history.push('/');\r\n                switchMenuNavigation('home');\r\n            } else {\r\n                myUserInfo(data);\r\n            }\r\n        });\r\n    }\r\n\r\n    menuLanguageButtons(buttons) {//Собираем массив данных для меню в зависимости от языка\r\n        let keys = Object.keys(buttons);\r\n        let arrayButtons = [];\r\n        for (let i = 0; i <  keys.length; i++) {\r\n            let elementMenu = {};\r\n            elementMenu = {\r\n                label: buttons[keys[i]],\r\n                name: keys[i]\r\n            };\r\n\r\n            arrayButtons.push(elementMenu)\r\n        }\r\n\r\n        return arrayButtons\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let { isMobileMenu } = this.state;\r\n        let { auth, registration, user } = this.props;\r\n        let body = document.body;\r\n        let width = '';\r\n        if (body) {\r\n            width = body.offsetWidth;\r\n            let workspace = document.getElementById('workspace');\r\n            let mobileMenu = document.getElementsByClassName('mobile_block_menu')[0];\r\n            if(workspace) {\r\n                if(width <= 960 && (isMobileMenu || registration.signUp)) {\r\n                    workspace.style.display = 'none'\r\n                } else {\r\n                    workspace.style.display = 'block'\r\n                }\r\n\r\n                if (mobileMenu) {\r\n                    if (registration.signUp || (auth.signIn && !Object.keys(user).length)) {\r\n                        mobileMenu.style.display = 'none'\r\n                    } else {\r\n                        mobileMenu.style.display = 'flex'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    changeMenu(type) {\r\n        let { switchMenuNavigation } = this.props;\r\n        switch (type) {\r\n            case 'settings': {\r\n                history.push('/setup');\r\n                switchMenuNavigation('setup');\r\n                break\r\n            }\r\n            case 'published': {\r\n                history.push('/my_articles');\r\n                switchMenuNavigation('my_articles');\r\n                break\r\n            }\r\n            case 'exit': {\r\n                history.push('/');\r\n                this.props.authRegistration('', false);\r\n                switchMenuNavigation('home');\r\n                break\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            isMobileSearch: false,\r\n            isMobileMenu: false,\r\n        })\r\n    }\r\n\r\n    exitUser() {\r\n        let { switchMenuNavigation, myUserInfo, isOpenSignWindow } = this.props;\r\n        myUserInfo({});\r\n        isOpenSignWindow(false);\r\n        switchMenuNavigation('home');\r\n        history.push(`/`);\r\n        fetchData(API.USER.LOGOUT);\r\n        /*this.setState({\r\n            isMobileSearch: false,\r\n            isMobileMenu: false\r\n        })*/\r\n    }\r\n\r\n    onRegAuth(objRegAuth, type) {//Регистрация и авторизация пользователя\r\n        let { userRegSatus } = this.props;\r\n        switch (type) {\r\n            case 'reg': {\r\n                regAuthUser(API.USER.REGISTRATION, objRegAuth, userRegSatus, true);\r\n                break;\r\n            }\r\n            case 'auth': {\r\n                regAuthUser(API.USER.LOGIN, objRegAuth, this.userAuth, false);\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n    }\r\n\r\n    userAuth(response) {//Авторизация пользователя\r\n        let { checkAuthFail, myUserInfo } = this.props;\r\n        if(response && response.status !== 200) {\r\n            const errorMessage = response && response.data && response.data.message || \"Сервер недоступен\";\r\n            checkAuthFail(errorMessage);\r\n        } else {\r\n            checkAuthFail('');\r\n            myUserInfo(response.data)\r\n        }\r\n\r\n    }\r\n\r\n    handleTextFieldKeyDown(e, type, objRegAuth, isDisabled) { //Авторизация по enter\r\n        if (e.keyCode) {\r\n            switch (e.keyCode) {\r\n                case 13: {\r\n                    if(!isDisabled) {\r\n                        this.onRegAuth(objRegAuth, type);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                default: break;\r\n            }\r\n        }\r\n    }\r\n\r\n    switchLanguagePage(language) {\r\n        let { switchLanguage, settings, saveSubjects, saveArticle, getMyPublications, getArticlesLibrary, getArticleInfo } = this.props;\r\n        switchLanguage(language);\r\n        switch (settings.page) {\r\n            case 'home': {\r\n                fetchData(API.ARTICLE.GET_ALL_ARTICLES, {language: language || 'RU'}, saveArticle);\r\n                fetchData(API.SUBJECTS.GET_ALL_SUBJECTS, {}, saveSubjects);\r\n                break;\r\n            }\r\n            case 'my_publications': {\r\n                fetchData(API.ARTICLE.GET_MY_ARTICLES, {language: language || 'RU'}, getMyPublications);\r\n                break;\r\n            }\r\n            case 'library': {\r\n                let arrayPathName = window.location.pathname.split('library');\r\n                if(arrayPathName[1]) {\r\n                    fetchData(API.ARTICLE.GET_ARTICLE, {id: window.location.pathname.split('library/')[1], language: language || 'RU'}, getArticleInfo);\r\n                } else {\r\n                    fetchData(API.ARTICLE.GET_ALL_ARTICLES, {language: language || 'RU'}, getArticlesLibrary);\r\n                }\r\n\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n\r\n    }\r\n\r\n    renderListLanguage() {\r\n        let arrayLanguage = Object.keys(CONSTANTS.LANGUAGE);\r\n\r\n        if(arrayLanguage && arrayLanguage.length) {\r\n            return arrayLanguage.map((key, index) => {\r\n                return (\r\n                    <div className={`menu_button_language_${index} button-menu`}\r\n                         key={`menu_button_language_${index}`}\r\n                         onClick={() => {\r\n                             this.switchLanguagePage(key);\r\n                             this.setState({languagePage: false})\r\n                         }}\r\n                    >{CONSTANTS.LANGUAGE[key]}</div>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { settings, switchMenuNavigation, isOpenSignWindow, auth, registration, myUserInfo, administration, articlePublishing,\r\n            user, feedBack, onChangeFeedback, clearArticle, createArticle, userRegSatus, isOpenRegWindow, clearPreviewImg } = this.props;\r\n        let { isMobileMenu, languagePage } = this.state;\r\n        let Translate = TranslateInterface(settings.language || getLang());\r\n        let language = settings.language || getLang() || 'en';\r\n        let feedbackDialog = Translate.header.feedBack.dialog;\r\n\r\n        const actions = (\r\n            <Button\r\n                className=\"btn_back_portal btn_standart_style\"\r\n                onClick={() => {\r\n                    this.isCloseFeedBack(false);\r\n                }}>{feedbackDialog.btn.label}</Button>\r\n        );\r\n\r\n        const dialogContent = (\r\n                <div>\r\n                    <div className=\"ui input container_nameArticle\">\r\n                        <span className=\"label\">{feedbackDialog.theme.label}</span>\r\n                        <Input\r\n                            type=\"text\"\r\n                            autoFocus={true}\r\n                            placeholder={feedbackDialog.theme.placeholder}\r\n                            onChange={(e) => {onChangeFeedback(e.currentTarget.value, 'label')}}\r\n                            value={feedBack.label}\r\n                        />\r\n                    </div>\r\n                    <div className=\"ui input\">\r\n                        <span className=\"label\">{feedbackDialog.description.label}</span>\r\n                        <textarea\r\n                            type=\"text\"\r\n                            onChange={(e) => {onChangeFeedback(e.currentTarget.value, 'description')}}\r\n                            value={feedBack.description}\r\n                        />\r\n                    </div>\r\n                </div>\r\n        );\r\n\r\n        return (\r\n            <div id=\"main-header\" style={{zIndex: articlePublishing.params.isFullScreenEditor ? 7 : 11}}>\r\n                <section className=\"header-language-feedback\">\r\n                    <div>\r\n                        <div className=\"header-language\">\r\n                            <Dropdown\r\n                                selection\r\n                                wrapSelection={false}\r\n                                options={Translate.header.language}\r\n                                value={language.toLowerCase()}\r\n                                onChange={(e, select) => {\r\n                                    this.switchLanguagePage(select.value);\r\n\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <span className=\"header-feedback link\" onClick={() => {this.isCloseFeedBack(true);}}>{Translate.header.feedBack.link}</span>\r\n                    </div>\r\n                </section>\r\n                <section className=\"header-title-sign\">\r\n                    <div className={!isMobileMenu && \"mobile_menu\" || \"mobile_menu mobile_active_menu\"}>\r\n                            <HeaderUser\r\n                                Translate={Translate}\r\n                                registration={registration}\r\n                                userRegSatus={userRegSatus}\r\n                                language={language}\r\n                                myUserInfo={myUserInfo}\r\n                                userAuth={this.userAuth}\r\n                                onRegAuth={this.onRegAuth}\r\n                                auth={auth}\r\n                                user={user}\r\n                                clearArticle={() => {\r\n                                    clearArticle();\r\n                                    clearPreviewImg();\r\n                                }}\r\n                                createArticle={createArticle}\r\n                                isOpenSignWindow={isOpenSignWindow}\r\n                                isOpenRegWindow={isOpenRegWindow}\r\n                                handleTextFieldKeyDown={this.handleTextFieldKeyDown}\r\n                                onClick={(signInUp, isCheckAuth ) => {\r\n                                    this.props.authRegistration('', true);\r\n                                }}\r\n                                changeMenu={(type) => {\r\n                                    this.changeMenu(type);\r\n                                }}\r\n                                switchMenuNavigation={(page) => {\r\n                                    switchMenuNavigation(page);\r\n                                }}\r\n                            />\r\n                        <div className=\"mobile_header_menu\" >\r\n                            {!isMobileMenu &&\r\n                            <div className=\"mobile_menu_icon\"\r\n                                 onClick={() => {\r\n                                     this.setState({\r\n                                         isMobileMenu: true\r\n                                     })\r\n                                 }}\r\n                            >\r\n                                <Menu/>\r\n                            </div>\r\n                            }\r\n                            {isMobileMenu &&\r\n                            <div className=\"mobile_menu_icon close icon\"\r\n                                 onClick={() => {\r\n                                     if(!languagePage) {\r\n                                         this.setState({isMobileMenu: false})\r\n                                     } else {\r\n                                         this.setState({languagePage: false})\r\n                                     }\r\n                                 }}>\r\n                                <CloseIcon/>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                        {isMobileMenu &&\r\n                            <div className=\"mobile_block_menu\">\r\n                                {!languagePage &&\r\n                                    <div className=\"menu-navigation\">\r\n                                        <MenuNavigation\r\n                                            user={user}\r\n                                            buttons={this.menuLanguageButtons(Translate.header.menuNavigation)}\r\n                                            page={settings.page}\r\n                                            exit={user && Object.keys(user).length ? () =>this.exitUser() : ''}\r\n                                            exitName={Translate.header.mobileMenu.exit}\r\n                                            onClick={(page) => {\r\n                                                let app = document.body;\r\n                                                if(app) {\r\n                                                    app.scrollTop = 0;\r\n                                                }\r\n                                                history.push(page !== 'home' ? `/${page}` : '/');\r\n                                                switchMenuNavigation(page);\r\n                                                this.setState({isMobileMenu: false})\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                        ||\r\n                                         <div className=\"mobile_list_language\">\r\n                                             {this.renderListLanguage()}\r\n                                         </div>}\r\n                                {!languagePage &&\r\n                                    <div className=\"mobile_language_feedback\">\r\n                                        <div className=\"button-menu\" onClick={() => {}}>\r\n                                            <div className=\"language_title\">{Translate.header.mobileMenu.language}</div>\r\n                                            <div  className=\"language_value\" onClick={() => {\r\n                                                this.setState({languagePage: true})\r\n                                            }}>\r\n                                                {/*<Icon name=\"chevron left\"/>*/}\r\n                                                <span>{CONSTANTS.LANGUAGE[language.toLowerCase()]}</span>\r\n                                                <Icon name=\"chevron right\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"button-menu\" onClick={() => {this.isCloseFeedBack(true);}}>{Translate.header.mobileMenu.feedBack}</div>\r\n                                    </div>}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"header-title\"\r\n                         onClick={() => {\r\n                             switchMenuNavigation('home');\r\n                             history.push('/');\r\n                         }}\r\n                    >\r\n                        <div className=\"logo\" style={{background: 'url(' + '/images/logo.png' + ') center no-repeat'}}></div>\r\n                        <div className=\"header-title-ru\">{Translate.header.title}</div>\r\n                        {/*<div className=\"vertical-divider\"></div>\r\n                        <div className=\"header-title-en\">{TranslateInterface('en').header.title}</div>*/}\r\n                    </div>\r\n                    {user && Object.keys(user).length &&\r\n                        <div\r\n                            className=\"add_article_icon_mobile\"\r\n                            onClick={() => {\r\n                                let { clearArticle, createArticle, switchMenuNavigation } = this.props;\r\n                                switchMenuNavigation('article_publishing');\r\n                                history.push('/article_publishing');\r\n                                clearArticle();\r\n                                createArticle();\r\n                            }}\r\n                        >\r\n                            <Add/>\r\n                        </div> || ''}\r\n                    <div className=\"mobile_search_icon\">\r\n                        <Search/>\r\n                    </div>\r\n                    <HeaderUser\r\n                        Translate={Translate}\r\n                        registration={registration}\r\n                        userRegSatus={userRegSatus}\r\n                        myUserInfo={myUserInfo}\r\n                        userAuth={this.userAuth}\r\n                        onRegAuth={this.onRegAuth}\r\n                        auth={auth}\r\n                        user={user}\r\n                        clearArticle={() => {\r\n                            clearArticle();\r\n                            clearPreviewImg();\r\n                        }}\r\n                        createArticle={createArticle}\r\n                        isOpenSignWindow={isOpenSignWindow}\r\n                        isOpenRegWindow={isOpenRegWindow}\r\n                        handleTextFieldKeyDown={this.handleTextFieldKeyDown}\r\n                        administrationDefaultTab={administration.tabLeftAdministration}\r\n                        onClick={(signInUp, isCheckAuth ) => {\r\n                            this.props.authRegistration('', true);\r\n                        }}\r\n                        changeMenu={(type) => {\r\n                            this.changeMenu(type);\r\n                        }}\r\n                        switchMenuNavigation={(page) => {\r\n                            switchMenuNavigation(page);\r\n                        }}\r\n                    />\r\n                </section>\r\n                <section className=\"menu-navigation-search_container\" >\r\n                    <div className=\"menu-navigation-search\">\r\n                        <div>\r\n                            <div className=\"menu-navigation\">\r\n                                <MenuNavigation\r\n                                    user={user}\r\n                                    buttons={this.menuLanguageButtons(Translate.header.menuNavigation)}\r\n                                    page={settings.page}\r\n                                    onClick={(page) => {\r\n                                        let app = document.getElementsByClassName('App')[0];\r\n                                        if(app) {\r\n                                            app.scrollTop = 0;\r\n                                        }\r\n                                        history.push(page !== 'home' ? `/${page}` : '/');\r\n                                        switchMenuNavigation(page);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"header-search\">\r\n                                <Input size='small' icon='search' placeholder={Translate.header.search}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <Dialog\r\n                    className=\"feedBack_dialog\"\r\n                    isOpen={feedBack.isOpen}\r\n                    title=\"Отправка запроса\"\r\n                    content={dialogContent}\r\n                    isIconClose={true}\r\n                    actions={actions}\r\n                    close={() => {this.isCloseFeedBack(false)}}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default\r\nconnect(\r\n    state => ({\r\n        settings: state.settings,\r\n        administration: state.administration,\r\n        articlePublishing: state.articlePublishing,\r\n        registration: state.registration,\r\n        auth: state.auth,\r\n        user: state.user,\r\n        feedBack:  state.feedBack\r\n    }),\r\n    dispatch => ({\r\n        switchLanguage: (language) => {\r\n            dispatch({\r\n                type: \"SWITCH_LANGUAGE\",\r\n                payload: {\r\n                    language: language,\r\n                }\r\n            })\r\n        },\r\n        switchMenuNavigation: (page) => {\r\n            dispatch({\r\n                type: \"SWITCH_PAGE\",\r\n                payload: {\r\n                    page: page,\r\n                }\r\n            })\r\n        },\r\n        isOpenSignWindow: (isOpen) => {\r\n            dispatch({\r\n                type: \"WINDOW_SIGN_UP_IN\",\r\n                payload: {\r\n                    isOpen: isOpen\r\n                }\r\n            })\r\n        },\r\n        isOpenRegWindow: (isOpen) => {\r\n            dispatch({\r\n                type: \"WINDOW_REGISTRATION\",\r\n                payload: {\r\n                    isOpen: isOpen\r\n                }\r\n            })\r\n        },\r\n        myUserInfo: (user) => {\r\n            dispatch({\r\n                type: \"USER\",\r\n                payload: {\r\n                    user: user\r\n                }\r\n            })\r\n        },\r\n        onChangeFeedback: (value, type) => {\r\n            dispatch({\r\n                type: \"FEEDBACK\",\r\n                payload: {\r\n                    value: value,\r\n                    type: type\r\n                }\r\n            })\r\n        },\r\n        createArticle: () => {\r\n            dispatch({\r\n                type: \"ARTICLE_CREATE\"\r\n            })\r\n        },\r\n        clearArticle: () => {\r\n            dispatch({\r\n                type: \"CLEAR_ARTICLE_CREATE\"\r\n            })\r\n        },\r\n        clearPreviewImg: () => {\r\n            dispatch({\r\n                type: \"CLEAR_PREVIEW\"\r\n            })\r\n        },\r\n        userRegSatus: (data) => {\r\n            dispatch({\r\n                type: \"REGISTRATION\",\r\n                payload: {\r\n                    data: data\r\n                }\r\n            })\r\n        },\r\n        checkAuthFail:  (errorMessage) => {\r\n            dispatch({\r\n                type: \"CHECK_AUTH_FAIL\",\r\n                payload: {\r\n                    errorMessage: errorMessage\r\n                }\r\n            })\r\n        },\r\n        saveArticle: (articles) => {\r\n            dispatch({\r\n                type: \"MAIN_PAGE_GET_SAVE_ARTICLES\",\r\n                payload: {\r\n                    articles: articles,\r\n                }\r\n            })\r\n        },\r\n        getArticleInfo: (article) => {\r\n            dispatch({\r\n                type: \"GET_ARTICLE_INFO\",\r\n                payload: {\r\n                    article: article,\r\n                }\r\n            })\r\n        },\r\n        saveSubjects: (subjects) => {\r\n            dispatch({\r\n                type: \"SAVE_SUBJECTS\",\r\n                payload: {\r\n                    subjects: subjects,\r\n                }\r\n            })\r\n        },\r\n        getMyPublications: (articles) => {\r\n            dispatch({\r\n                type: \"GET_MY_PUBLICATIONS\",\r\n                payload: {\r\n                    articles: articles\r\n                }\r\n            })\r\n        },\r\n        getArticlesLibrary: (articles) => {\r\n            dispatch({\r\n                type: \"GET_ARTICLES_LIBRARY\",\r\n                payload: {\r\n                    articles: articles\r\n                }\r\n            })\r\n        }\r\n    })\r\n)\r\n(Header);","/**\r\n * Created by smalkov on 04.09.2018.\r\n */\r\n\r\n// react - redux\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*utils*/\r\nimport { TranslateInterface } from \"../../utils/translate/Translate\";\r\nimport { getLang } from \"../../utils/utils\";\r\nimport history from \"../../history\";\r\n/*semantic-ui components*/\r\nimport { Dropdown } from 'semantic-ui-react'\r\n/*css*/\r\nimport \"./footer.css\"\r\nimport {API} from \"../../redux/constant/UIConst\";\r\nimport {fetchData} from \"../../utils/fetchHelper\";\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isCloseFeedBack = this.isCloseFeedBack.bind(this);\r\n        this.switchLanguagePage = this.switchLanguagePage.bind(this);\r\n        this.state = {}\r\n    }\r\n\r\n    isCloseFeedBack(isOpen) {\r\n        this.props.onChangeFeedback(isOpen, 'isOpen');\r\n    }\r\n\r\n    switchLanguagePage(language) {\r\n        let { switchLanguage, settings, saveSubjects, saveArticle, getMyPublications, getArticlesLibrary, getArticleInfo } = this.props;\r\n        switchLanguage(language);\r\n        switch (settings.page) {\r\n            case 'home': {\r\n                fetchData(API.ARTICLE.GET_ALL_ARTICLES, {language: language || 'RU'}, saveArticle);\r\n                fetchData(API.SUBJECTS.GET_ALL_SUBJECTS, {}, saveSubjects);\r\n                break;\r\n            }\r\n            case 'my_publications': {\r\n                fetchData(API.ARTICLE.GET_MY_ARTICLES, {language: language || 'RU'}, getMyPublications);\r\n                break;\r\n            }\r\n            case 'library': {\r\n                let arrayPathName = window.location.pathname.split('library');\r\n                if(arrayPathName[1]) {\r\n                    fetchData(API.ARTICLE.GET_ARTICLE, {id: window.location.pathname.split('library/')[1], language: language || 'RU'}, getArticleInfo);\r\n                } else {\r\n                    fetchData(API.ARTICLE.GET_ALL_ARTICLES, {language: language || 'RU'}, getArticlesLibrary);\r\n                }\r\n\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n\r\n    }\r\n\r\n    renderFooterElements(footerElements) {\r\n        let { switchMenuTabAbout, switchMenuTabActivities, switchMenuTabLibrary, switchMenuNavigation } = this.props;\r\n        let content = [];\r\n        let keys = Object.keys(footerElements);\r\n        if (keys.length) {\r\n            keys.map((item, key) => {\r\n                let arrayElements = [\r\n                    <div className=\"footer_title_column\" key={`${footerElements[item].title}`}>{footerElements[item].title}</div>\r\n                ];\r\n                footerElements[item].array.map((element, index) => {\r\n                    arrayElements.push(\r\n                        <div className=\"footer_link\" key={`${Object.values(element)[0]}`}>\r\n                            <span\r\n                                onClick={() => {\r\n                                    let app = document.getElementsByClassName('App');\r\n                                    if (app[0]) {\r\n                                        app[0].scrollTop = 0;\r\n                                    }\r\n                                    history.push(`/${element.link}`);\r\n                                    switchMenuNavigation(element.link);\r\n                                    switch (element.link) {\r\n                                        case 'about': {\r\n                                            switchMenuTabAbout(element.tab);\r\n                                            break;\r\n                                        }\r\n                                        case 'activities': {\r\n                                            switchMenuTabActivities(element.tab);\r\n                                            break;\r\n                                        }\r\n                                        case 'library': {\r\n                                            switchMenuTabLibrary(element.tab);\r\n                                            break;\r\n                                        }\r\n                                        default: break;\r\n                                    }\r\n                                }}\r\n                            >\r\n                                {Object.values(element)[0]}\r\n                                </span>\r\n                        </div>\r\n                    );\r\n                });\r\n                content.push([<div className=\"footer_column\">{arrayElements}</div>]);\r\n            })\r\n        }\r\n        return content\r\n    }\r\n\r\n    render() {\r\n        let { settings, switchLanguage } = this.props;\r\n        let translate = TranslateInterface(settings.language || 'ru');\r\n        let content = this.renderFooterElements(translate.footer);\r\n        let language = settings.language || getLang() || 'en';\r\n\r\n        return (\r\n            <div id=\"main-footer\">\r\n                <section className=\"footer_links\">{content}</section>\r\n                <div className=\"horizontal_divider\"></div>\r\n                <section className=\"footer_language_feedback\">\r\n                    <div>\r\n                        <div className=\"footer_language footer_column\">\r\n                            <Dropdown\r\n                                selection\r\n                                wrapSelection={false}\r\n                                options={translate.header.language}\r\n                                value={language.toLowerCase()}\r\n                                onChange={(e, select) => {\r\n                                    this.switchLanguagePage(select.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"footer_column\"></div>\r\n                        <div className=\"footer_column\"></div>\r\n                        <div className=\"footer_column\">\r\n                            <span className=\"footer_feedback link\"\r\n                                  onClick={() => {this.isCloseFeedBack(true);}}>{translate.header.feedBack.link}\r\n                      </span>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default\r\nconnect(\r\n    state => ({\r\n        settings: state.settings\r\n    }),\r\n    dispatch => ({\r\n        switchLanguage: (language) => {\r\n            dispatch({\r\n                type: \"SWITCH_LANGUAGE\",\r\n                payload: {\r\n                    language: language,\r\n                }\r\n            })\r\n        },\r\n        onChangeFeedback: (value, type) => {\r\n            dispatch({\r\n                type: \"FEEDBACK\",\r\n                payload: {\r\n                    value: value,\r\n                    type: type\r\n                }\r\n            })\r\n        },\r\n        switchMenuTabAbout: (tabMenu) => {\r\n            dispatch({\r\n                type: \"SWITCH_ABOUT_MENU_TAB\",\r\n                payload: {\r\n                    tabMenu: tabMenu\r\n                }\r\n            })\r\n        },\r\n        switchMenuTabActivities: (tabMenu) => {\r\n            dispatch({\r\n                type: \"SWITCH_ACTIVITIES_MENU_TAB\",\r\n                payload: {\r\n                    tabMenu: tabMenu\r\n                }\r\n            })\r\n        },\r\n        switchMenuTabLibrary: (tabMenu) => {\r\n            dispatch({\r\n                type: \"SWITCH_LIBRARY_MENU_TAB\",\r\n                payload: {\r\n                    tabMenu: tabMenu\r\n                }\r\n            })\r\n        },\r\n        saveArticle: (articles) => {\r\n            dispatch({\r\n                type: \"MAIN_PAGE_GET_SAVE_ARTICLES\",\r\n                payload: {\r\n                    articles: articles,\r\n                }\r\n            })\r\n        },\r\n        switchMenuNavigation: (page) => {\r\n            dispatch({\r\n                type: \"SWITCH_PAGE\",\r\n                payload: {\r\n                    page: page,\r\n                }\r\n            })\r\n        },\r\n        getArticleInfo: (article) => {\r\n            dispatch({\r\n                type: \"GET_ARTICLE_INFO\",\r\n                payload: {\r\n                    article: article,\r\n                }\r\n            })\r\n        },\r\n        saveSubjects: (subjects) => {\r\n            dispatch({\r\n                type: \"SAVE_SUBJECTS\",\r\n                payload: {\r\n                    subjects: subjects,\r\n                }\r\n            })\r\n        },\r\n        getMyPublications: (articles) => {\r\n            dispatch({\r\n                type: \"GET_MY_PUBLICATIONS\",\r\n                payload: {\r\n                    articles: articles\r\n                }\r\n            })\r\n        },\r\n        getArticlesLibrary: (articles) => {\r\n            dispatch({\r\n                type: \"GET_ARTICLES_LIBRARY\",\r\n                payload: {\r\n                    articles: articles\r\n                }\r\n            })\r\n        }\r\n    })\r\n)\r\n(Footer);","/**\r\n * Created by smalkov on 07.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*css*/\r\nimport \"./eventList.css\"\r\n\r\n/**\r\n * Компонент отображения блока события\r\n */\r\n\r\nconst monthName = [\"янв\", \"фев\", \"мар\", \"апр\", \"май\", \"июн\", \"июл\", \"сен\", \"окт\", \"ноя\", \"дек\"];\r\n\r\nclass EventList extends React.PureComponent {\r\n\r\n    renderItems(events, countView, onClick) {\r\n        if(events && events.length) {\r\n            return events.map((item, index) => {\r\n                if(countView > index){\r\n                    let options = { year: 'numeric', month: '2-digit', day: '2-digit' };\r\n                    let oldDate = new Date(item.publishDate);\r\n                    let day = oldDate.getDate();\r\n                    let month = oldDate.getMonth();\r\n                    let newData = oldDate.toLocaleString('ru-Ru', options).replace(/\\/+/g, '.');\r\n                    return (\r\n                        <div key={`development_item_${index}`} className=\"development_item\" onClick={() => onClick(item)}>\r\n                            {/*<div className=\"development_date_name\">\r\n                                <div>{newData + ' , ' + item.name}</div>\r\n                            </div> */}\r\n                            <div className=\"development_date_name\">\r\n                                <div className=\"development_date_day\">{day && day.toString().length === 1 ?  (\"0\" + day) : day}</div>\r\n                                <div className=\"development_date_month\">{monthName[month - 1]}</div>\r\n                            </div>\r\n                            <div className=\"development_description\">{item.caption}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { events, countView, onClick } = this.props;\r\n        return (\r\n            <div className=\"renderItems_developments\">\r\n                {this.renderItems(events, countView, onClick)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (EventList)","/**\r\n * Created by smalkov on 04.09.2018.\r\n */\r\n\r\n// react - redux\r\nimport React from \"react\";\r\n/*custom components*/\r\nimport EventList from \"../../../ui/eventList/EventList\"\r\n\r\n/*css*/\r\nimport \"./events.css\"\r\n\r\n/**\r\n * Компонент содержащий блок событий\r\n */\r\n\r\nclass Events extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let articles = document.getElementsByClassName('development_description');\r\n        if (articles && articles.length) {\r\n            for(let a = 0; a < articles.length; a++) {\r\n                articles[a].style.webkitBoxOrient = 'vertical';\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { Translate, events, viewAllNews, onClick } = this.props;\r\n        return (\r\n            <div id=\"main_developments_block\">\r\n                <div className=\"main_developments_block_head\">\r\n                    <span className=\"main_developments_block_title\">{Translate.home.rightPanel.title}</span>\r\n                    {events && events.length &&\r\n                        <span\r\n                            className=\"link_all_events\"\r\n                            onClick={viewAllNews}\r\n                        >{Translate.home.rightPanel.linkTitle}</span> || ''}\r\n                </div>\r\n                <div className='horizontal_divider'></div>\r\n                {events && events.length &&\r\n                    <EventList\r\n                        events={events}\r\n                        countView = {5}\r\n                        onClick={onClick}\r\n                    /> ||\r\n                    <div className=\"table_not_found_data\">{Translate.administration.notFoundData.events}</div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (Events)","/**\r\n * Created by smalkov on 11.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*semantic-ui components*/\r\nimport { Input, Button, Icon } from 'semantic-ui-react'\r\n/*css*/\r\nimport \"./subscription.css\"\r\n\r\n/**\r\n * Компонент блок подписки\r\n */\r\n\r\n\r\nclass Subscription extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let { onChange } = this.props;\r\n        let value = e.target.value;\r\n        onChange(value);\r\n    }\r\n\r\n    render() {\r\n        let { title, btnLabel, className, placeholder,  isFramed, framedClick, value} = this.props;\r\n        return (\r\n            <div className=\"atricles_subscription\" className={className}>\r\n                    <div className=\"subscription_title\">{title}</div>\r\n                    {!isFramed\r\n                    ?   <div className=\"subscription_email_btn\">\r\n                            <div className=\"subscription_email\">\r\n                                <Input\r\n                                    size='small'\r\n                                    placeholder={placeholder}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <Button\r\n                                className=\"atricles_subscription_btn articles_btn_style\"\r\n                                disabled={!value}\r\n                                onClick={() => {framedClick(true)}}>{btnLabel}</Button>\r\n                        </div>\r\n                            : <div className=\"subscription_framed\">\r\n                                <Icon name=\"check\"/>\r\n                                <span>Подписка оформлена</span>\r\n                            </div>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (Subscription)","/**\r\n * Created by smalkov on 11.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*semantic-ui components*/\r\nimport { Icon } from 'semantic-ui-react'\r\n/*css*/\r\nimport \"./authorView.css\"\r\n\r\n/**\r\n * Компонент блок автора статьи\r\n */\r\n\r\nclass AuthorView extends React.PureComponent {\r\n\r\n    render() {\r\n        let { date, name, countView, countComments } = this.props;\r\n        return (\r\n            <div className=\"article_description_info_author\">\r\n                <div>\r\n                    <div className=\"article_author\">{name}</div>\r\n                    <div>{\",  \"}</div>\r\n                    <div className=\"article_date\">{date}</div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"comment_outline_icon\">\r\n                        <Icon name='comment outline'/>\r\n                        <div>{countComments}</div>\r\n                    </div>\r\n                    <div className=\"eye_icon\">\r\n                        <Icon name='eye'/>\r\n                        <div>{countView}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (AuthorView)","/**\r\n * Created by smalkov on 11.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\n/*semantic-ui components*/\r\nimport { Button, Icon, Dropdown } from 'semantic-ui-react'\r\n/*custom-components*/\r\nimport AuthorView from \"../../ui/authorView/AuthorView\"\r\nimport history from \"../../../history\"\r\n/*utils*/\r\nimport { FormateDate } from \"../../../utils/utils\"\r\n/*css*/\r\nimport \"./article.css\"\r\nimport {API} from \"../../../redux/constant/UIConst\";\r\nimport {fetchData} from \"../../../utils/fetchHelper\";\r\n\r\n/**\r\n * Компонент превью статьи\r\n */\r\n\r\nconst trigger = ( <Icon className=\"edit_outline\" name=\"ellipsis horizontal\"/>);\r\n\r\nclass Article extends React.PureComponent {\r\n\r\n    getImage(imageId) { //Отображение превью изображения статьи\r\n        let imagePreview = <div\r\n            className=\"article_description_preview_img\"\r\n            style={{border: '1px solid lightgray'}}\r\n        >img</div>;\r\n        if (imageId) {\r\n            imagePreview =\r\n                <div\r\n                    className=\"article_description_preview_img\"\r\n                    style={{\r\n                        background: `url(${document.location.origin}/api/file/get?id=${imageId}) center no-repeat`}}>\r\n                </div>;\r\n        }\r\n        return imagePreview\r\n    }\r\n\r\n    render() {\r\n        let { className, article, btnLabel, onClick, status, statusLabel, menuArticle, isDisabledRead, subject, user, menuTranslate } = this.props;\r\n        let date = FormateDate(new Date(article.lastUpdateTime));\r\n        const options = [\r\n            { key: 0, text: 'Default', value: 'default' },\r\n            { key: 1, text: menuTranslate && menuTranslate.edit || 'Edit', value: 'edit' },\r\n            { key: 2, text: menuTranslate && menuTranslate.delete || 'Delete', value: 'delete'}\r\n        ];\r\n        return (\r\n            <div className={Object.keys(user).length && `article article_item ${className} activeArticle`\r\n                || `article article_item ${className}`} onClick={() => {if (user && Object.keys(user).length) {onClick(article.id)}}}>\r\n                <div className=\"article_label\">\r\n                    <span>\r\n                        <span className=\"article_label_text\">{article.label}</span>\r\n                        <span className=\"article_label_subject\" style={{background: subject && subject.color}}>{subject && subject.label}</span>\r\n                    </span>\r\n                    {menuArticle\r\n                        ? <div className=\"status_article\">\r\n                            <div>{status && statusLabel[article.status.toLowerCase()]}</div>\r\n                            <Dropdown\r\n                                className=\"article_menu\"\r\n                                fluid\r\n                                trigger={trigger}\r\n                                options={options}\r\n                                pointing='top right'\r\n                                icon={null}\r\n                                onChange={(e, select) => {\r\n                                    if (select.value) {\r\n                                        menuArticle(article.id, select.value)\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </div> : ''}\r\n               </div>\r\n                <AuthorView\r\n                    name={article.authorName}\r\n                    date={date}\r\n                    countView={article.views || 0}\r\n                    countComments={article.commentsCount}\r\n                />\r\n                <div className=\"article_description\">\r\n                    <div className=\"article_description_text_info\">\r\n                        <div className=\"article_description_annotation\">{article.annotation}</div>\r\n                    </div>\r\n                    <div className=\"status_article_preview_img\">\r\n                        {this.getImage(article.imageId)}\r\n                    </div>\r\n                </div>\r\n                {!isDisabledRead && false\r\n                    ? <Button className=\"read_more_article\" onClick={() => {onClick(article.id)}}>{btnLabel}</Button>\r\n                        : ''}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (Article)","/**\r\n * Created by smalkov on 11.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\n/*semantic-ui components*/\r\nimport { Button, Icon, Dropdown } from 'semantic-ui-react'\r\n/*custom-components*/\r\nimport AuthorView from \"../../ui/authorView/AuthorView\"\r\nimport history from \"../../../history\"\r\n/*utils*/\r\nimport { FormateDate } from \"../../../utils/utils\"\r\n/*css*/\r\nimport \"./mobileArticle.css\"\r\nimport {API} from \"../../../redux/constant/UIConst\";\r\nimport {fetchData} from \"../../../utils/fetchHelper\";\r\n\r\n/**\r\n * Компонент превью статьи\r\n */\r\n\r\nconst trigger = ( <Icon className=\"edit_outline\" name=\"ellipsis horizontal\"/>);\r\n\r\nclass MobileArticle extends React.PureComponent {\r\n\r\n    getImage(imageId) { //Отображение превью изображения статьи\r\n        let imagePreview = <div\r\n            className=\"article_description_preview_img\"\r\n            style={{border: '1px solid lightgray'}}\r\n        >img</div>;\r\n        if (imageId) {\r\n            imagePreview =\r\n                <div\r\n                    className=\"article_description_preview_img\"\r\n                    style={{\r\n                        background: `url(${document.location.origin}/api/file/get?id=${imageId}) center no-repeat`}}>\r\n                </div>;\r\n        }\r\n        return imagePreview\r\n    }\r\n\r\n    render() {\r\n        let { className, article, btnLabel, onClick, status, statusLabel, menuArticle, isDisabledRead, subject, user, menuTranslate } = this.props;\r\n        let date = FormateDate(new Date(article.lastUpdateTime));\r\n        const options = [\r\n            { key: 0, text: 'Default', value: 'default' },\r\n            { key: 1, text: menuTranslate && menuTranslate.edit || 'Edit', value: 'edit' },\r\n            { key: 2, text: menuTranslate && menuTranslate.delete || 'Delete', value: 'delete'}\r\n        ];\r\n        return (\r\n            <div className={Object.keys(user).length && `article article_item ${className} activeArticle mobile_article`\r\n            || `article article_item ${className} mobile_article`} onClick={() => {if (user && Object.keys(user).length) {onClick(article.id)}}}>\r\n                <div className=\"mobile_left_content_article\">\r\n                    <div className=\"article_label\">\r\n                    <span>\r\n                        <span className=\"article_label_text\">{article.label}</span>\r\n                        <span className=\"article_label_subject\" style={{background: subject && subject.color}}>{subject && subject.label}</span>\r\n                    </span>\r\n                        {menuArticle\r\n                            ? <div className=\"status_article\">\r\n                                <div>{status && statusLabel[article.status.toLowerCase()]}</div>\r\n                                <Dropdown\r\n                                    className=\"article_menu\"\r\n                                    fluid\r\n                                    trigger={trigger}\r\n                                    options={options}\r\n                                    pointing='top right'\r\n                                    icon={null}\r\n                                    onChange={(e, select) => {\r\n                                        if (select.value) {\r\n                                            menuArticle(article.id, select.value)\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </div> : ''}\r\n                    </div>\r\n                    <AuthorView\r\n                        name={article.authorName}\r\n                        date={date}\r\n                        countView={article.views || 0}\r\n                        countComments={article.commentsCount}\r\n                    />\r\n                </div>\r\n                <div className=\"status_article_preview_img\">\r\n                    {this.getImage(article.imageId)}\r\n                </div>\r\n                {!isDisabledRead && false\r\n                    ? <Button className=\"read_more_article\" onClick={() => {onClick(article.id)}}>{btnLabel}</Button>\r\n                    : ''}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (MobileArticle)","/**\r\n * Created by smalkov on 11.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*custom components*/\r\nimport Article from \"../../../ui/article/Article\"\r\nimport MobileArticle from \"../../../ui/mobileArticle/MobileArticle\"\r\n/*css*/\r\nimport \"./viewArticles.css\"\r\n\r\n/**\r\n * Компонент блок превью статей\r\n */\r\n\r\nclass ViewArticles extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addStyle();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.addStyle();\r\n    }\r\n\r\n    addStyle() {\r\n        let articles = document.getElementsByClassName('article_description_annotation');\r\n        if (articles && articles.length) {\r\n            for(let a = 0; a < articles.length; a++) {\r\n                if(articles[a].style.webkitBoxOrient !== 'vertical') {\r\n                    articles[a].style.webkitBoxOrient = 'vertical';\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    subject(subjects, subjectId) {\r\n        let color = [\"#92B7E3\", \"#A2C2AB\", \"#BCAED2\"];\r\n        if (subjects && subjects.length !== 0) {\r\n            for (let i = 0; i < subjects.length; i++) {\r\n                if (subjectId === subjects[i].id) {\r\n                    return {\r\n                        label: subjects[i].label,\r\n                        color: color[subjectId]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    renderAriclesBlock() {\r\n        let { articles, className, btnLabel, countViewArticles, onClick, status, statusLabel, textNoData,\r\n            menuArticle, isDisabledRead, subjects, menuTranslate, user } = this.props;\r\n        if(articles && articles.length !== 0) {\r\n            return articles.map((item, index) => {\r\n                if(index < countViewArticles) {\r\n                    return (\r\n                        [<Article\r\n                            key = {`article_${className}_${index}`}\r\n                            status={status}\r\n                            statusLabel={statusLabel}\r\n                            article={item}\r\n                            btnLabel={btnLabel}\r\n                            className={className}\r\n                            onClick={onClick}\r\n                            user={user}\r\n                            menuArticle={menuArticle}\r\n                            menuTranslate={menuTranslate}\r\n                            isDisabledRead={isDisabledRead}\r\n                            subject={this.subject(subjects, item.subjectId)}\r\n                        />,\r\n                        <MobileArticle\r\n                            key = {`article_mobile_${className}_${index}`}\r\n                            status={status}\r\n                            statusLabel={statusLabel}\r\n                            article={item}\r\n                            btnLabel={btnLabel}\r\n                            className={className}\r\n                            onClick={onClick}\r\n                            user={user}\r\n                            menuArticle={menuArticle}\r\n                            menuTranslate={menuTranslate}\r\n                            isDisabledRead={isDisabledRead}\r\n                            subject={this.subject(subjects, item.subjectId)}\r\n                        />]\r\n                    )\r\n                }\r\n            })\r\n        } else {\r\n            return <div className=\"text_no_data\">{textNoData}</div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { title, className, link } = this.props;\r\n\r\n        return (\r\n            <div className={`atricles_view_block ${className}`}>\r\n                    <div>\r\n                        <div className=\"atricles_view_block_head\">\r\n                            <div className=\"title_view_articles_head\">{title && title.toUpperCase()}</div>\r\n                            {link ? <div className=\"link link_articles_view_block\" onClick={() => {}}>{link.label}</div> : ''}\r\n                        </div>\r\n                        <div className='horizontal_divider'></div>\r\n                        {this.renderAriclesBlock()}\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (ViewArticles)","/**\r\n * Created by smalkov on 04.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*custom components*/\r\nimport Events from \"../../blocks/events/Events\"\r\nimport Subscription from \"../../../ui/subscription/Subscription\"\r\nimport ViewArticles from \"../../blocks/viewArticles/ViewArticles\"\r\n/*semantic-ui components*/\r\nimport { Input, Button, Segment, Dimmer, Loader } from 'semantic-ui-react'\r\n/*css*/\r\nimport \"./mainRoot.css\"\r\n/*utils*/\r\nimport { fetchData } from \"../../../../utils/fetchHelper\";\r\nimport {TranslateInterface} from \"../../../../utils/translate/Translate\";\r\nimport history from \"../../../../history\";\r\n/*constants*/\r\nimport { API } from \"../../../../redux/constant/UIConst\";\r\n\r\n/**\r\n * Компонент страницы \"Главная\"\r\n */\r\n\r\nclass MainRoot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onClickEvent = this.onClickEvent.bind(this);\r\n        this.state = {\r\n            isFramed: false,\r\n            value: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { saveArticle, saveSubjects, getPublishEvents, settings } = this.props;\r\n        let scrollContainer = document.getElementsByClassName('App')[0];\r\n        if(scrollContainer) {\r\n            scrollContainer.scrollTop = 0;\r\n        }\r\n        fetchData(API.ARTICLE.GET_ALL_ARTICLES, {language: settings.language || 'RU'}, saveArticle);\r\n        fetchData(API.ADMINISTRATION.GET_PUBLISH_NEWS, {number : 0, size : 50, language: settings.language || 'RU'}, getPublishEvents);\r\n        fetchData(API.SUBJECTS.GET_ALL_SUBJECTS, {}, saveSubjects);\r\n    }\r\n\r\n    onClick(id, islink) {\r\n        let { getArticleInfo, settings } = this.props;\r\n        if(islink){\r\n\r\n            history.push(`/library`);\r\n        } else {\r\n            history.push(`/library/${id}`);\r\n        }\r\n        this.props.switchMenuNavigation('library');\r\n        fetchData(API.ARTICLE.GET_ARTICLE, {id: id, language: settings.language || 'RU'}, getArticleInfo);\r\n    }\r\n\r\n    onClickEvent(event) {\r\n        history.push(`/activities`);\r\n        let { getEventInfo, switchMenuTabActivities } = this.props;\r\n        switchMenuTabActivities('events');\r\n        getEventInfo(event);\r\n    }\r\n\r\n    render() {\r\n        let { settings, events, articles, subjects, user, switchMenuNavigation, switchMenuTabActivities } = this.props;\r\n        let { isFramed, value } = this.state;\r\n        let Translate = TranslateInterface(settings.language || 'ru');\r\n\r\n        return (\r\n            <div id=\"main-root-page\">\r\n                <div className=\"main-root-page_left_panel\">\r\n                    {articles && !Array.isArray(articles.newArticles) && !Array.isArray(articles.popularArticles) ?\r\n                    <Segment className=\"main_root_loading\">\r\n                        <Dimmer active inverted>\r\n                            <Loader inverted/>\r\n                        </Dimmer>\r\n                    </Segment>\r\n                    :\r\n                    <div>\r\n                        <ViewArticles\r\n                            className=\"newArticles\"\r\n                            title={Translate.home.leftPanel.newArticles.title}\r\n                            textNoData={Translate.other.textNoData}\r\n                            //link={Translate.home.leftPanel.newArticles.link}\r\n                            btnLabel={Translate.home.leftPanel.readNext}\r\n                            articles={articles.newArticles}\r\n                            isDisabledRead={!Object.keys(user).length}\r\n                            countViewArticles={4}\r\n                            subjects={subjects.data}\r\n                            user={user}\r\n                            onClick={this.onClick}\r\n                        />\r\n                        <ViewArticles\r\n                            className=\"popularArticles\"\r\n                            textNoData={Translate.other.textNoData}\r\n                            title={Translate.home.leftPanel.popularArticles.title}\r\n                            //link={Translate.home.leftPanel.popularArticles.link}\r\n                            btnLabel={Translate.home.leftPanel.readNext}\r\n                            articles={articles.popularArticles}\r\n                            isDisabledRead={!Object.keys(user).length}\r\n                            countViewArticles={4}\r\n                            user={user}\r\n                            subjects={subjects.data}\r\n                            onClick={this.onClick}\r\n                        />\r\n                    </div>}\r\n                </div>\r\n                <div className=\"main-root-page_right_panel\">\r\n                    <Events\r\n                        viewAllNews={() => {\r\n                            switchMenuNavigation('activities');\r\n                            switchMenuTabActivities('events');\r\n                            history.push('activities');\r\n\r\n                        }}\r\n                        events={events.list}\r\n                        Translate={Translate}\r\n                        onClick={this.onClickEvent}\r\n                    />\r\n                    <Subscription\r\n                        className=\"block_subscription\"\r\n                        isFramed={isFramed}\r\n                        value={value}\r\n                        framedClick={(isFramed) => {\r\n                            this.setState({isFramed: isFramed})\r\n                        }}\r\n                        onChange={(value) => {\r\n                            this.setState({value: value})\r\n                        }}\r\n                        title={Translate.home.subscription.title}\r\n                        placeholder={Translate.home.subscription.placeholder}\r\n                        btnLabel={Translate.home.subscription.btnLabel}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default\r\nconnect(\r\n    state => ({\r\n        settings: state.settings,\r\n        events: state.events,\r\n        articles: state.articles,\r\n        setup: state.setup,\r\n        user: state.user,\r\n        subjects: state.subjects\r\n    }),\r\n    dispatch => ({\r\n        switchMenuNavigation: (page) => {\r\n            dispatch({\r\n                type: \"SWITCH_PAGE\",\r\n                payload: {\r\n                    page: page,\r\n                }\r\n            })\r\n        },\r\n        switchMenuTabActivities: (tabMenu) => {\r\n            dispatch({\r\n                type: \"SWITCH_ACTIVITIES_MENU_TAB\",\r\n                payload: {\r\n                    tabMenu: tabMenu\r\n                }\r\n            })\r\n        },\r\n        saveArticle: (articles) => {\r\n            dispatch({\r\n                type: \"MAIN_PAGE_GET_SAVE_ARTICLES\",\r\n                payload: {\r\n                    articles: articles,\r\n                }\r\n            })\r\n        },\r\n        getArticleInfo: (article) => {\r\n            dispatch({\r\n                type: \"GET_ARTICLE_INFO\",\r\n                payload: {\r\n                    article: article,\r\n                }\r\n            })\r\n        },\r\n        saveSubjects: (subjects) => {\r\n            dispatch({\r\n                type: \"SAVE_SUBJECTS\",\r\n                payload: {\r\n                    subjects: subjects,\r\n                }\r\n            })\r\n        },\r\n        getPublishEvents: (events) => {\r\n            dispatch({\r\n                type: \"GET_PUBLISH_EVENTS\",\r\n                payload: {\r\n                    events: events,\r\n                }\r\n            })\r\n        },\r\n        getEventInfo: (event) => {\r\n            dispatch({\r\n                type: \"GET_EVENT_INFO\",\r\n                payload: {event: event}\r\n            })\r\n        }\r\n    })\r\n)\r\n(MainRoot);","/**\r\n * Created by smalkov on 06.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\n/*css*/\r\nimport \"./listMenu.css\"\r\n\r\n/**\r\n * Компонент список меню с табами(левое меню)\r\n */\r\n\r\nclass ListMenu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    renderList(list, onClick, active, arrayList, disabledCount) {\r\n        let newList = Object.values(list);\r\n        let keys = Object.keys(list);\r\n        if(newList && newList.length) {\r\n            return newList.map((item, index) => {\r\n                return (\r\n                    <div\r\n                        className={active === keys[index] ? \"list_item_menu active_menu_tab\" : \"list_item_menu\"}\r\n                        key={`list_item_${item}_${index}`}\r\n                        onClick={() => {onClick(keys[index])}}\r\n                    >{item}\r\n                    {!disabledCount\r\n                        ? <span>{arrayList && Object.values(arrayList[keys[index]]).length && \"(\" + Object.values(arrayList[keys[index]]).length + \")\" || \"(0\" + \")\"}</span>\r\n                            : ''}</div>\r\n\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { list, onClick, active, arrayList, disabledCount } = this.props;\r\n\r\n        return (\r\n            <div id=\"list_menu\">\r\n                {this.renderList(list, onClick, active, arrayList, disabledCount)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (ListMenu);","/**\r\n * Created by smalkov on 04.09.2018.\r\n */\r\n\r\n/* react - redux */\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*custom components*/\r\nimport ListMenu from \"../../blocks/listMenu/ListMenu\"\r\n/*css*/\r\nimport \"./about.css\"\r\n/*utils*/\r\nimport { fetchData } from \"../../../../utils/fetchHelper\";\r\nimport {TranslateInterface} from \"../../../../utils/translate/Translate\";\r\n/*constants*/\r\nimport { API } from \"../../../../redux/constant/UIConst\";\r\n\r\n/**\r\n * Компонент страницы \"О Нас\"\r\n */\r\n\r\nclass About extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    renderAboutInformation(info) {\r\n        if (info) {\r\n            let title = info.title;\r\n            let text = info.content;\r\n            let content = [];\r\n            text.map((item, index) => {\r\n                switch (Object.keys(item)[0]) {\r\n                    case 'p': {\r\n                        let className = item.p.className;\r\n                        content.push(\r\n                            <p className={className} key={`${Object.keys(item)[0]}_${index}`}>{item.p.text}</p>\r\n                        )\r\n                        break;\r\n                    }\r\n                    case 'br': {\r\n                        content.push(\r\n                            <span key={`${Object.keys(item)[0]}_${index}`}>{item.br}<br/></span>\r\n                        )\r\n                        break;\r\n                    }\r\n                    case 'ol': {\r\n                        let listOl = item.ol;\r\n                        let newList = [];\r\n                        listOl.map((element, index) => {\r\n                            newList.push(\r\n                                <li key={`${Object.keys(item)[0]}_${index}`}>{element}</li>\r\n                            )\r\n                        });\r\n                        content.push(\r\n                            <ol key={`ol_${index}`}>{newList}</ol>\r\n                        );\r\n                        break;\r\n                    }\r\n                    case 'ul': {\r\n                        let listUl = item.ul;\r\n                        let newList = [];\r\n                        listUl.map((element, index) => {\r\n                            newList.push(\r\n                                <li key={`${Object.keys(item)[0]}_${index}`}>{element}</li>\r\n                            )\r\n                        });\r\n                        content.push(\r\n                            <ul key={`ul_${index}`}>{newList}</ul>\r\n                        );\r\n                        break;\r\n                    }\r\n                    default: break;\r\n                }\r\n            });\r\n\r\n            return (\r\n                <div>\r\n                    <h2 className=\"about_title\">{title && title.toUpperCase()}</h2>\r\n                    <div className=\"horizontal_divider\"></div>\r\n                    <div className=\"about_data\">{content}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { settings, about, switchMenuTab } = this.props;\r\n        let Translate = TranslateInterface(settings.language || 'ru');\r\n        let content = this.renderAboutInformation(Translate.about.information.content[about.tabLeftAbout]);\r\n\r\n        return (\r\n            <div id=\"about_page\">\r\n                <div className=\"slider_menu_tab_mobile\">\r\n                    <div>\r\n                        <ListMenu\r\n                            list={Translate.about.tabs}\r\n                            onClick={(tabMenu) => switchMenuTab(tabMenu)}\r\n                            active={about.tabLeftAbout}\r\n                            disabledCount={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"about_content\">\r\n                    {content}\r\n                </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default\r\nconnect(\r\n    state => ({\r\n        user: state.user,\r\n        about: state.about,\r\n        settings: state.settings\r\n    }),\r\n    dispatch => ({\r\n        switchMenuTab: (tabMenu) => {\r\n            dispatch({\r\n                type: \"SWITCH_ABOUT_MENU_TAB\",\r\n                payload: {\r\n                    tabMenu: tabMenu\r\n                }\r\n            })\r\n        }\r\n    })\r\n)\r\n(About);","/**\r\n * Created by smalkov on 04.09.2018.\r\n */\r\n\r\n// react - redux\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*semantic-ui*/\r\nimport { Segment, Dimmer, Loader } from 'semantic-ui-react'\r\n/*custom components*/\r\nimport ListMenu from \"../../blocks/listMenu/ListMenu\"\r\nimport ViewArticles from \"../../blocks/viewArticles/ViewArticles\"\r\n/*utils*/\r\nimport { TranslateInterface } from \"../../../../utils/translate/Translate\"\r\nimport {fetchData} from \"../../../../utils/fetchHelper\";\r\n/*constants*/\r\nimport { API } from \"../../../../redux/constant/UIConst\";\r\n/*css*/\r\nimport \"./library.css\"\r\nimport history from \"../../../../history\";\r\n\r\n/**\r\n * Компонент страницы \"Библиотека\"\r\n */\r\n\r\nclass Library extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { getArticlesLibrary, saveSubjects, settings } = this.props;\r\n        fetchData(API.ARTICLE.GET_ALL_ARTICLES, {language: settings.language || 'RU'}, getArticlesLibrary);\r\n        fetchData(API.SUBJECTS.GET_ALL_SUBJECTS, {}, saveSubjects);\r\n    }\r\n\r\n    render() {\r\n        let { settings, switchMenuTab, library, subjects, user } = this.props;\r\n        let Translate = TranslateInterface(settings.language || 'ru');\r\n        let tab = library.tabLeftLibrary ;\r\n        let articles = library.articles[tab];\r\n\r\n        return (\r\n            <div id=\"library_Page\">\r\n                <div className=\"slider_menu_tab_mobile\">\r\n                    <div>\r\n                        <ListMenu\r\n                            list={Translate.library.tabs}\r\n                            onClick={(tabMenu) => switchMenuTab(tabMenu)}\r\n                            active={library.tabLeftLibrary}\r\n                            arrayList={library.articles}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"library_content\">\r\n                    {articles && !Object.keys(articles).length ?\r\n                        <Segment className=\"main_root_loading\">\r\n                            <Dimmer active inverted>\r\n                                <Loader inverted/>\r\n                            </Dimmer>\r\n                        </Segment>\r\n                        :\r\n                        <ViewArticles\r\n                            className={`${tab}`}\r\n                            status={true}\r\n                            statusLabel={Translate.my_publications.status}\r\n                            title={Translate.library.tabs[tab]}\r\n                            btnLabel={Translate.home.leftPanel.readNext}\r\n                            articles={Object.values(articles)}\r\n                            countViewArticles={Object.values(articles).length}\r\n                            subjects={subjects.data}\r\n                            user={user}\r\n                            onClick={(id) =>{\r\n                                history.push(`/library/${id}`);\r\n                            }}\r\n                        />}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default\r\nconnect(\r\n    state => ({\r\n        library: state.library,\r\n        settings: state.settings,\r\n        user: state.user,\r\n        subjects: state.subjects\r\n    }),\r\n    dispatch => ({\r\n        switchMenuNavigation: (page) => {\r\n            dispatch({\r\n                type: \"SWITCH_PAGE\",\r\n                payload: {\r\n                    page: page,\r\n                }\r\n            })\r\n        },\r\n        switchMenuTab: (tabMenu) => {\r\n            dispatch({\r\n                type: \"SWITCH_LIBRARY_MENU_TAB\",\r\n                payload: {\r\n                    tabMenu: tabMenu\r\n                }\r\n            })\r\n        },\r\n        getArticlesLibrary: (articles) => {\r\n            dispatch({\r\n                type: \"GET_ARTICLES_LIBRARY\",\r\n                payload: {\r\n                    articles: articles\r\n                }\r\n            })\r\n        },\r\n        saveSubjects: (subjects) => {\r\n            dispatch({\r\n                type: \"SAVE_SUBJECTS\",\r\n                payload: {\r\n                    subjects: subjects,\r\n                }\r\n            })\r\n        }\r\n    })\r\n)\r\n(Library);","/**\r\n * Created by smalkov on 12.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*semantic-ui components*/\r\nimport { Icon } from 'semantic-ui-react'\r\n/*custom-components*/\r\nimport User from \"../../../ui/user/User\"\r\nimport UserInfoCard from \"../../../ui/userInfoCard/UserInfoCard\"\r\n/*css*/\r\nimport \"./listUsers.css\"\r\n\r\n/**\r\n * Компонент блок-списка пользователей\r\n */\r\n\r\nclass ListUsers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.close = this.close.bind(this);\r\n        this.state = {\r\n            activeIndex: '',\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.setState({\r\n            activeIndex: ''\r\n        })\r\n    }\r\n\r\n    renderListUsers(list, Translate) {\r\n        let { activeIndex } = this.state;\r\n        if(list && list.length){\r\n            return list.map((item, index) => {\r\n                return (\r\n                    <div className=\"user_list_item\"\r\n                         key={`${item.id}`}\r\n                         onClick={(e) => {\r\n                             this.props.saveUserInfoCard(item);\r\n\r\n                         }}\r\n                    >\r\n                        <User\r\n                            className=\"list_user_item\"\r\n                            key={`user_list_${index}`}\r\n                            name={item.name}\r\n                            rank={item.rank}\r\n                            avatar_id={item.avatarId}\r\n                        />\r\n                            {/*<div className=\"user_info_card_container\">\r\n                                {index === activeIndex &&\r\n                                    <UserInfoCard\r\n                                        user={item}\r\n                                        className=\"userInfo\"\r\n                                        close={this.close}\r\n                                        Translate={Translate}\r\n                                        onClick={(e) => e.stopPropagation()}\r\n                                    />}\r\n                            </div>*/}\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { list, Translate } = this.props;\r\n        return (\r\n            <div id=\"list_users\">\r\n                {this.renderListUsers(list, Translate)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (ListUsers)","/**\r\n * Created by smalkov on 28.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\n/*semantic-ui components*/\r\nimport { Button, Modal, Input, Icon} from 'semantic-ui-react'\r\n/*custom components*/\r\nimport User from \"../../ui/user/User\"\r\n/*css*/\r\nimport \"./userInfoCard.css\"\r\n\r\n/**\r\n *  Компонент отображения карточки пользователя\r\n */\r\n\r\nclass UserInfoCard extends React.PureComponent {\r\n    render() {\r\n        let { className, user, close } = this.props;\r\n\r\n        return (\r\n            <div className={`user_info_card ${className}`}>\r\n                <User\r\n                    className=\"list_user_info\"\r\n                    name={user.name}\r\n                    rank={user.rank}\r\n                    avatar_id={user.avatarId}/>\r\n                <div className=\"articlesUserCount\">\r\n                    {/*<div className=\"text\">{Translate.activities.communityMembers.userInfoCard.article + \" \"} </div>\r\n                    <div className=\"link\"></div>*/}\r\n                </div>\r\n                <div className=\"descriptionUser\">{user.about || \"Нет информации\"}</div>\r\n                <Icon name=\"close\" onClick={close}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (UserInfoCard)","/**\r\n * Created by smalkov on 06.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\n/*semantic-ui components*/\r\nimport { Button, Input} from 'semantic-ui-react'\r\n/*utils*/\r\nimport {DaysOfMonth, FormateDate} from \"../../../../utils/utils\"\r\n/*utils*/\r\nimport { ConvertBase64File } from \"../../../../utils/utils\";\r\nimport {fetchData, fetchDataGet} from \"../../../../utils/fetchHelper\";\r\n/*svgIcons*/\r\nimport { UserPhoto } from \"../../../ui/svgIcons/svgIcons\"\r\n/*constants*/\r\nimport { API } from \"../../../../redux/constant/UIConst\";\r\n/*css*/\r\nimport \"./userInfoCard.css\"\r\n\r\n/**\r\n * Компонент просмотра персональных данных пользователя(просмотр, редактирование, сохранение)\r\n */\r\n\r\nclass UserInfoCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    getAvatar(userAvatar) {\r\n        let { translate } = this.props;\r\n        //let avatar =  <Icon name='user circle outline'/>;\r\n        let avatar =\r\n            <div className=\"not_photo_avatar\">\r\n                <UserPhoto/>\r\n                <div>{translate.setup.rightPanel.avatar.notPhoto}</div>\r\n            </div>;\r\n            if (userAvatar) {\r\n                avatar = <div id=\"img-preview\" style={{background: `url(${document.location.origin}/api/file/get?id=${userAvatar}) center no-repeat`}}/>\r\n            }\r\n        return avatar\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let { saveUserInfoCard } = this.props;\r\n        saveUserInfoCard({});\r\n    }\r\n\r\n    render() {\r\n        let { translate, userInfo } = this.props;\r\n        let date = userInfo.birthday && FormateDate(new Date(userInfo.birthday), true) || \"-\";\r\n\r\n        return (\r\n            <div id=\"user_info_card\">\r\n                <div className=\"data_content\">\r\n                    <div className=\"personal_data_left_panel\">\r\n                        <div className=\"ui input container mobile_avatar\">\r\n                            {/*<span>{Translate.setup.rightPanel.avatar.photo}</span>*/}\r\n                            <div className=\"avatar_container\" id=\"user_avatar_container\">\r\n                                {this.getAvatar(userInfo.avatarId)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ui input container container_fullName\">\r\n                            <span>{translate.setup.rightPanel.name.label}</span>\r\n                            <div>{userInfo.name || \"-\"}</div>\r\n                        </div>\r\n                        <div className=\"ui input container container_scienceDegree \">\r\n                            <span>{translate.setup.rightPanel.rank.label}</span>\r\n                            <div>{userInfo.rank || \"-\"}</div>\r\n                        </div>\r\n                        <div className=\"ui input container container_date\">\r\n                            <span>{translate.setup.rightPanel.birthday.label}</span>\r\n                            <div>{date}</div>\r\n                        </div>\r\n                        <div className=\"ui input container container_city\">\r\n                            <span>{translate.setup.rightPanel.city.label}</span>\r\n                            <div>{userInfo.city || \"-\"}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"personal_data_right_panel\">\r\n                        <div className=\"ui input container\">\r\n                            {/*<span>{Translate.setup.rightPanel.avatar.photo}</span>*/}\r\n                            <div className=\"avatar_container\" id=\"user_avatar_container\">\r\n                                {this.getAvatar(userInfo.avatarId)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ui input container container_scientificAchievements\">\r\n                    <span>{translate.setup.rightPanel.achievements.label}</span>\r\n                    <div>{userInfo.achievements || \"-\"}</div>\r\n                </div>\r\n                <div className=\"ui input container container_about\">\r\n                    <span>{translate.setup.rightPanel.about.label}</span>\r\n                    <div>{userInfo.about || \"-\"}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (UserInfoCard)","/**\r\n * Created by smalkov on 09.11.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*semantic-ui components*/\r\nimport { Icon } from 'semantic-ui-react'\r\n/*css*/\r\nimport \"./infoEvent.css\"\r\n\r\n/**\r\n * Компонент просмотра события\r\n */\r\n\r\nclass InfoEvent extends React.Component {\r\n\r\n    render() {\r\n        let { infoEvent, translate, clearEventInfo } = this.props;\r\n        let oldDate = infoEvent.publishDate && new Date(infoEvent.publishDate);\r\n        let day = oldDate.getDate();\r\n        let month = translate.setup.rightPanel.birthday.month.optionsMonth[oldDate.getMonth()];\r\n        let year = oldDate.getFullYear();\r\n        return (\r\n            <div id=\"info_event\">\r\n                <div className=\"head_title_info_event\">\r\n                    <Icon\r\n                        className=\"eventInfo_arrow_left\"\r\n                        name=\"arrow left\"\r\n                        onClick={clearEventInfo}\r\n                    />\r\n                    <div>\r\n                        <div className=\"info_event_date\">{day + \" \" + month + \" \" + year}</div>\r\n                        <div className=\"info_event_label\">{infoEvent.caption}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"horizontal_divider\"></div>\r\n                <div className=\"content_info_event\">\r\n                    {infoEvent.text}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default (InfoEvent);\r\n\r\n\r\n","import history from \"../../../../history\";\r\n\r\n/*\r\n * Created by smalkov on 03.10.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*custom components*/\r\nimport ListMenu from \"../../blocks/listMenu/ListMenu\"\r\nimport ListUsers from \"../../blocks/listUsers/ListUsers\"\r\nimport UserInfoCard from \"../../blocks/userInfoCard/UserInfoCard\"\r\nimport EventList from \"../../../ui/eventList/EventList\"\r\nimport InfoEvent from \"../../blocks/infoEvent/InfoEvent\"\r\n/*semantic-ui components*/\r\nimport { Icon, Segment, Dimmer, Loader } from 'semantic-ui-react'\r\n/*utils*/\r\nimport { TranslateInterface } from \"../../../../utils/translate/Translate\"\r\nimport { fetchData } from \"../../../../utils/fetchHelper\";\r\nimport { getCloneObject } from \"../../../../utils/utils\";\r\n\r\n/*constatnts*/\r\nimport {API} from \"../../../../redux/constant/UIConst\";\r\n/*css*/\r\nimport \"./activities.css\"\r\n\r\n/**\r\n * Компонент страницы \"Деятельность\"\r\n */\r\n\r\nclass Activities extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onClickEvent = this.onClickEvent.bind(this);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { getListUsers, switchMenuTab, user, activities } = this.props;\r\n        fetchData(API.USER.GET_ALL_USERS, {}, getListUsers);\r\n        if (!Object.keys(user).length) {\r\n            if(activities.tabLeftActivities === \"members\") {\r\n                switchMenuTab('formsActivities')\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        let { user, getListUsers, switchMenuTab } = this.props;\r\n        let newUser = newProps.user;\r\n        if(Object.keys(user).length === 0 && Object.keys(newUser).length !== 0) {\r\n            setTimeout(() => {\r\n                fetchData(API.USER.GET_ALL_USERS, {}, getListUsers);\r\n            }, 300);\r\n            newProps.switchMenuTab('members')\r\n        } else if (Object.keys(user).length !== 0 && Object.keys(newUser).length === 0) {\r\n            newProps.switchMenuTab('formsActivities')\r\n        }\r\n    }\r\n\r\n    onClickEvent(event) {//Проваливаемся в просмотр события\r\n        let { getEventInfo } = this.props;\r\n        getEventInfo(event);\r\n    }\r\n\r\n    renderContent(type) {\r\n        let { activities, settings, saveUserInfoCard, userInfoCard, events, infoEvent } = this.props;\r\n        let Translate = TranslateInterface(settings.language || 'ru');\r\n        let listUsers = activities.communityMembers && activities.communityMembers.users || [];\r\n        let isOpenUserCard = userInfoCard && Object.keys(userInfoCard).length;\r\n        let title = '';\r\n        let content = '';\r\n        switch(type) {\r\n            case \"members\": {\r\n                title = !isOpenUserCard\r\n                            && <h2>{Translate.activities.communityMembers.title.toUpperCase()}</h2>\r\n                                || <h2>\r\n                                     <Icon\r\n                                         className=\"userInfo_arrow_left\"\r\n                                         name=\"arrow left\"\r\n                                         onClick={() => {saveUserInfoCard({})}}\r\n                                     />{Translate.activities.communityMembers.userInfoCard.title}\r\n                                  </h2>;\r\n                if (!Object.values(listUsers).length) {\r\n                    content =\r\n                        <Segment className=\"main_root_loading\">\r\n                            <Dimmer active inverted>\r\n                                <Loader inverted/>\r\n                            </Dimmer>\r\n                        </Segment>\r\n                } else {\r\n                    content =\r\n                        !isOpenUserCard &&\r\n                        <ListUsers\r\n                            list={Object.values(listUsers)}\r\n                            Translate={Translate}\r\n                            saveUserInfoCard={saveUserInfoCard}\r\n                        /> || <UserInfoCard\r\n                            translate={Translate}\r\n                            userInfo={userInfoCard}\r\n                            saveUserInfoCard={saveUserInfoCard}\r\n                        />;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case \"formsActivities\": {\r\n                let text = Translate.activities.formsActivities.text;\r\n                title = <h2>{Translate.activities.formsActivities.title.toUpperCase()}</h2>;\r\n                content = (\r\n                    text.map((item, index) => {\r\n                        let list = item.list.map((element, key) => {\r\n                            return (\r\n                                <li>{element}</li>\r\n                            )\r\n                        });\r\n                        return (\r\n                            <div>\r\n                                <div key={`textBlock_${index}`}>{item.textBlock}</div>\r\n                                <ul>{list}</ul>\r\n                            </div>\r\n                        )\r\n                    })\r\n                );\r\n                break;\r\n            }\r\n            case \"contacts\": {\r\n                title = <h2>{Translate.activities.contacts.title.toUpperCase()}</h2>;\r\n                content ='';\r\n                break;\r\n            }\r\n            case \"events\": {\r\n                title = <h2>{Translate.activities.events.title.toUpperCase()}</h2>;\r\n                if (!Object.values(events.list).length) {\r\n                    content =\r\n                        <Segment className=\"main_root_loading\">\r\n                            <Dimmer active inverted>\r\n                                <Loader inverted/>\r\n                            </Dimmer>\r\n                        </Segment>\r\n                } else {\r\n                    content =\r\n                        events.list && events.list.length &&\r\n                        <EventList\r\n                            events={events.list}\r\n                            countView = {events.list && events.list.length}\r\n                            onClick={this.onClickEvent}\r\n                        />\r\n                        ||  <div className=\"table_not_found_data\">{Translate.administration.notFoundData.events}</div>;\r\n                }\r\n                break;\r\n            }\r\n            case \"codex\": {\r\n                title = <h2>{Translate.activities.codex.title.toUpperCase()}</h2>;\r\n                content = <div>{Translate.activities.codex.text}</div>;\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n\r\n        return (\r\n            <div className={`activities_${type}`}>\r\n                <div className={`activities_title`}>{title}</div>\r\n                <div className=\"horizontal_divider\"></div>\r\n                <div className={`activities_data`}>{content}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let { settings, switchMenuTab, activities, user, saveUserInfoCard, getPublishEvents, infoEvent, clearEventInfo } = this.props;\r\n        let Translate = TranslateInterface(settings.language || 'ru');\r\n        let content = this.renderContent(activities.tabLeftActivities);\r\n        let listTabs = getCloneObject(Translate.activities.tabs);\r\n        if (!Object.keys(user).length) {\r\n            delete listTabs.members;\r\n        }\r\n\r\n        return (\r\n            <div id=\"activities_page\">\r\n                <div className=\"slider_menu_tab_mobile\">\r\n                    <div>\r\n                        <ListMenu\r\n                            list={listTabs}\r\n                            onClick={(tabMenu) => {\r\n                                switchMenuTab(tabMenu);\r\n                                clearEventInfo();\r\n                                if(tabMenu === 'members') {\r\n                                    saveUserInfoCard({});\r\n                                } else if (tabMenu === 'events') {\r\n                                    fetchData(API.ADMINISTRATION.GET_PUBLISH_NEWS, {number : 0, size : 50, language: settings.language || 'RU'}, getPublishEvents);\r\n                                }\r\n                            }}\r\n                            active={activities.tabLeftActivities}\r\n                            disabledCount={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"activities_content\">\r\n                    {infoEvent && Object.keys(infoEvent).length\r\n                        && <InfoEvent\r\n                            infoEvent={infoEvent}\r\n                            translate={Translate}\r\n                            clearEventInfo={() => clearEventInfo()}\r\n                    />\r\n                            || content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default\r\nconnect(\r\n    state => ({\r\n        activities: state.activities,\r\n        events: state.events,\r\n        settings: state.settings,\r\n        userInfoCard: state.userInfoCard,\r\n        infoEvent: state.infoEvent,\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        switchMenuTab: (tabMenu) => {\r\n            dispatch({\r\n                type: \"SWITCH_ACTIVITIES_MENU_TAB\",\r\n                payload: {\r\n                    tabMenu: tabMenu\r\n                }\r\n            })\r\n        },\r\n        getListUsers: (listUsers) => {\r\n            dispatch({\r\n                type: \"GET_LIST_USERS_ACTIVITIES\",\r\n                payload: {\r\n                    listUsers: listUsers,\r\n                }\r\n            })\r\n        },\r\n        saveUserInfoCard: (userInfo) => {\r\n            dispatch({\r\n                type: \"SAVE_USER_INFO_CARD\",\r\n                payload: {\r\n                    userInfo: userInfo,\r\n                }\r\n            })\r\n        },\r\n        getPublishEvents: (events) => {\r\n            dispatch({\r\n                type: \"GET_PUBLISH_EVENTS\",\r\n                payload: {\r\n                    events: events,\r\n                }\r\n            })\r\n        },\r\n        getEventInfo: (event) => {\r\n            dispatch({\r\n                type: \"GET_EVENT_INFO\",\r\n                payload: {event: event}\r\n            })\r\n        },\r\n        clearEventInfo: (event) => {\r\n            dispatch({\r\n                type: \"CLEAR_INFO_EVENT\"\r\n            })\r\n        }\r\n    })\r\n)\r\n(Activities);","/**\r\n * Created by smalkov on 06.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\n/*semantic-ui components*/\r\nimport { Button, Input, Dropdown, Icon} from 'semantic-ui-react'\r\n/*utils*/\r\nimport { DaysOfMonth } from \"../../../../utils/utils\"\r\n/*utils*/\r\nimport { ConvertBase64File, isAutoFocusMobile } from \"../../../../utils/utils\";\r\nimport {fetchData, fetchDataGet} from \"../../../../utils/fetchHelper\";\r\n/*svgIcons*/\r\nimport { UserPhoto } from \"../../../ui/svgIcons/svgIcons\"\r\n/*constants*/\r\nimport { API } from \"../../../../redux/constant/UIConst\";\r\n/*css*/\r\nimport \"./personalData.css\"\r\n\r\n/**\r\n * Компонент персональных данных пользователя(просмотр, редактирование, сохранение)\r\n */\r\n\r\nclass PersonalData extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.setDateBirthday = this.setDateBirthday.bind(this);\r\n        this.state = {\r\n            birthday: {\r\n                dayBirthday: '',\r\n                monthBirthday: '',\r\n                yearBirthday: '',\r\n            },\r\n            checkErrorName: false,\r\n            checkErrorRank: false,\r\n            disabledBtn: false\r\n        }\r\n    }\r\n\r\n    options() { //Заполняем массивы для даты dropdown\r\n        let { Translate, setup } = this.props;\r\n        let oldDate = new Date(setup.personalData.birthday);\r\n        let month = oldDate && oldDate.getMonth() || new Date().getMonth();\r\n        let year = oldDate && oldDate.getFullYear() || new Date().getFullYear();\r\n        let daysOfMonth = DaysOfMonth(year, month);\r\n        let months = Translate.setup.rightPanel.birthday.month.options;\r\n        let options = {\r\n            number: [],\r\n            month: [],\r\n            year: []\r\n        };\r\n        for (let m = 0; m < months.length; m++) {\r\n            let element = {key: m, text: months[m], value: m};\r\n            options.month.push(element);\r\n        }\r\n\r\n        for(let n = 1; n <= daysOfMonth; n++) {\r\n            let element = {key: n, text: n, value: n};\r\n            options.number.push(element);\r\n        }\r\n\r\n        for(let y = 1930; y <= new Date().getFullYear(); y++) {\r\n            let element = {key: y, text: y, value: y};\r\n            options.year.push(element);\r\n        }\r\n\r\n        return options\r\n    }\r\n\r\n    checkValidation(value, type) {\r\n        let { checkErrorName, checkErrorRank, disabledBtn } = this.state;\r\n        if(type === 'name' && !value) {\r\n            checkErrorName = true;\r\n        } else {\r\n            checkErrorName = false;\r\n        }\r\n\r\n        if(type === 'rank' && !value) {\r\n            checkErrorRank = true;\r\n        } else {\r\n            checkErrorRank = false;\r\n        }\r\n\r\n        if (!value) {\r\n            disabledBtn = true;\r\n        } else {\r\n            disabledBtn = false;\r\n        }\r\n\r\n        this.setState({\r\n            checkErrorName: checkErrorName,\r\n            checkErrorRank: checkErrorRank,\r\n            disabledBtn: disabledBtn\r\n        });\r\n\r\n    }\r\n\r\n    setDateBirthday (value, type) {\r\n        let { birthday } = this.state;\r\n        let { handleChange, setup } = this.props;\r\n        let oldBirthday = setup.personalData.birthday && new Date(setup.personalData.birthday);\r\n        if(oldBirthday) {\r\n            birthday = {\r\n                dayBirthday: oldBirthday && oldBirthday.getDate() || '',\r\n                monthBirthday: oldBirthday && oldBirthday.getMonth() || '',\r\n                yearBirthday: oldBirthday && oldBirthday.getFullYear() || ''\r\n            };\r\n        }\r\n\r\n        birthday[type] = value;\r\n        this.setState({birthday: birthday});\r\n        if (birthday.dayBirthday && birthday.monthBirthday &&  birthday.yearBirthday) {\r\n            let maxDayMonth = DaysOfMonth(birthday.yearBirthday, birthday.monthBirthday)\r\n            if(birthday.dayBirthday > maxDayMonth && birthday.yearBirthday) {\r\n                birthday['dayBirthday'] = maxDayMonth;\r\n            }\r\n            this.setState({birthday: birthday});\r\n            let date = new Date( birthday.yearBirthday, birthday.monthBirthday, birthday.dayBirthday);\r\n            handleChange(date, 'birthday', 'personalData')\r\n        }\r\n    }\r\n\r\n    setAvatar = (e) => { //Загрузка аватара\r\n        let { handleChange, filePreviewSave } = this.props;\r\n        let file = e.target.files && e.target.files[0] || '';\r\n        if (file) {\r\n            // const urlBlob = window.URL.createObjectURL(e.target.files[0]);\r\n            // handleChange(urlBlob, 'avatarId', 'personalData');\r\n            //uploadFile(API.FILES.FILE_SAVE, e.target.files[0], () => {});\r\n            /*fetchData(API.FILES.FILE_SAVE, urlBlob);*/\r\n            // filePreviewSave(base64File, file);\r\n            handleChange(null, 'avatarId', 'personalData');\r\n            ConvertBase64File(file, (base64File) => {filePreviewSave(base64File, file)});\r\n        }\r\n    };\r\n\r\n    getAvatar(userAvatar, newAvatar) {\r\n        let { Translate } = this.props;\r\n        //let avatar =  <Icon name='user circle outline'/>;\r\n        let avatar =\r\n            <div className=\"not_photo_avatar\">\r\n                <UserPhoto/>\r\n                <div>{Translate.setup.rightPanel.avatar.notPhoto}</div>\r\n            </div>;\r\n        if (newAvatar) {\r\n            avatar = <div id=\"img-preview\" style={{background: `url(${newAvatar}) center no-repeat`}}/>;\r\n        } else {\r\n            if (userAvatar) {\r\n                avatar = <div id=\"img-preview\" style={{background: `url(${document.location.origin}/api/file/get?id=${userAvatar}) center no-repeat`}}/>\r\n            }\r\n        }\r\n        return avatar\r\n    }\r\n\r\n    render() {\r\n        let { Translate, setup, handleChange, onSave, imagePreview, filePreviewSave } = this.props;\r\n        let { checkErrorName, checkErrorRank, disabledBtn, birthday } = this.state;\r\n        let personalData = setup.personalData;\r\n        let date = personalData.birthday && new Date(personalData.birthday) || '';\r\n\r\n        return (\r\n            <div id=\"main_personal_data\">\r\n                <div className=\"main_personal_data_title\">\r\n                    <div className=\"personal_data_left_panel_title\">{Translate.setup.rightPanel.personalData}</div>\r\n                    <div className=\"horizontal_divider\"></div>\r\n                </div>\r\n                <div className=\"main_personal_data_content\">\r\n                    <div className=\"personal_data_left_panel\">\r\n                        <div className=\"ui input container mobile_avatar\">\r\n                            {/*<span>{Translate.setup.rightPanel.avatar.photo}</span>*/}\r\n                            <div className=\"avatar_container\" id=\"user_avatar_container\">\r\n                                {this.getAvatar(personalData.avatarId, imagePreview)}\r\n                            </div>\r\n                            <Button className=\"avatar_change_btn articles_btn_style\"\r\n                                    onClick={() => {\r\n                                        this.avInput.value = '';\r\n                                        this.avInput.click()\r\n                                    }}\r\n                            >{Translate.setup.rightPanel.avatar.download}</Button>\r\n                            {personalData.avatarId || imagePreview ?\r\n                                <Button className=\"avatar_change_btn btn_gray\"\r\n                                        onClick={() => {\r\n                                            handleChange(null, 'avatarId', 'personalData');\r\n                                            filePreviewSave('', '')\r\n                                        }}\r\n                                >{Translate.setup.rightPanel.avatar.delete}</Button> : ''}\r\n                            <input\r\n                                style={{display: 'none'}}\r\n                                type=\"file\"\r\n                                multiple\r\n                                accept=\"image/*\"\r\n                                name=\"img\"\r\n                                ref={(input) => {\r\n                                    this.avInput = input;\r\n                                }}\r\n                                onChange={(e) => {\r\n                                    this.setAvatar(e);}\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className=\"ui input container container_fullName\">\r\n                            <span>{Translate.setup.rightPanel.name.label} <span>*</span></span>\r\n                            <Input\r\n                                type=\"text\"\r\n                                autoFocus={isAutoFocusMobile()}\r\n                                value={personalData.name}\r\n                                placeholder={Translate.setup.rightPanel.name.placeholder}\r\n                                onChange={(e, select) => {\r\n                                    this.checkValidation(select.value, 'name');\r\n                                    handleChange(select.value, 'name', 'personalData')}}\r\n                            />\r\n                            {checkErrorName ? <div className=\"error\">{Translate.setup.rightPanel.error.field}</div> : ''}\r\n                        </div>\r\n                        <div className=\"ui input container container_scienceDegree \">\r\n                            <span>{Translate.setup.rightPanel.rank.label} <span>*</span></span>\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder={Translate.setup.rightPanel.rank.placeholder}\r\n                                value={personalData.rank}\r\n                                onChange={(e, select) => {\r\n                                    this.checkValidation(select.value, 'rank');\r\n                                    handleChange(select.value, 'rank', 'personalData')}}\r\n                            />\r\n                            {checkErrorRank ? <div className=\"error\">{Translate.setup.rightPanel.error.field}</div> : ''}\r\n                        </div>\r\n                        <div className=\"ui input container container_date\">\r\n                            <span>{Translate.setup.rightPanel.birthday.label}</span>\r\n                            <div>\r\n                                <div>\r\n                                    <Dropdown\r\n                                        className=\"dateOfBirth_day\"\r\n                                        selection\r\n                                        options={this.options().number}\r\n                                        placeholder={Translate.setup.rightPanel.birthday.number}\r\n                                        value={date && date.getDate() || birthday.dayBirthday}\r\n                                        onChange={(e, select) => {this.setDateBirthday(select.value, 'dayBirthday')}}\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <Dropdown\r\n                                        className=\"dateOfBirth_month\"\r\n                                        selection\r\n                                        options={this.options().month}\r\n                                        placeholder={Translate.setup.rightPanel.birthday.month.label}\r\n                                        value={date && date.getMonth() || birthday.monthBirthday}\r\n                                        onChange={(e, select) => {this.setDateBirthday(select.value, 'monthBirthday')}}\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <Dropdown\r\n                                        className=\"dateOfBirth_year\"\r\n                                        selection\r\n                                        options={this.options().year}\r\n                                        placeholder={Translate.setup.rightPanel.birthday.year}\r\n                                        value={date && date.getFullYear() || birthday.yearBirthday}\r\n                                        onChange={(e, select) => {this.setDateBirthday(select.value, 'yearBirthday')}}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ui input container container_city\">\r\n                            <span>{Translate.setup.rightPanel.city.label}</span>\r\n                            <Input\r\n                                type=\"text\"\r\n                                placeholder={Translate.setup.rightPanel.city.placeholder}\r\n                                value={personalData.city}\r\n                                onChange={(e, select) => {handleChange(select.value, 'city', 'personalData')}}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ui input container container_scientificAchievements\">\r\n                            <span>{Translate.setup.rightPanel.achievements.label}</span>\r\n                            <textarea\r\n                                className=\"achievements\"\r\n                                type=\"text\"\r\n                                placeholder={Translate.setup.rightPanel.about.placeholder}\r\n                                value={personalData.achievements}\r\n                                onChange={(e) => {handleChange(e.currentTarget.value, 'achievements', 'personalData')}}\r\n                            />\r\n                        </div>\r\n                        <div className=\"ui input container container_scientificAchievements\">\r\n                            <span>{Translate.setup.rightPanel.about.label}</span>\r\n                            <textarea\r\n                                className=\"about\"\r\n                                type=\"text\"\r\n                                placeholder={Translate.setup.rightPanel.about.placeholder}\r\n                                value={personalData.about}\r\n                                onChange={(e) => {handleChange(e.currentTarget.value, 'about', 'personalData')}}\r\n                            />\r\n                        </div>\r\n                        <Button\r\n                            disabled={!setup.params.edit || disabledBtn}\r\n                            className=\"ui button save_personal_data_btn btn_standart_style\" onClick={onSave}>{Translate.setup.rightPanel.btnSave}</Button>\r\n                    </div>\r\n                    <div className=\"personal_data_right_panel\">\r\n                        <div className=\"ui input container\">\r\n                            {/*<span>{Translate.setup.rightPanel.avatar.photo}</span>*/}\r\n                            <div className=\"avatar_container\" id=\"user_avatar_container\">\r\n                                {this.getAvatar(personalData.avatarId, imagePreview)}\r\n                            </div>\r\n                            <Button className=\"avatar_change_btn articles_btn_style\"\r\n                                    onClick={() => {\r\n                                        this.avInput.value = '';\r\n                                        this.avInput.click()\r\n                                    }}\r\n                            >{Translate.setup.rightPanel.avatar.download}</Button>\r\n                            {personalData.avatarId || imagePreview ?\r\n                                <Button className=\"avatar_change_btn btn_gray\"\r\n                                        onClick={() => {\r\n                                            handleChange(null, 'avatarId', 'personalData');\r\n                                            filePreviewSave('', '')\r\n                                        }}\r\n                                >{Translate.setup.rightPanel.avatar.delete}</Button> : ''}\r\n                            <input\r\n                                style={{display: 'none'}}\r\n                                type=\"file\"\r\n                                multiple\r\n                                accept=\"image/*\"\r\n                                name=\"img\"\r\n                                ref={(input) => {\r\n                                    this.avInput = input;\r\n                                }}\r\n                                onChange={(e) => {\r\n                                    this.setAvatar(e);}\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (PersonalData)","/**\r\n * Created by smalkov on 04.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n/*css*/\r\nimport \"./setup.css\"\r\n/*custom-components*/\r\n/*semantic-ui components*/\r\nimport { Icon } from 'semantic-ui-react'\r\nimport PersonalData from \"../../blocks/personalData/PersonalData\"\r\nimport ListMenu from \"../../blocks/listMenu/ListMenu\"\r\n/*utils*/\r\nimport { TranslateInterface } from \"../../../../utils/translate/Translate\"\r\nimport { fetchData, uploadFile } from \"../../../../utils/fetchHelper\";\r\nimport {DaysOfMonth, getLang} from \"../../../../utils/utils\"\r\n/*constants*/\r\nimport { API } from \"../../../../redux/constant/UIConst\";\r\nimport history from \"../../../../history\";\r\n\r\n/**\r\n * Компонент страницы \"Настройка профиля\"\r\n */\r\n\r\nclass Setup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSavePersonalData = this.onSavePersonalData.bind(this);\r\n        this.state = {\r\n            isCheckWindow: false\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        let { myUserInfo } = this.props;\r\n        fetchData(API.USER.GET_USER_INFO, {}, myUserInfo)\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        let { isCheckWindow } = this.state;\r\n        if(!prevState.isCheckWindow && isCheckWindow) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    isCheckWindow: false\r\n                });\r\n            }, 2000)\r\n\r\n        }\r\n    }\r\n\r\n    renderCheckWindow(titleCheckWindow) {\r\n        return (\r\n            <div className=\"check_window_custom_content\">\r\n                <div className=\"container_icon_check\">\r\n                    <Icon className=\"icon_check\" name=\"check\"/>\r\n                </div>\r\n                <div className=\"check_window_text\">{titleCheckWindow}</div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    onSavePersonalData() {\r\n        let {setup, myUserInfo, imagePreview} = this.props;\r\n        let personalData = setup.personalData;\r\n        let data = {\r\n            id: personalData.id,\r\n            name: personalData.name,\r\n            avatarId: personalData.avatarId,\r\n            birthday: personalData.birthday && new Date(personalData.birthday).getTime(),\r\n            rank: personalData.rank,\r\n            city: personalData.city,\r\n            about: personalData.about,\r\n            achievements: personalData.achievements,\r\n            status: personalData.status,\r\n            role: personalData.role\r\n\r\n        };\r\n        if (imagePreview.file) {\r\n            uploadFile(API.FILES.FILE_SAVE, imagePreview.file, (fileData) => {\r\n                data.avatarId = fileData.id;\r\n                fetchData(API.USER.SAVE_USER, data,\r\n                    (data) => {\r\n                        myUserInfo(data);\r\n                        this.setState({isCheckWindow: true})\r\n                    });\r\n\r\n            });\r\n        } else {\r\n            fetchData(API.USER.SAVE_USER, data,\r\n                (data) => {\r\n                    myUserInfo(data);\r\n                    this.setState({isCheckWindow: true})\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {//Сброс данных пользователя\r\n        let { clearMyUserInfo, filePreviewSave } = this.props;\r\n        clearMyUserInfo();\r\n        filePreviewSave('');\r\n    }\r\n\r\n    handleChange(value, type, block) {\r\n        let { handleChangeData } = this.props;\r\n       handleChangeData(value, type, block);\r\n    }\r\n\r\n    render() {\r\n        let { settings, filePreviewSave, setup, switchMenuTab, loadFile, imagePreview } = this.props;\r\n        let { isCheckWindow } = this.state;\r\n        let contentCheckWindow = this.renderCheckWindow('Данные успешно сохранены');\r\n        let Translate = TranslateInterface(settings.language || 'ru');\r\n\r\n        return (\r\n            <div id=\"main-setup\">\r\n                <ListMenu\r\n                    list={Translate.setup.leftMenu}\r\n                    onClick={(tabMenu) => switchMenuTab(tabMenu)}\r\n                    active={setup.params.tabLeftMenu}\r\n                    disabledCount={true}\r\n                />\r\n                {setup.params.tabLeftMenu === 'personalData'\r\n                    ? <PersonalData\r\n                        Translate={Translate}\r\n                        setup={setup}\r\n                        handleChange={this.handleChange}\r\n                        onSave={this.onSavePersonalData}\r\n                        filePreviewSave={filePreviewSave}\r\n                        imagePreview={imagePreview.preview}\r\n                        loadFile={loadFile}\r\n                    />\r\n                        : ''}\r\n\r\n                {isCheckWindow ?\r\n                    <div className=\"check_window\">\r\n                        <div>{contentCheckWindow}</div>\r\n                    </div>\r\n                    : ''\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default\r\nconnect(\r\n    state => ({\r\n        imagePreview: state.imagePreview,\r\n        settings: state.settings,\r\n        setup: state.setup,\r\n        user: state.user\r\n    }),\r\n    dispatch => ({\r\n        switchMenuTab: (tabMenu) => {\r\n            dispatch({\r\n                type: \"SWITCH_SETUP_MENU_TAB\",\r\n                payload: {\r\n                    tabMenu: tabMenu\r\n                }\r\n            })\r\n        },\r\n        handleChangeData: (value, type, block) => {\r\n            dispatch({\r\n                type: \"HANDLE_CHANGE_SETUP_DATA\",\r\n                payload: {\r\n                    value: value,\r\n                    type: type,\r\n                    block: block,\r\n                }\r\n            })\r\n        },\r\n        successSaveData: (block) => {\r\n            dispatch({\r\n                type: \"SUCCESS_SAVE_DATA\",\r\n                payload: {\r\n                    block: block\r\n                }\r\n            })\r\n        },\r\n        loadFile: (id, file) => {\r\n            dispatch({\r\n                type: 'FILE_NEED_LOAD',\r\n                payload: {\r\n                    file: file,\r\n                    url: '/api/file?file_access_type=PUBLIC',\r\n                    fileId: id\r\n                }\r\n            })\r\n        },\r\n        myUserInfo: (user) => {\r\n            dispatch({\r\n                type: \"USER\",\r\n                payload: {\r\n                    user: user\r\n                }\r\n            })\r\n        },\r\n        filePreviewSave: (preview, file) => {\r\n            dispatch({\r\n                type: \"IMAGE_PREVIEW\",\r\n                payload: {\r\n                    preview: preview,\r\n                    file: file\r\n                }\r\n            })\r\n        },\r\n        clearMyUserInfo: () => {\r\n            dispatch({type: 'CLEAR_SETUP_USER'})\r\n        }\r\n    })\r\n)\r\n(Setup);","/**\r\n * Created by smalkov on 11.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*semantic-ui components*/\r\nimport { Dropdown, Icon } from 'semantic-ui-react'\r\n/*custom-components*/\r\nimport AuthorView from \"../../../ui/authorView/AuthorView\"\r\n/*utils*/\r\nimport { FormateDate } from \"../../../../utils/utils\"\r\n/*css*/\r\nimport \"./previewArticle.css\"\r\n\r\n/**\r\n * Компонент препросмотра статьи\r\n */\r\n\r\nconst trigger = ( <Icon className=\"edit_outline\" name=\"ellipsis horizontal\"/>);\r\n\r\nclass PreviewArticle extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let text = this.props.infoArticle.text;\r\n        if(text) {\r\n            let container = document.getElementById('info_article_text');\r\n            let scrollContainer = document.getElementsByClassName('App')[0];\r\n            if(container) {\r\n                container.innerHTML = text || '';\r\n            }\r\n\r\n            if(scrollContainer) {\r\n                scrollContainer.scrollTop = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let text = this.props.infoArticle.text;\r\n        if (prevProps.infoArticle.text !== text) {\r\n            let container = document.getElementById('info_article_text');\r\n            let scrollContainer = document.getElementsByClassName('App')[0];\r\n            if(container) {\r\n                container.innerHTML = text || '';\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getImage(imageId, newImagePreview) { //Отображение превью изображения статьи\r\n        let imagePreview = <div className=\"info_article_image\">img</div>;\r\n        if (newImagePreview) {\r\n            imagePreview = <div className=\"info_article_image\"\r\n                                style={{\r\n                                    background: `url(${newImagePreview}) center no-repeat`}}></div>;\r\n        } else {\r\n            if (imageId) {\r\n                imagePreview =\r\n                    <div\r\n                        className=\"info_article_image\"\r\n                        style={{background: `url(${document.location.origin}/api/file/get?id=${imageId}) center no-repeat`}}>\r\n                    </div>;\r\n            }\r\n        }\r\n        return imagePreview\r\n    }\r\n\r\n    render() {\r\n        let { infoArticle, imagePreview, articleMenu } = this.props;\r\n        let date = FormateDate(new Date(infoArticle.lastUpdateTime || new Date().getTime()));\r\n\r\n        return (\r\n            <div className=\"info_article_container\">\r\n                <div className=\"info_article_content\">\r\n                    <div className=\"info_article_label\">\r\n                        <div>{infoArticle.label || \"Заголовок статьи\"}</div>\r\n                        {articleMenu &&\r\n                            <Dropdown\r\n                                className=\"article_menu\"\r\n                                trigger={trigger}\r\n                                options={articleMenu.optionsMenu('article', infoArticle.status)}\r\n                                pointing='top right'\r\n                                icon={null}\r\n                                onChange={(e, select) => {\r\n                                }}\r\n                            />}\r\n                    </div>\r\n                    <div className=\"horizontal_divider\"></div>\r\n                    <AuthorView\r\n                        name={infoArticle.authorName}\r\n                        date={date}\r\n                        countView={infoArticle.views}\r\n                        countComments={infoArticle.comments && infoArticle.comments.length}\r\n                    />\r\n                    {this.getImage(infoArticle.imageId, imagePreview)}\r\n                    <div id=\"info_article_text\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default (PreviewArticle);\r\n\r\n\r\n","/**\r\n * Created by smalkov on 12.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*custom-components*/\r\nimport User from \"../../ui/user/User\"\r\n/*utils*/\r\nimport { FormateDate } from \"../../../utils/utils\"\r\n/*css*/\r\nimport \"./comment.css\"\r\n\r\n/**\r\n * Компонент комментарий\r\n */\r\n\r\nclass Comment extends React.PureComponent {\r\n\r\n    render() {\r\n        let { comment, reply, forWhomClick } = this.props;\r\n        return (\r\n            <div id=\"comment\">\r\n                <div className='comment_head'>\r\n                    <User\r\n                        className=\"my_info_user\"\r\n                        name={comment.authorName}\r\n                        date={FormateDate(new Date(comment.createTime))}\r\n                        avatar_id={comment.avatarId}/>\r\n                </div>\r\n                <div className='comment_text'>\r\n                    {comment.answerToUserName ?\r\n                        <span className=\"forWhom_comments link\">{`${comment.answerToUserName}, `}</span>\r\n                            : ''}\r\n                    {comment.text}\r\n                </div>\r\n                <div className=\"replay\">\r\n                    <div className=\"user_date\">{FormateDate(new Date(comment.createTime))}</div>\r\n                       <span\r\n                           className=\"link\"\r\n                           onClick={() => {\r\n                               forWhomClick(comment.authorName, comment.id);\r\n                           }}\r\n                       >{reply}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (Comment)","/**\r\n * Created by smalkov on 12.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*semantic-ui components*/\r\nimport { Button, TextArea, Icon } from 'semantic-ui-react'\r\n/*custom-components*/\r\nimport User from \"../../../ui/user/User\"\r\nimport Comment from \"../../../ui/comment/Comment\"\r\n/*css*/\r\nimport \"./comments.css\"\r\n\r\n/**\r\n * Компонент блок-уоментариев\r\n */\r\n\r\nclass Comments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSend = this.onSend.bind(this);\r\n        this.state = {\r\n            comment: '',\r\n            forWhom: '',\r\n            parentId: '',\r\n            isAll: false\r\n        }\r\n    }\r\n\r\n    onSend() {\r\n        let { onSendCommnent, comments, user } = this.props;\r\n        let { comment, forWhom, parentId } = this.state;\r\n        let app = document.getElementsByClassName('App')[0];\r\n        let obj = {\r\n            parentId: parentId,\r\n            text: forWhom && comment.replace(forWhom + \", \", '') || comment\r\n        };\r\n        onSendCommnent(obj);\r\n        this.setState({\r\n            comment: '',\r\n            forWhom: '',\r\n            parentId: '',\r\n            isAll: true\r\n        });\r\n        if (app) {\r\n            setTimeout(() => {\r\n               app.scrollTop = 999999;\r\n            }, 250);\r\n        }\r\n    }\r\n\r\n    renderComments(comments, isAll, reply) {\r\n        let content = [];\r\n        comments.map((item, index) => {\r\n            if (!isAll && index === 0) {\r\n                content.push(\r\n                    <Comment\r\n                       key={`comment_${item.id}`}\r\n                       comment={item}\r\n                       reply={reply}\r\n                       forWhomClick={(name, id) => {\r\n                           this.setState({\r\n                               comment: name + ', ',\r\n                               forWhom: name,\r\n                               id: id\r\n                           });\r\n                           let input = document.getElementsByClassName('input_my_comment')[0];\r\n                           if (input) {\r\n                               input.focus();\r\n                           }\r\n                       }}\r\n                    />\r\n                )\r\n            } else if (isAll) {\r\n                content.push(\r\n                    <Comment\r\n                        key={`comment_${item.id}`}\r\n                        comment={item}\r\n                        reply={reply}\r\n                        forWhomClick={(name, id) => {\r\n                            this.setState({\r\n                                comment: name + ', ',\r\n                                forWhom: name,\r\n                                parentId: id\r\n                            });\r\n                            let input = document.getElementsByClassName('input_my_comment')[0];\r\n                            if (input) {\r\n                                input.focus();\r\n                            }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        });\r\n\r\n        return content\r\n    }\r\n\r\n    render() {\r\n        let { comments, translate } = this.props;\r\n        let { comment, isAll } = this.state;\r\n        let content = this.renderComments(comments, isAll, translate.infoArticle.comments.reply);\r\n        return (\r\n            <div id=\"comments_block\">\r\n                <div className=\"comments_header\">\r\n                    <div className=\"comments_title\">{`${translate.infoArticle.comments.title} (${comments && comments.length || 0})`}</div>\r\n                    {comments && comments.length > 1\r\n                        ? <Button className=\"btn_gray\"\r\n                                  onClick={() => {\r\n                                      this.setState({\r\n                                          isAll: !isAll\r\n                                      })\r\n                                  }}\r\n                          >\r\n                            {!isAll && translate.infoArticle.comments.allComments || translate.infoArticle.comments.collapse}\r\n                            {!isAll && <Icon name=\"angle down\"/> || <Icon name=\"angle up\"/>}</Button>\r\n                               : ''}\r\n                </div>\r\n                <div className=\"content_comments\">\r\n                    {content}\r\n                </div>\r\n                <div className=\"field_input_my_comment\">\r\n                    <TextArea\r\n                        autoHeight\r\n                        className=\"input_my_comment\"\r\n                        type=\"text\"\r\n                        placeholder={translate.infoArticle.comments.placeholder}\r\n                        value={comment}\r\n                        onChange={(e) => {\r\n                            this.setState({comment:  e.target.value})\r\n                        }}\r\n                        rows={1}\r\n                    />\r\n                    <div  className=\"container_send_comment\">\r\n                        <Button\r\n                            className=\"send_comment btn_standart_style\"\r\n                            disabled={!comment}\r\n                            onClick={this.onSend}\r\n                        >{translate.infoArticle.comments.send}</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default (Comments);","/**\r\n * Created by smalkov on 11.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*custom-components*/\r\nimport PreviewArticle from \"../../blocks/previewArticle/PreviewArticle\"\r\nimport Comments from \"../../blocks/comments/Comments\"\r\n/*semantic-ui components*/\r\nimport { Segment, Dimmer, Loader } from 'semantic-ui-react'\r\n/*constants*/\r\nimport { API } from \"../../../../redux/constant/UIConst\";\r\n/*css*/\r\nimport \"./infoArticle.css\"\r\n/*utils*/\r\nimport { fetchData } from \"../../../../utils/fetchHelper\";\r\nimport { FormateDate, getCloneObject } from \"../../../../utils/utils\";\r\nimport { TranslateInterface } from \"../../../../utils/translate/Translate\";\r\n\r\n/**\r\n * Компонент страницы просмотра статьи\r\n */\r\n\r\nclass InfoArticle extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { getArticleInfo, id, settings } = this.props;\r\n        fetchData(API.ARTICLE.GET_ARTICLE, {id: id, language: settings.language || 'RU'}, getArticleInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.clearInfoArticle();\r\n    }\r\n\r\n    onSendComment(comment) {\r\n        let { infoArticle, saveComments } = this.props;\r\n        fetchData(API.COMMENTS.SAVE_COMMMENT, {\r\n            articleId: infoArticle.id,\r\n            text: comment.text,\r\n            parentId: comment.parentId\r\n        }, saveComments);\r\n    }\r\n\r\n    renderArticlesTheme() {\r\n        let articles = [\r\n            {date: new Date(), label: 'Микробы, которые обезвреживают радиоактивные\\n' +\r\n                'отходы'},\r\n            {date: new Date(), label: 'Микробы, которые обезвреживают радиоактивные\\n' +\r\n                'отходы'},\r\n            {date: new Date(), label: 'Микробы, которые обезвреживают радиоактивные\\n' +\r\n                'отходы'},\r\n        ];\r\n        if (articles && articles.length) {\r\n            return articles.map((item, index) => {\r\n                let date = FormateDate(new Date(item.date));\r\n\r\n                return (\r\n                    <div className=\"item_articles_more\" key={`theme_article_${index}`}>\r\n                        <div className=\"date_article\">{date}</div>\r\n                        <div>{item.label}</div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { infoArticle, clearInfoArticle, settings, user, onSendCommnent } = this.props;\r\n        let translate = TranslateInterface(settings.language || 'ru');\r\n\r\n        return (\r\n            <div id=\"info_article\">\r\n                <div className=\"info-article-page_left_panel \">\r\n                    {infoArticle && !Object.keys(infoArticle).length ?\r\n                        <Segment className=\"main_root_loading\">\r\n                            <Dimmer active inverted>\r\n                                <Loader inverted/>\r\n                            </Dimmer>\r\n                        </Segment>\r\n                        :\r\n                        <PreviewArticle\r\n                            infoArticle={infoArticle}\r\n                            clearInfoArticle={clearInfoArticle}\r\n                        />\r\n                    }\r\n                    <div id=\"info_article_comments\">\r\n                        <Comments\r\n                            user={user}\r\n                            translate={translate}\r\n                            comments={infoArticle.comments || []}\r\n                            onSendCommnent={\r\n                                (comment) => {\r\n                                    console.log(comment)\r\n                                    this.onSendComment(comment)\r\n                                }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"info-article-page_right_panel \">\r\n                    <div className=\"info_article_label\">{translate.infoArticle.moreArticles}</div>\r\n                    <div className=\"horizontal_divider\"></div>\r\n                    {this.renderArticlesTheme()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default\r\nconnect(\r\n    state => ({\r\n        user: state.user,\r\n        infoArticle: state.infoArticle,\r\n        settings: state.settings\r\n    }),\r\n    dispatch => ({\r\n        switchMenuTab: (tabMenu) => {\r\n            dispatch({\r\n                type: \"SWITCH_SETUP_MENU_TAB\",\r\n                payload: {\r\n                    tabMenu: tabMenu\r\n                }\r\n            })\r\n        },\r\n        getArticleInfo: (article) => {\r\n            dispatch({\r\n                type: \"GET_ARTICLE_INFO\",\r\n                payload: {\r\n                    article: article,\r\n                }\r\n            })\r\n        },\r\n        clearInfoArticle: () => {\r\n            dispatch({\r\n                type: \"CLEAR_INFO_ARTICLE\",\r\n                payload: {}\r\n            })\r\n        },\r\n        saveComments: (comments) => {\r\n            dispatch({\r\n                type: \"SAVE_COMMENTS\",\r\n                payload: {\r\n                    comments: comments\r\n                }\r\n            })\r\n        }\r\n    })\r\n)\r\n(InfoArticle);\r\n\r\n\r\n","/**\r\n * Created by smalkov on 12.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*css*/\r\nimport \"./listTitleText.css\"\r\n\r\n/**\r\n *  Компонент отображения тектового списка с заголовком\r\n */\r\n\r\nclass ListTitleText extends React.PureComponent {\r\n\r\n    renderText(textList, id) {\r\n        if(textList){\r\n            return textList.map((item, index) => {\r\n                return (\r\n                    <div key={`text_item_${id}_${index}`} className={`text_item_list ${id}`}>\r\n                        <span>{index + 1 + \". \"}</span>{item.label}\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { title, textList, id } = this.props;\r\n\r\n        return (\r\n            <div className=\"block_title_text\">\r\n                <h3>{title}</h3>\r\n                <div className=\"text_block\">{this.renderText(textList, id)}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default (ListTitleText);\r\n\r\n\r\n","/**\r\n * Created by smalkov on 12.09.2018.\r\n */\r\n\r\nimport React from 'react';\r\n/*library*/\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\n/*css*/\r\nimport \"./editor.css\"\r\n\r\n/**\r\n * Компонент редактор текста(Возвращает html)\r\n */\r\n\r\nclass EditorConvertToHTML extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onEditorStateChange = this.onEditorStateChange.bind(this);\r\n        const html = props.htmlText;\r\n        const contentBlock = htmlToDraft(html);\r\n        if (contentBlock) {\r\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            const editorState = EditorState.createWithContent(contentState);\r\n            this.state = {\r\n                editorState,\r\n            };\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        let html = newProps.htmlText;\r\n        if(!html) {\r\n            const contentBlock = htmlToDraft(html);\r\n            if (contentBlock) {\r\n                const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n                const editorState = EditorState.createWithContent(contentState);\r\n                this.setState({editorState: editorState});\r\n            }\r\n        }\r\n    }\r\n\r\n    onEditorStateChange(editorState) {\r\n         this.setState({editorState});\r\n        this.props.onChange(draftToHtml(convertToRaw(editorState.getCurrentContent())), 'text');\r\n    };\r\n\r\n    render() {\r\n        let { localization = 'ru' } = this.props;\r\n        const { editorState } = this.state;\r\n\r\n        return (\r\n            <Editor\r\n                editorState={editorState}\r\n                wrapperClassName=\"demo-wrapper\"\r\n                editorClassName=\"demo-editor\"\r\n                onEditorStateChange={(editorState) => {\r\n                    this.onEditorStateChange(editorState);\r\n                }}\r\n                localization={{\r\n                    locale: localization,\r\n                }}\r\n                toolbar={{\r\n                    options: ['inline', 'blockType', 'fontSize', 'fontFamily', 'list', 'textAlign', 'colorPicker', 'link', 'history']\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\nexport default (EditorConvertToHTML)","/**\r\n * Created by smalkov on 12.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {convertToRaw} from \"draft-js\";\r\n/*semantic-ui components*/\r\nimport { Dropdown, Input, Button } from 'semantic-ui-react'\r\n/*custom components*/\r\nimport PreviewArticle from \"../../blocks/previewArticle/PreviewArticle\"\r\nimport Editor from \"../../../ui/editor/Editor\"\r\nimport Dialog from \"../../../ui/dialog/Dialog\"\r\n/*utils*/\r\nimport {getLang, isAutoFocusMobile} from \"../../../../utils/utils\";\r\n/*css*/\r\nimport \"./createArticle.css\"\r\nimport {fetchData} from \"../../../../utils/fetchHelper\";\r\nimport {API} from \"../../../../redux/constant/UIConst\";\r\n\r\n/**\r\n *  Компонент создании статьи для публикации\r\n */\r\n\r\nclass CreateArticle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChageHandle = this.onChageHandle.bind(this);\r\n        this.newEditArticle = this.newEditArticle.bind(this);\r\n        this.state = {\r\n            checkErrorName: false,\r\n            checkErrorSubject: false,\r\n            checkErrorAnnotation: false\r\n        }\r\n    }\r\n\r\n    checkValidation(value, type) {//Проверка на заполненость обязательных полей\r\n        let { checkErrorName, checkErrorSubject, checkErrorAnnotation } = this.state;\r\n        switch (type) {\r\n            case 'name': {\r\n                if(!value) {\r\n                    checkErrorName = true;\r\n                } else {\r\n                    checkErrorName = false;\r\n                }\r\n                break;\r\n            }\r\n            case 'subject': {\r\n                if(!value) {\r\n                    checkErrorSubject = true;\r\n                } else {\r\n                    checkErrorSubject = false;\r\n                }\r\n                break;\r\n            }\r\n            case 'annotation': {\r\n                if(!value) {\r\n                    checkErrorAnnotation = true;\r\n                } else {\r\n                    checkErrorAnnotation = false;\r\n                }\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n\r\n        this.setState({\r\n            checkErrorName: checkErrorName,\r\n            checkErrorSubject: checkErrorSubject,\r\n            checkErrorAnnotation: checkErrorAnnotation\r\n        });\r\n    }\r\n\r\n    onChageHandle(value, type) {\r\n        let { onChange, createArticle } = this.props;\r\n        //fetchData(API.ARTICLE.GET_ARTICLE, {id: createArticle.id, language: value}, this.newEditArticle);\r\n        onChange(value, type);\r\n        this.setState({\r\n            checkErrorName: false,\r\n            checkErrorSubject: false,\r\n            checkErrorAnnotation: false\r\n        });\r\n    }\r\n\r\n    newEditArticle(data) { //Получение другой статьи после получения\r\n        let { editArticle } = this.props;\r\n        editArticle(data);\r\n    }\r\n\r\n    getImage(imageId, newImagePreview) { //Отображение превью изображения статьи\r\n        let imagePreview = '';\r\n        if (newImagePreview) {\r\n            imagePreview = <div className=\"preview_article_img\"\r\n                                style={{\r\n                                    background: `url(${newImagePreview}) center no-repeat`}}></div>;\r\n        } else {\r\n            if (imageId) {\r\n                imagePreview =\r\n                    <div\r\n                        className=\"preview_article_img\"\r\n                        style={{background: `url(${document.location.origin}/api/file/get?id=${imageId}) center no-repeat`}}>\r\n                    </div>;\r\n            }\r\n        }\r\n        return imagePreview\r\n    }\r\n\r\n    render() {\r\n        let { onChange, htmlText, onChangeFullScreenPreviewEditor, isFullScreenEditor, localization, params, language,\r\n            preview, onSave, subjects, previewArticle, createArticle, textError, isEdit, imagePreview, setImage } = this.props;\r\n        let { checkErrorName, checkErrorSubject, checkErrorAnnotation } = this.state;\r\n        let translate = this.props.translate.articlePublishing.createArticle;\r\n\r\n        let languageDefault = createArticle.language || localization || getLang() || 'en';\r\n\r\n        return (\r\n            <div id=\"create_article_block\">\r\n                <div className=\"create_article_head\">\r\n                    <h2>{!isEdit ? translate.title.create.label : translate.title.edit.label}</h2>\r\n                    <Button\r\n                        className=\"btn_gray\"\r\n                        onClick={() => {onChangeFullScreenPreviewEditor('isFullScreenEditor', true)}}>{translate.fullScreen}</Button>\r\n                </div>\r\n                <div className=\"block_create_article\">\r\n                    <div className=\"block_create_article_left\">\r\n                        <div className=\"block_add_image_file_mobile\">\r\n                            {(imagePreview || createArticle.imageId)\r\n                            && this.getImage(createArticle.imageId, imagePreview)}\r\n                            <div className=\"block_text_image\">\r\n                                <input\r\n                                    style={{display: 'none'}}\r\n                                    type=\"file\"\r\n                                    multiple\r\n                                    accept=\"image/*\"\r\n                                    name=\"img\"\r\n                                    ref={(input) => {\r\n                                        this.avInput = input;\r\n                                    }}\r\n                                    onChange={(e) => {setImage(e)}}\r\n                                />\r\n                                <Button\r\n                                    className=\"\"\r\n                                    onClick={() => {\r\n                                        this.avInput.value = '';\r\n                                        this.avInput.click()\r\n                                    }}>{(imagePreview || createArticle.imageId) && translate.fields.changeFile || translate.fields.upLoadFile}</Button>\r\n                                {(createArticle.imageId || imagePreview) ?\r\n                                    <Button className=\"delete_img btn_gray\"\r\n                                            onClick={(e) => {\r\n                                                setImage(e, true)\r\n                                            }}\r\n                                    >{translate.fields.deleteFile}</Button> :\r\n                                    <div className=\"upload_image_text\">{translate.fields.textFile}</div>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container_nameArticle_language\">\r\n                            <div className=\"ui input container_nameArticle\">\r\n                                <span className=\"label\">{translate.fields.nameArticle.label}<span className=\"required\">*</span></span>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    autoFocus={isAutoFocusMobile()}\r\n                                    onBlur={() =>{this.checkValidation(createArticle.label, 'name');}}\r\n                                    placeholder={translate.fields.nameArticle.placeholder}\r\n                                    onChange={(e) => {\r\n                                        if (e.currentTarget.value.length < 256) {\r\n                                            this.onChageHandle(e.currentTarget.value, 'label')}}\r\n                                        }\r\n                                    value={createArticle.label}\r\n                                />\r\n                                {checkErrorName ? <div className=\"error\">{textError}</div> : ''}\r\n                            </div>\r\n                            <div className=\"ui input container_language\">\r\n                                <Dropdown\r\n                                    selection\r\n                                    wrapSelection={false}\r\n                                    options={language}\r\n                                    value={languageDefault.toLowerCase()}\r\n                                    onChange={(e, select) => {this.onChageHandle(select.value, 'language')}}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ui input container_direction\">\r\n                            <span className=\"label\">{translate.fields.subject.label}<span className=\"required\">*</span></span>\r\n                            <div className=\"article_create_direction\">\r\n                                <Dropdown\r\n                                    className=\"direction\"\r\n                                    selection\r\n                                    value={createArticle.subjectId}\r\n                                    options={subjects}\r\n                                    onBlur={() =>{this.checkValidation(createArticle.subjectId, 'subject');}}\r\n                                    placeholder={translate.fields.subject.placeholder}\r\n                                    onChange={(e, select) => {this.onChageHandle(select.value, 'subjectId')}}\r\n                                />\r\n                                {checkErrorSubject ? <div className=\"error\">{textError}</div> : ''}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"block_create_article_right\">\r\n                        {(imagePreview || createArticle.imageId)\r\n                            && this.getImage(createArticle.imageId, imagePreview)}\r\n                           <input\r\n                                style={{display: 'none'}}\r\n                                type=\"file\"\r\n                                multiple\r\n                                accept=\"image/*\"\r\n                                name=\"img\"\r\n                                ref={(input) => {\r\n                                    this.avInput = input;\r\n                                }}\r\n                                onChange={(e) => {setImage(e)}}\r\n                            />\r\n                            <Button\r\n                                className=\"\"\r\n                                onClick={() => {\r\n                                    this.avInput.value = '';\r\n                                    this.avInput.click()\r\n                                }}>{(imagePreview || createArticle.imageId) && translate.fields.changeFile || translate.fields.upLoadFile}</Button>\r\n                        {createArticle.imageId || imagePreview ?\r\n                            <Button className=\"delete_img btn_gray\"\r\n                                    onClick={(e) => {\r\n                                        setImage(e, true)\r\n                                    }}\r\n                            >{translate.fields.deleteFile}</Button> :\r\n                            <div className=\"upload_image_text\">{translate.fields.textFile}</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"ui input container_annotation\">\r\n                    <span className=\"label\">{translate.fields.annotation.label}<span className=\"required\">*</span></span>\r\n                    <textarea\r\n                        type=\"text\"\r\n                        placeholder={translate.fields.annotation.placeholder}\r\n                        onBlur={() =>{this.checkValidation(createArticle.annotation, 'annotation');}}\r\n                        onChange={(e) => {this.onChageHandle(e.currentTarget.value, 'annotation')}}\r\n                        value={createArticle.annotation}\r\n                    />\r\n                    {checkErrorAnnotation ? <div className=\"error\">{textError}</div> : ''}\r\n                </div>\r\n                <div className={isFullScreenEditor ? \"isFullScreenEditor\" : ''}>\r\n                    {!isFullScreenEditor && <span className=\"label\">{translate.fields.textArticle.label}</span>\r\n                        ||\r\n                        <div className=\"collapse\">\r\n                            <Button\r\n                                onClick={() => onChangeFullScreenPreviewEditor('isFullScreenEditor',false)}\r\n                            >{translate.collapse}</Button>\r\n                        </div> }\r\n                    {params.edit || params.create ?\r\n                    <Editor\r\n                        localization={localization}\r\n                        onChange={(value, type) => {this.onChageHandle(value, type)}}\r\n                        htmlText={htmlText}\r\n                        isFullScreenEditor={isFullScreenEditor}\r\n                    /> : ''}\r\n                    <Dialog\r\n                        isOpen={preview}\r\n                        className=\"preview_article_dialog\"\r\n                        isIconClose={false}\r\n                        content={\r\n                            <div>\r\n                                <div className=\"close_dialog_editor_window\">\r\n                                    <Button\r\n                                        onClick={() => onChangeFullScreenPreviewEditor('preview', false)}\r\n                                    >{translate.fields.actions.closePreview}</Button>\r\n                                </div>\r\n                                <PreviewArticle\r\n                                    infoArticle={previewArticle}\r\n                                    imagePreview={imagePreview}\r\n                                />\r\n                            </div>}\r\n                    />\r\n                </div>\r\n                <div className=\"ui input container_nameArticle\">\r\n                    <span className=\"label\">{translate.fields.keyWords.label}</span>\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder={translate.fields.keyWords.placeholder}\r\n                        onChange={(e) => {this.onChageHandle(e.currentTarget.value, 'keyWords')}}\r\n                        value={createArticle.keyWords}\r\n                    />\r\n                </div>\r\n                <div className=\"ui input container_actions_create_article\">\r\n                    <div>\r\n                    </div>\r\n                    < div className='actions_create_article'>\r\n                        <Button\r\n                            className=\"btn_gray\"\r\n                            onClick={() => onChangeFullScreenPreviewEditor('preview', true)}>{translate.fields.actions.preview}</Button>\r\n                        <div>\r\n                           {/* <Button\r\n                                className=\"articles_btn_style  cancel\"\r\n                                onClick={() => {}}\r\n                            >{translate.fields.actions.cancel}</Button>*/}\r\n                            <Button\r\n                                className=\"link save_as_draft\"\r\n                                onClick={() => {onSave(createArticle, 'saveAs')}}\r\n                                disabled={!createArticle.label || !createArticle.annotation || !createArticle.subjectId}\r\n                            >{translate.saveAs}</Button>\r\n                            <Button\r\n                                className=\"articles_btn_style btn_standart_style send\"\r\n                                onClick={() => {onSave(createArticle, 'isCheck')}}\r\n                                disabled={!createArticle.label || !createArticle.annotation || !createArticle.subjectId}\r\n                            >{translate.fields.actions.submit}</Button>\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default (CreateArticle);\r\n\r\n\r\n","/**\r\n * Created by smalkov on 12.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*custom-components*/\r\nimport ListTitleText from \"../../../ui/listTitleText/ListTitleText\"\r\nimport CreateArticle from \"../../blocks/createArticle/CreateArticle\"\r\nimport Dialog from \"../../../ui/dialog/Dialog\"\r\nimport history from \"../../../../history\";\r\n/*semantic-ui components*/\r\nimport { Button, Icon } from 'semantic-ui-react'\r\n/*utils*/\r\nimport {fetchData, uploadFile} from \"../../../../utils/fetchHelper\";\r\n/*constants*/\r\nimport { API } from \"../../../../redux/constant/UIConst\";\r\n/*css*/\r\nimport \"./articlePublishing.css\"\r\nimport { TranslateInterface } from \"../../../../utils/translate/Translate\";\r\nimport {ConvertBase64File, getLang} from \"../../../../utils/utils\";\r\n\r\n/**\r\n * Компонент страницы для публикации статьи\r\n */\r\n\r\nclass ArticlePublishing extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onSave = this.onSave.bind(this);\r\n        this.state = {\r\n            isCheckWindow: false,\r\n            titleCheckWindow: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { saveSubjects, location, createArticle } = this.props;\r\n        fetchData(API.SUBJECTS.GET_ALL_SUBJECTS, {}, saveSubjects);\r\n        let id = location.pathname.split(\"/article_publishing/\")[1];\r\n        if(id) {\r\n            this.editArticle(id)\r\n        } else {\r\n            createArticle();\r\n        }\r\n    }\r\n\r\n    editArticle(id) {\r\n        let { editArticle, settings } = this.props;\r\n        fetchData(API.ARTICLE.GET_ARTICLE, {id: id, language: settings.language || 'RU'}, editArticle);\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n        let { isCheckWindow } = this.state;\r\n        let { switchMenuNavigation, clearArticle, getMyPublications } = this.props;\r\n        if(!prevState.isCheckWindow && isCheckWindow) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    isCheckWindow: false,\r\n                    titleCheckWindow: ''\r\n                });\r\n                history.push('/my_publications');\r\n                switchMenuNavigation('my_publications');\r\n                fetchData(API.ARTICLE.GET_MY_ARTICLES, {language: 'RU'}, getMyPublications);\r\n                clearArticle();\r\n            }, 2000)\r\n\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        let { filePreviewSave } = this.props;\r\n        filePreviewSave('', '');\r\n    }\r\n\r\n    renderCheckWindow(titleCheckWindow) {\r\n        return (\r\n            <div className=\"check_window_custom_content\">\r\n                <div className=\"container_icon_check\">\r\n                    <Icon className=\"icon_check\" name=\"check\"/>\r\n                </div>\r\n                <div className=\"check_window_text\">{titleCheckWindow}</div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    onSave(article, type) {\r\n        let { imagePreview, settings } = this.props;\r\n        let language = settings.language || getLang() || 'en';\r\n        let titleCheckWindow = '';\r\n        if(type === \"saveAs\") {\r\n            titleCheckWindow = 'Статья сохранена как черновик';\r\n            article['status'] = 'DRAFT'\r\n        } else if ( type === \"isCheck\") {\r\n            titleCheckWindow = 'Статья отправлена на проверку';\r\n            article['status'] = 'REVIEW';\r\n        }\r\n        article['language'] = article.language || language;\r\n        if (imagePreview.file) {\r\n            uploadFile(API.FILES.FILE_SAVE, imagePreview.file, (fileData) => {\r\n                article.imageId = fileData.id;\r\n                fetchData(API.ARTICLE.SAVE_ARTICLE, article, '');\r\n            });\r\n        } else {\r\n            fetchData(API.ARTICLE.SAVE_ARTICLE, article, '');\r\n        }\r\n        this.setState({\r\n            isCheckWindow: true,\r\n            titleCheckWindow: titleCheckWindow\r\n        })\r\n    }\r\n\r\n    setImage = (e, isDelete) => { //Загрузка аватара\r\n        let { onChangeArticle, filePreviewSave } = this.props;\r\n        let file = e.target.files && e.target.files[0];\r\n        if (isDelete) {\r\n            filePreviewSave('', '');\r\n            onChangeArticle('', 'imageId')\r\n\r\n        } else {\r\n            if (file) {\r\n                ConvertBase64File(file, (base64File) => {filePreviewSave(base64File, file)});\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { settings, onChangeArticle, articlePublishing, onChangeFullScreenPreviewEditor, user, imagePreview, editArticle } = this.props;\r\n        let { isCheckWindow, titleCheckWindow } = this.state;\r\n        let Translate = TranslateInterface(settings.language || 'ru');\r\n        let createArticle = articlePublishing.article;\r\n        let params = articlePublishing.params;\r\n        let contentCheckWindow = this.renderCheckWindow(titleCheckWindow);\r\n        let previewArticle = {\r\n            authorName: user.name,\r\n            label: createArticle.label,\r\n            text: createArticle.text,\r\n            imageId: createArticle.imageId,\r\n            date: new Date(),\r\n            comments: {\r\n                count: 0\r\n            },\r\n            views: 0,\r\n        };\r\n\r\n        return (\r\n            <div id=\"article_publishing\">\r\n                <div className=\"create_article_container\">\r\n                    <CreateArticle\r\n                        language={Translate.header.language}\r\n                        imagePreview={imagePreview && imagePreview.preview}\r\n                        localization={settings.language || 'ru'}\r\n                        translate={Translate}\r\n                        subjects={params.subjects}\r\n                        onChange={onChangeArticle}\r\n                        isEdit={params.edit}\r\n                        onSave={this.onSave}\r\n                        setImage={this.setImage}\r\n                        htmlText={createArticle.text}\r\n                        preview={params.preview}\r\n                        isFullScreenEditor={params.isFullScreenEditor}\r\n                        textError={Translate.setup.rightPanel.error.field}\r\n                        createArticle={createArticle}\r\n                        params={articlePublishing.params}\r\n                        previewArticle={previewArticle}\r\n                        editArticle={editArticle}\r\n                        onChangeFullScreenPreviewEditor={onChangeFullScreenPreviewEditor}\r\n\r\n                    />\r\n                    {isCheckWindow ?\r\n                        <div className=\"check_window\">\r\n                            <div>{contentCheckWindow}</div>\r\n                        </div>\r\n                           : ''\r\n                    }\r\n                </div>\r\n                <div className=\"publishing_rules\">\r\n                    <ListTitleText\r\n                        id='rules'\r\n                        title={Translate.articlePublishing.publishing_rules.rules.title}\r\n                        textList={Translate.articlePublishing.publishing_rules.rules.text}F\r\n                    />\r\n                    <ListTitleText\r\n                        id='moderation'\r\n                        title={Translate.articlePublishing.publishing_rules.aboutModeration.title}\r\n                        textList={Translate.articlePublishing.publishing_rules.aboutModeration.text}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default\r\nconnect(\r\n    state => ({\r\n        user: state.user,\r\n        infoArticle: state.infoArticle,\r\n        articlePublishing: state.articlePublishing,\r\n        warningDialog: state.warningDialog,\r\n        imagePreview: state.imagePreview,\r\n        settings: state.settings\r\n    }),\r\n    dispatch => ({\r\n        switchMenuTab: (tabMenu) => {\r\n            dispatch({\r\n                type: \"SWITCH_SETUP_MENU_TAB\",\r\n                payload: {\r\n                    tabMenu: tabMenu\r\n                }\r\n            })\r\n        },\r\n        onChangeWarningDialog: (isOpen, title, text) => {\r\n            dispatch({\r\n                type: \"WARNING_DIALOG\",\r\n                payload: {\r\n                    isOpen: isOpen,\r\n                    title: title,\r\n                    text: text\r\n                }\r\n            })\r\n        },\r\n        onChangeArticle: (text, type) => {\r\n            dispatch({\r\n                type: \"ON_CHANGE_ARTICLE\",\r\n                payload: {\r\n                    text: text,\r\n                    type: type\r\n                }\r\n            })\r\n        },\r\n        onChangeFullScreenPreviewEditor: (type, isOpen) => {\r\n            dispatch({\r\n                type: \"IS_FULL_SCREEN_PREVIEW_EDITOR\",\r\n                payload: {\r\n                    type: type,\r\n                    isOpen: isOpen\r\n                }\r\n            })\r\n        },\r\n        switchMenuNavigation: (page) => {\r\n            dispatch({\r\n                type: \"SWITCH_PAGE\",\r\n                payload: {\r\n                    page: page,\r\n                }\r\n            })\r\n        },\r\n        saveSubjects: (subjects) => {\r\n            dispatch({\r\n                type: \"SAVE_SUBJECTS\",\r\n                payload: {\r\n                    subjects: subjects,\r\n                }\r\n            })\r\n        },\r\n        getMyPublications: (articles) => {\r\n            dispatch({\r\n                type: \"GET_MY_PUBLICATIONS\",\r\n                payload: {\r\n                    articles: articles\r\n                }\r\n            })\r\n        },\r\n        editArticle: (articleEdit) => {\r\n            dispatch({\r\n                type: \"ARTICLE_EDIT\",\r\n                payload: {\r\n                    articleEdit: articleEdit\r\n                }\r\n            })\r\n        },\r\n        filePreviewSave: (preview, file) => {\r\n            dispatch({\r\n                type: \"IMAGE_PREVIEW\",\r\n                payload: {\r\n                    preview: preview,\r\n                    file: file\r\n                }\r\n            })\r\n        },\r\n        createArticle: () => {\r\n            dispatch({\r\n                type: \"ARTICLE_CREATE\", payload: {}\r\n            })\r\n        },\r\n        clearArticle: () => {\r\n            dispatch({\r\n                type: \"CLEAR_ARTICLE_CREATE\", payload: {}\r\n            })\r\n        }\r\n    })\r\n)\r\n(ArticlePublishing);\r\n\r\n\r\n","/**\r\n * Created by smalkov on 14.09.2018.\r\n */\r\n\r\n// react - redux\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*semantic-ui*/\r\nimport { Input, Button, Segment, Dimmer, Loader } from 'semantic-ui-react'\r\n/*custom components*/\r\nimport ListMenu from \"../../blocks/listMenu/ListMenu\"\r\nimport ViewArticles from \"../../blocks/viewArticles/ViewArticles\"\r\n/*utils*/\r\nimport { TranslateInterface } from \"../../../../utils/translate/Translate\"\r\nimport {fetchData} from \"../../../../utils/fetchHelper\";\r\n/*css*/\r\nimport \"./myPublications.css\"\r\nimport history from \"../../../../history\";\r\n/*constants*/\r\nimport { API } from \"../../../../redux/constant/UIConst\";\r\n\r\n/**\r\n * Компонент страницы \"Мои публикации\"\r\n */\r\n\r\nclass MyPublications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.menuArticle = this.menuArticle.bind(this);\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { getMyPublications, saveSubjects, settings } = this.props;\r\n        fetchData(API.ARTICLE.GET_MY_ARTICLES, {language: settings.language || 'RU'}, getMyPublications);\r\n        fetchData(API.SUBJECTS.GET_ALL_SUBJECTS, {}, saveSubjects);\r\n    }\r\n\r\n    menuArticle(id, type) {\r\n        let { editArticle, settings } = this.props;\r\n        if (type === 'edit') {\r\n            fetchData(API.ARTICLE.GET_ARTICLE, {id: id, language: settings.language || 'RU'}, editArticle);\r\n            setTimeout(() => {\r\n                history.push(`/article_publishing/${id}`);\r\n            }, 250)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { settings, switchMenuTab, myPublications, subjects, user } = this.props;\r\n        let Translate = TranslateInterface(settings.language || 'ru');\r\n        let tab = myPublications.tabLeftLibrary ;\r\n        let articles = myPublications.articles[tab] || [];\r\n\r\n        return (\r\n            <div id=\"my_publications\">\r\n                <div className=\"slider_menu_tab_mobile\">\r\n                    <div>\r\n                        <ListMenu\r\n                            list={Translate.my_publications.tabs}\r\n                            onClick={(tabMenu) => switchMenuTab(tabMenu)}\r\n                            active={myPublications.tabLeftLibrary}\r\n                            arrayList={myPublications.articles}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"library_content\">\r\n                    {articles && !Array.isArray(articles) ?\r\n                        <Segment className=\"main_root_loading\">\r\n                            <Dimmer active inverted>\r\n                                <Loader inverted/>\r\n                            </Dimmer>\r\n                        </Segment>\r\n                        :\r\n                        <ViewArticles\r\n                            className={`${tab}`}\r\n                            status={true}\r\n                            statusLabel={Translate.my_publications.status}\r\n                            textNoData={Translate.other.textNoData}\r\n                            title={Translate.my_publications.tabs[tab]}\r\n                            menuTranslate={Translate.my_publications.menu}\r\n                            btnLabel={Translate.home.leftPanel.readNext}\r\n                            articles={articles}\r\n                            textError={Translate.setup.rightPanel.error.field }\r\n                            countViewArticles={articles.length}\r\n                            menuArticle={this.menuArticle}\r\n                            subjects={subjects.data}\r\n                            user={user}\r\n                            onClick={(id) => {\r\n                                history.push(`/library/${id}`);\r\n                            }}\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default\r\nconnect(\r\n    state => ({\r\n        myPublications: state.myPublications,\r\n        settings: state.settings,\r\n        user: state.user,\r\n        subjects: state.subjects\r\n    }),\r\n    dispatch => ({\r\n        switchMenuNavigation: (page) => {\r\n            dispatch({\r\n                type: \"SWITCH_PAGE\",\r\n                payload: {\r\n                    page: page,\r\n                }\r\n            })\r\n        },\r\n        switchMenuTab: (tabMenu) => {\r\n            dispatch({\r\n                type: \"SWITCH_MY_PUBLICATIONS_MENU_TAB\",\r\n                payload: {\r\n                    tabMenu: tabMenu\r\n                }\r\n            })\r\n        },\r\n        getMyPublications: (articles) => {\r\n            dispatch({\r\n                type: \"GET_MY_PUBLICATIONS\",\r\n                payload: {\r\n                    articles: articles\r\n                }\r\n            })\r\n        },\r\n        editArticle: (articleEdit) => {\r\n            dispatch({\r\n                type: \"ARTICLE_EDIT\",\r\n                payload: {\r\n                    articleEdit: articleEdit\r\n                }\r\n            })\r\n        },\r\n        saveSubjects: (subjects) => {\r\n            dispatch({\r\n                type: \"SAVE_SUBJECTS\",\r\n                payload: {\r\n                    subjects: subjects,\r\n                }\r\n            })\r\n        }\r\n    })\r\n)\r\n(MyPublications);","/**\r\n * Created by smalkov on 07.11.2018.\r\n */\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*semantic-ui components*/\r\nimport { Icon } from 'semantic-ui-react'\r\n/*library*/\r\nimport DayPicker from \"react-day-picker\";\r\n/*css*/\r\nimport \"./calendarDatePicker.css\";\r\n\r\nconst weekdaysShort = [\"Вс\",\"Пн\",\"Вт\",\"Ср\",\"Чт\",\"Пт\",\"Сб\"];\r\nconst nameMonth = [\r\n    \"Января\", \"Февраля\", \"Марта\",\r\n    \"Апреля\", \"Мая\", \"Июня\",\r\n    \"Июля\", \"Августа\", \"Сентября\",\r\n    \"Октября\", \"Ноября\", \"Декабря\"];\r\nconst month = [\r\n    \"Январь\", \"Февраль\", \"Март\",\r\n    \"Апрель\", \"Май\", \"Июнь\",\r\n    \"Июль\", \"Август\", \"Сентябрь\",\r\n    \"Октябрь\", \"Ноябрь\", \"Декабрь\"];\r\n\r\nclass CalendarDatePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.setNewDayAtMidnight = this.setNewDayAtMidnight.bind(this);\r\n        this.parseTime = this.parseTime.bind(this);\r\n        this.state = {\r\n            date: '',\r\n            year: '',\r\n            month: '',\r\n            day: '',\r\n            arrayYears: [],\r\n            isOpenListYear: false,\r\n            isOpenListMonth: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let newDate = new Date();\r\n        if(this.props.value){\r\n            this.setState({\r\n                date: new Date(this.props.value),\r\n                year: new Date(this.props.value).getFullYear(),\r\n                month: month[new Date(this.props.value).getMonth()],\r\n                day: new Date(this.props.value).getDate()\r\n            });\r\n        } else {\r\n            this.setState({\r\n                date: newDate,\r\n                year: newDate.getFullYear(),\r\n                month: month[newDate.getMonth()],\r\n                day: newDate.getDate()\r\n            });\r\n        }\r\n        let year = this.props.startYear;\r\n        let arrayYears = [year];\r\n        for (let y = 0; y < 200; y++) {\r\n            year++;\r\n            arrayYears.push(year);\r\n        }\r\n        this.setState({arrayYears: arrayYears})\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleClickOutside, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClickOutside, false);\r\n    }\r\n\r\n    handleClickOutside(e, self) {\r\n        // Получаем ссылку на элемент, при клике на который, скрытие не будет происходить\r\n        const listMonth = document.getElementById('popup-list-months-date-picker');\r\n        const listYears = document.getElementById('popup-list-years-date-picker');\r\n        // Проверяем, есть ли в списке родительских или дочерних элементов, вышеуказанный компонент\r\n        if (!e.path.includes(listMonth)) {\r\n            // Если в области кликнутого элемента нету \"svgBtnMonth\", то проверяем ниже\r\n            // Не произведен ли клик на кнопку, открывающую окно смайлов\r\n            const svgBtnMonth = document.getElementById('arrow-month-open-list-date-picker');\r\n            // Если клик не производился и на кнопку открытия окна смайлов, то скрываем блок.\r\n            if (!e.path.includes(svgBtnMonth)) {\r\n                this.setState({isOpenListMonth: false})\r\n            }\r\n        }\r\n\r\n        if (!e.path.includes(listYears)) {\r\n            // Если в области кликнутого элемента нету \"svgBtnYear\", то проверяем ниже\r\n            // Не произведен ли клик на кнопку, открывающую окно смайлов\r\n            const svgBtnYear = document.getElementById('arrow-year-open-list-date-picker');\r\n            // Если клик не производился и на кнопку открытия окна смайлов, то скрываем блок.\r\n            if (!e.path.includes(svgBtnYear)) {\r\n                this.setState({isOpenListYear: false})\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    setNewDayAtMidnight = () => {\r\n        const now = new Date();\r\n        const endOfDay = new Date(\r\n            now.getFullYear(),\r\n            now.getMonth(),\r\n            now.getDate() + 1,\r\n            0, 0, 0\r\n        );\r\n        setTimeout(() => {\r\n            document.getElementsByClassName('DayPicker-TodayButton')[0].click();\r\n            this.setNewDayAtMidnight();\r\n        }, (endOfDay.getTime() - now.getTime()))\r\n    };\r\n\r\n    renderDate() { //Шапка с текущей датой и выбором года из списка\r\n        let {date, isOpenListYear} = this.state;\r\n        return (\r\n            <div className=\"Current-date-calendar\">\r\n                <div>{weekdaysShort[(new Date(date)).getDay()]},&nbsp;{(new Date(date).getDate() + '').length === 1 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()} &nbsp;{ nameMonth[new Date(date).getMonth()]}</div>\r\n                <div style={{position: 'relative', display: 'flex', alignItems: 'center'}}>\r\n                    <div>{this.state.year}</div>\r\n                    <Icon\r\n                        name=\"angle left\"\r\n                        id=\"arrow-year-open-list-date-picker\"\r\n                        style={{transform: 'rotate(-90deg)', fill: '#fff', cursor: 'pointer', height: 20, width: 20}}\r\n                        onClick={() => {\r\n                            this.setState({isOpenListYear: !isOpenListYear});\r\n                            let popup = document.getElementById('popup-list-years-date-picker');\r\n                            let indexElement = parseInt(this.state.arrayYears.indexOf(this.state.year));\r\n                            popup.scrollTop = (28 * indexElement) - 56;\r\n                        }}\r\n                    />\r\n                    <div\r\n                        className=\"popup-list-years-months\"\r\n                        id=\"popup-list-years-date-picker\"\r\n                        style={{\r\n                            border: isOpenListYear ? \"1px solid rgb(224, 224, 224)\" : \"\",\r\n                            height: !isOpenListYear ? 0 : 160\r\n                        }}\r\n                    >{this.renderFullYearListDropDown(\"year\")}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    parseOldDate() {\r\n        let newDate = {};\r\n        let oldDate = this.state.date;\r\n        let oldMonth = oldDate.getMonth();\r\n        let oldYear = oldDate.getFullYear();\r\n        let oldDay = oldDate.getDate();\r\n        newDate = {\r\n            oldValueYear: oldYear,\r\n            oldValueMonth: oldMonth,\r\n            oldValueDay: oldDay\r\n        };\r\n        return newDate;\r\n    }\r\n\r\n    switchMonth(direction) {//Переключение месяца через left-right arrow\r\n        let choiceMonth = this.state.month;\r\n        let date = this.state.date;\r\n        let indexMonth = month.indexOf(choiceMonth);\r\n        if(direction === \"right\") {\r\n            indexMonth++;\r\n        } else {\r\n            indexMonth--;\r\n        }\r\n        this.setState({\r\n            date: new Date(date.getFullYear(), indexMonth, 1),\r\n            year: new Date(date.getFullYear(), indexMonth, date.getDate()).getFullYear(),\r\n        });\r\n        if(indexMonth > 11) {\r\n            indexMonth = 0;\r\n        }\r\n        if(indexMonth < 0) {\r\n            indexMonth = 11;\r\n        }\r\n        this.setState({month: month[indexMonth]})\r\n    }\r\n\r\n    renderFullYearListDropDown(param) {\r\n        let choiceYear = this.state.year;\r\n        let choiceMonth= this.state.month;\r\n        let year = this.props.startYear ? this.props.startYear : 1900;\r\n        let arrayYears = this.state.arrayYears;\r\n\r\n        if(param === \"year\") {\r\n            return arrayYears.map((each, index) => {\r\n                return (\r\n                    <div key={index}\r\n                         className= {choiceYear !== each ? \"item-list-years-months\" : \"item-list-years-months active-item-list-year-months\"}\r\n                         onClick={() => {\r\n                             this.setState({\r\n                                 date: new Date(each, this.parseOldDate().oldValueMonth, this.parseOldDate().oldValueDay),\r\n                                 year: each,\r\n                                 isOpenListYear: false\r\n                             });\r\n                             this.props.onChange(new Date(each, this.parseOldDate().oldValueMonth, this.parseOldDate().oldValueDay));\r\n                         }}\r\n                    >{each}</div>\r\n                )\r\n            });\r\n        } else {\r\n            return month.map((each, index) => {\r\n                return (\r\n                    <div key={index}\r\n                         className= {choiceMonth !== each ? \"item-list-years-months\" : \"item-list-years-months active-item-list-year-months\"}\r\n                         onClick={() => {\r\n                             this.setState({\r\n                                 date: new Date(this.parseOldDate().oldValueYear, month.indexOf(each), this.parseOldDate().oldValueDay),\r\n                                 month: each,\r\n                                 isOpenListMonth: false\r\n                             });\r\n                             this.props.onChange(new Date(this.parseOldDate().oldValueYear, month.indexOf(each), this.parseOldDate().oldValueDay));\r\n                         }}\r\n                    >{each}</div>\r\n                )\r\n            });\r\n        }\r\n    }\r\n\r\n    parseTime(date, close) {\r\n        const { beforeDisabledDays } = this.props; // внутри может быть не только before:, но и after:\r\n\r\n        if (beforeDisabledDays) {\r\n            const { before = '', after = '' } = beforeDisabledDays[0];\r\n            let beforeMidnight = new Date(before).setHours(0, 0, 0, 0),\r\n                afterMidnight = new Date(after).setHours(0, 0, 0, 0),\r\n                clickedDateMidnight = new Date(date).setHours(0, 0, 0, 0);\r\n            if (beforeMidnight && afterMidnight) {\r\n                if (clickedDateMidnight < beforeMidnight || clickedDateMidnight > afterMidnight) {\r\n                    return;\r\n                }\r\n            } else if (beforeMidnight && clickedDateMidnight < beforeMidnight) {\r\n                return;\r\n            } else if (afterMidnight && clickedDateMidnight > afterMidnight) {\r\n                return;\r\n            }\r\n        }\r\n        this.setState({\r\n            date: date,\r\n            month: month[[date.getMonth()]],\r\n            year: date.getFullYear()});\r\n        this.props.onChange(date.getTime(), close);\r\n    }\r\n\r\n    render() {\r\n        let {beforeDisabledDays} = this.props; // внутри может быть не только before:, но и after:, зачем до кучи еще и массив, а не объект не понятно\r\n        let {isOpenListMonth} = this.state;\r\n        const RightArrow = <Icon name=\"angle right\" style={{fill: 'rgb(124, 123, 123)'}}/>;\r\n\r\n        return (\r\n            <div style={{background: 'white', textAlign: 'center'}}>\r\n                <div>\r\n                    {this.renderDate()}\r\n                    <div style={{padding: '6px 0px', display: 'flex', margin: '0px 15px',\r\n                        alignItems: 'center', justifyContent: 'space-between', fontSize: 14,\r\n                        borderBottom: '1px solid rgb(224, 224, 224)', fontWeight: 500\r\n                    }}>\r\n                        <div\r\n                            className=\"left-arrow-datePicker\"\r\n                            onClick={() => {//Переключение назад\r\n                                this.switchMonth(\"left\");\r\n                            }}\r\n                        >\r\n                        <Icon name=\"angle left\"\r\n                        />\r\n                        </div>\r\n                        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', color: 'rgb(124, 123, 123)', position: 'relative', minWidth: 86}}>\r\n                            <div>\r\n                                {this.state.month}\r\n                            </div>\r\n                            <Icon\r\n                                name=\"angle left\"\r\n                                id=\"arrow-month-open-list-date-picker\"\r\n                                style={{transform: 'rotate(-90deg)',cursor: 'pointer', height: 20, width: 20, fill: 'rgb(124, 123, 123)'}}\r\n                                onClick={() => {\r\n                                    this.setState({isOpenListMonth: !isOpenListMonth})\r\n                                    let popup = document.getElementById('popup-list-months-date-picker');\r\n                                    let indexElement = parseInt(month.indexOf(this.state.month));\r\n                                    popup.scrollTop = (28 * indexElement + 1) - 70;\r\n                                }}\r\n                            />\r\n                            <div\r\n                                className=\"popup-list-years-months\"\r\n                                id=\"popup-list-months-date-picker\"\r\n                                style={{\r\n                                    border: isOpenListMonth ? \"1px solid rgb(224, 224, 224)\" : \"\",\r\n                                    height: !isOpenListMonth ? 0 : 160\r\n                                }}\r\n                            >{this.renderFullYearListDropDown(\"month\")}</div>\r\n                        </div>\r\n                        <div\r\n                            className=\"right-arrow-datePicker\"\r\n                            onClick={() => {//Переключение вперед\r\n                                this.switchMonth(\"right\");\r\n                            }}\r\n                        >{RightArrow}</div>\r\n                    </div>\r\n                </div>\r\n                <DayPicker\r\n                    className={beforeDisabledDays ? \"beforeDisabledDays-enabled\" : \"\"}\r\n                    onDayClick={this.parseTime}\r\n                    fixedWeeks\r\n                    months={month}\r\n                    weekdaysLong={[\r\n                        'Воскресенье',\r\n                        'Понедельник',\r\n                        'Вторник',\r\n                        'Среда',\r\n                        'Четверг',\r\n                        'Пятница',\r\n                        'Суббота',\r\n                    ]}\r\n                    weekdaysShort={weekdaysShort}\r\n                    firstDayOfWeek={1}\r\n                    selectedDays={this.state.date}\r\n                    month={this.state.date}\r\n                    labels={{nextMonth: 'следующий месяц', previousMonth: 'предыдущий месяц'}}\r\n                    todayButton=\"today\"\r\n                    initialMonth={new Date(2017, 3)}\r\n                />\r\n                <span id=\"calendar-date-picker-today\"\r\n                      onClick={() => {\r\n                          //document.getElementById('input-date-picker-value').focus();\r\n                          let date =  new Date(new Date().setHours(new Date().getHours() + 1));\r\n                          let options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };\r\n                          let newDate = date.toLocaleString('en-GB', options).replace(',', ' ');\r\n                          this.props.newSaveTimePicker(newDate.split(\" \")[2]);\r\n                          this.parseTime(new Date(), true);\r\n                          this.setState({\r\n                              date: new Date(),\r\n                              year: new Date().getFullYear(),\r\n                              month: month[new Date().getMonth()],\r\n                              day:  new Date().getDate()\r\n                          })\r\n                      }}\r\n                      style={{\r\n                          fontSize: '1em',\r\n                          /*textDecoration: 'underline',*/\r\n                          color: 'grey',\r\n                          cursor: 'pointer',\r\n                          padding: '0px 2px 0px 2px',\r\n                          position: 'relative',\r\n                          top: '-2px'\r\n                      }}\r\n                >\r\n                    Сегодня\r\n                </span>\r\n            </div>\r\n        )\r\n    };\r\n\r\n}\r\nexport default connect(\r\n    state => ({\r\n        calendar: state.calendarDatePicker,\r\n        currentYear: state.calendarDatePicker.year,\r\n        currentMonth: state.calendarDatePicker.month,\r\n    }),\r\n    dispatch => ({\r\n        newSaveDatePicker: (newDate, serverDate) => {\r\n            dispatch({\r\n                type: \"SAVE_VALUE_CALENDAR_DATE_PICKER\",\r\n                payload: {\r\n                    newDate: newDate,\r\n                    serverDate: serverDate\r\n                }});\r\n        },\r\n        newSaveTimePicker: (newTime) => {\r\n            dispatch({\r\n                type: \"SAVE_TIME_CALENDAR_DATE_PICKER\",\r\n                payload: {\r\n                    newTime: newTime\r\n                }});\r\n        }\r\n    })\r\n)(CalendarDatePicker);\r\n","/**\r\n * Created by admin on 24.03.2018.\r\n */\r\n/**\r\n * Поле с диалогом ввода ДАТЫ и ВРЕМЕНИ\r\n */\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport InputMask from \"react-input-mask\";\r\n/*semantic-ui components*/\r\nimport { Icon, Button } from 'semantic-ui-react'\r\n/*icons*/\r\nimport { Calendar } from \"../../ui/svgIcons/svgIcons\"\r\n/*custom components*/\r\nimport CustomCalendar from \"./calendar/CalendarDatePicker\";\r\n/*css*/\r\nimport \"./customDateTimePicker.css\"\r\n\r\nclass customDateTimePicker extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n        this.state = {\r\n            date: this.props.value,\r\n            inputDate: '',\r\n            time: '',\r\n            textError: '',\r\n            arrayTime: [],\r\n            isCheckError: true,\r\n            isOpenCalendarDatePicker: false,\r\n            isOpenTimePickerList: false,\r\n            onMouseLeaveDataPicker: false,\r\n            isOpenListTime: false,\r\n        }\r\n    }\r\n\r\n    onFieldChange(value, name) { //Обработка ввода даты с клавиатуры\r\n        if(value && (value.split(\"_\").length !== 13 || (value && !this.props.time && value.split(\"_\").length !== 9))) {\r\n            let day, month, year, hourse, minutes;\r\n            if(name === \"timePicker\") {\r\n                value = value.split(\" / \")[0] + \":\" + value.split(\" / \")[1];\r\n                if(value === \"__:__\"){\r\n                    this.setState({time: \"00 : 00\"});\r\n                } else {\r\n                    this.setState({time: value});\r\n                }\r\n            }\r\n\r\n            if(name === \"datePicker\") {\r\n                day = value.split('.')[0];\r\n                month = value.split('.')[1] ;\r\n                year = value.split('.')[2].split(' / ')[0];\r\n                if(this.props.time){\r\n                    hourse = value.split(' / ')[1].split(':')[0];\r\n                    minutes = value.split(' / ')[1].split(':')[1];\r\n                } else {\r\n                    hourse = \"00\";\r\n                    minutes = \"00\";\r\n                }\r\n\r\n                if(month === 0) {\r\n                    month = 0\r\n                } else {\r\n                    month = month - 1;\r\n                }\r\n                if(hourse > 24) {\r\n                    hourse = 23;\r\n                }\r\n\r\n                if(minutes > 60 ) {\r\n                    minutes = 59\r\n                }\r\n                this.setState({\r\n                    inputDate: value\r\n                });\r\n                this.setState({\r\n                    isOpenCalendarDatePicker: false,\r\n                    inputDate: value\r\n                });\r\n                this.validationCheck(value);\r\n\r\n            }\r\n        } else {\r\n            this.setState({\r\n                date: '',\r\n                inputDate: ''\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if(this.props.value !== newProps.value) {\r\n            this.defaultDate(newProps.value);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.projectIssueDateValidation instanceof Function && this.props.projectIssueDateValidation === '') {\r\n            this.validationCheck('', true);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.defaultDate(this.props.value);\r\n    }\r\n\r\n    defaultDate(value) {\r\n        if(new Date(value) != 'Invalid Date'){\r\n            value = new Date(value).getTime();\r\n        }\r\n        if(value) {\r\n            this.setState({\r\n                date: parseInt(value),\r\n                inputDate: this.parseDateStringInput(value),\r\n                time: this.timeParse(value, false).time\r\n            });\r\n        } else {\r\n            this.setState({\r\n                date: '',\r\n                time: this.timeParse(value, true).time\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        document.addEventListener('click', this.handleClickOutside, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.handleClickOutside, false);\r\n    }\r\n\r\n    timeParse(value, isNew){\r\n        value = parseInt(value);\r\n        let hourse, minutes;\r\n        if(isNew) {\r\n            hourse = new Date(new Date().setHours(new Date().getHours() + 1)).getHours();\r\n            minutes = new Date().getMinutes();\r\n        } else {\r\n            hourse = new Date(new Date(value).setHours(new Date(value).getHours())).getHours();\r\n            minutes = new Date(value).getMinutes();\r\n        }\r\n        if(hourse < 10) {\r\n            hourse = \"0\" + hourse\r\n        }\r\n\r\n        if(minutes < 10) {\r\n            minutes = \"0\" + minutes\r\n        }\r\n\r\n        return {\r\n            time: hourse + \" : \" + minutes\r\n        }\r\n    };\r\n\r\n    handleClickOutside(e, self) {\r\n        // Получаем ссылку на элемент, при клике на который, скрытие не будет происходить\r\n        const datePicker = document.getElementById(`customCalendarDatePicker_${this.props.id}`);\r\n        const timeListPicker = document.getElementById('popup-list-time');\r\n        // Проверяем, есть ли в списке родительских или дочерних элементов, вышеуказанный компонент\r\n        if (!e.path.includes(datePicker)) {\r\n            // Если в области кликнутого элемента нету \"svgBtnMonth\", то проверяем ниже\r\n            // Не произведен ли клик на кнопку, открывающую окно смайлов\r\n            const svgBtnOpenCalendarDatePicker = document.getElementById(`customDatePickerIcon-container_${this.props.id}`);\r\n            const svgBtnInputCalendarDatePicker = document.getElementById('input-date-picker-value');\r\n            // Если клик не производился и на кнопку открытия окна смайлов, то скрываем блок.\r\n            if (!e.path.includes(svgBtnOpenCalendarDatePicker)) {\r\n                this.setState({isOpenCalendarDatePicker: false})\r\n            }\r\n        }\r\n\r\n        if (!e.path.includes(timeListPicker)) {\r\n            // Если в области кликнутого элемента нету \"svgBtnMonth\", то проверяем ниже\r\n            // Не произведен ли клик на кнопку, открывающую окно\r\n            const svgBtnOpenTimePicker = document.getElementById('arrow-list-time-date-picker');\r\n            if (!e.path.includes(svgBtnOpenTimePicker)) {\r\n                this.setState({isOpenTimePickerList: false})\r\n            }\r\n        }\r\n    }\r\n\r\n    saveDatePicker (value, close) {//Сохранение даты с временем в state\r\n        let date = '';\r\n        let input = document.getElementById(`input-date-picker-value_${this.props.id}`);\r\n        if(!this.state.date && !value) {\r\n            date = new Date();\r\n        } else {\r\n            if(!this.props.time) {\r\n                date = new Date(value);\r\n            } else {\r\n                date = new Date(this.state.date);\r\n            }\r\n        }\r\n        let time = this.state.time;\r\n        let new_data = \"\", sendDate = \"\";\r\n        if (!time.includes(\"_\")) {\r\n            new_data = new Date(date.getFullYear(), date.getMonth(), date.getDate(), parseInt(time.split(':')[0]), parseInt(time.split(':')[1]));\r\n            this.setState({\r\n                date: new_data.getTime(),\r\n                inputDate: this.parseDateStringInput(new_data.getTime())\r\n            });\r\n            this.props.onChange(new_data.getTime());\r\n        } else {\r\n            new_data = new Date(date.getFullYear(), date.getMonth(), date.getDate(), parseInt(new Date().getHours()) + 1, parseInt(new Date().getMinutes()))\r\n        }\r\n        this.validationCheck(this.parseDateStringInput(new_data.getTime()));\r\n        if(close){\r\n            this.setState({isOpenCalendarDatePicker: false})\r\n        }\r\n        input.selectionStart = input.value.length;\r\n        /*event.keyCode=9;*/\r\n    }\r\n\r\n\r\n    renderListTime() {\r\n        let arrayTime = [];\r\n        for(let t = 1; t < 24; t++) {\r\n            let itemTime = '';\r\n            if(t < 10) {\r\n                itemTime = '0' + t  +  ':' + ' ' + '00'\r\n            } else {\r\n                itemTime = t + ' ' +  ':' + ' ' + '00'\r\n            }\r\n            arrayTime.push(itemTime);\r\n        }\r\n        arrayTime.push(\"00 : 00\");\r\n        let time = this.state.time.split(\" :\")[0];\r\n        return arrayTime.map((each, index) => {\r\n            return (\r\n                <div key={index}\r\n                     className= {time === each.split(\" :\")[0] ? \"active-item-list-year-months\" : \"\"}\r\n                     onClick={() => {\r\n                         document.getElementById('time-date-picker-value-id').focus();\r\n                         this.setState({\r\n                             time: each,\r\n                             isOpenTimePickerList: false})\r\n                     }}\r\n                >{each}</div>\r\n            )\r\n        });\r\n    }\r\n\r\n    parseDateStringInput(value){\r\n        if(value) {\r\n            let oldDate = '';\r\n            if(!this.props.time) {\r\n                oldDate = new Date(new Date(parseInt(value)).getFullYear(), new Date(parseInt(value)).getMonth(), new Date(parseInt(value)).getDate(), 12, 0);\r\n            } else {\r\n                oldDate = new Date(parseInt(value));\r\n            }\r\n            let options = {year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'};\r\n            let newDate = oldDate.toLocaleString('ru-RU', options).replace(', ', ' / ');\r\n            let date =  newDate.split(' / ')[0]\r\n            let hourse = newDate.split(' / ')[1].split(\":\")[0];\r\n            let minutes = newDate.split(' / ')[1].split(\":\")[1];\r\n            if (hourse.length === 1) {\r\n                hourse = \"0\" + hourse;\r\n            }\r\n            return date + \" / \" + hourse + \":\" + minutes\r\n        }\r\n    }\r\n\r\n    validationCheck(value, onBlur) {\r\n        let oldDate = value ? value : this.state.inputDate;\r\n        if (oldDate) {\r\n            if(oldDate.split(\"_\").length !== 13 || (oldDate.split(\"_\").length !== 9 && !oldDate.includes(\"__:__\"))) {\r\n                if(!oldDate.includes(\"_\")) {\r\n                    let oldDay = parseInt(oldDate.split('.')[0]);\r\n                    let oldMonth = parseInt(oldDate.split('.')[1]) - 1;\r\n                    let oldYear = parseInt(oldDate.split('.')[2]);\r\n                    let hourse, minutes;\r\n                    if(this.props.time) {\r\n                        hourse = parseInt(oldDate.split(\" / \")[1].split(\":\")[0]);\r\n                        minutes = parseInt(oldDate.split(\" / \")[1].split(\":\")[1]);\r\n                        if(oldDate.split(\" / \")[1].split(\":\")[0].includes(\"_\") || oldDate.split(\" / \")[1].split(\":\")[1].includes(\"_\")){\r\n                            hourse = \"\";\r\n                            minutes = \"\"\r\n                        }\r\n                    } else {\r\n                        hourse = 0;\r\n                        minutes = 0\r\n                    }\r\n                    let newData = new Date(oldYear, oldMonth, oldDay, hourse, minutes);\r\n                    if(oldDay !== newData.getDate() || oldMonth !== newData.getMonth() ||oldYear !== newData.getFullYear() || oldYear <= 1930\r\n                        || hourse >= 24 || (!hourse && hourse !== 0) || minutes >= 60  || (!minutes && minutes !== 0)) {\r\n                        this.setState({\r\n                            isCheckError: false,\r\n                            textError: this.props.time ? \"Некорректные дата или время\" : \"Неверная дата\"\r\n                        });\r\n                        if(  this.props.onCheck) {\r\n                            this.props.onCheck(true);\r\n                        }\r\n                    } else {\r\n                        if(!this.props.validationDisabled) {\r\n                            if (newData.getTime() < new Date().getTime()) {\r\n                                if(!onBlur){\r\n                                    this.props.onChange(newData.getTime());\r\n                                }\r\n                                let textError = 'Дата и время не могут быть раньше текущих';\r\n                                if (this.props.projectIssueDateValidation) {\r\n                                    const validationResult = this.props.projectIssueDateValidation(newData);\r\n                                    textError = validationResult && validationResult.text;\r\n                                }\r\n                                if (textError) {\r\n                                    this.setState({\r\n                                        isCheckError: false,\r\n                                        textError: textError\r\n                                    });\r\n                                } else {\r\n                                    this.setState({\r\n                                        isCheckError: true,\r\n                                        textError: textError\r\n                                    });\r\n                                }\r\n                            } else {\r\n                                if(!onBlur){\r\n                                    this.props.onChange(newData.getTime());\r\n                                }\r\n                                let textError = '';\r\n                                if (this.props.projectIssueDateValidation) {\r\n                                    const validationResult = this.props.projectIssueDateValidation(newData);\r\n                                    textError = validationResult && validationResult.text;\r\n                                }\r\n                                if (textError) {\r\n                                    this.setState({\r\n                                        isCheckError: false,\r\n                                        textError: textError\r\n                                    });\r\n                                } else {\r\n                                    this.setState({\r\n                                        isCheckError: true,\r\n                                        textError: textError\r\n                                    });\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if(!onBlur){\r\n                                this.props.onChange(newData.getTime());\r\n                            }\r\n                            this.setState({\r\n                                isCheckError: true,\r\n                                textError: \"\"\r\n                            });\r\n                        }\r\n                        if(this.props.onCheck) {\r\n                            this.props.onCheck(false);\r\n                        }\r\n                    }\r\n                } else if(oldDate.includes(\"_\") && !value && oldDate.split(\"_\").length !== 13){\r\n                    if(oldDate.split(\"_\").length === 13){\r\n                        this.setState({\r\n                            isCheckError: true,\r\n                            textError: \"\"\r\n                        });\r\n                    } else if(oldDate.split(\"_\").length === 9 && !this.props.time){\r\n                        this.setState({\r\n                            isCheckError: true,\r\n                            textError: \"\"\r\n                        });\r\n                    } else {\r\n                        this.setState({\r\n                            isCheckError: false,\r\n                            textError: this.props.time ? \"Некорректные дата или время\" : \"Неверная дата\"\r\n                        });\r\n                    }\r\n                } else {\r\n                    this.setState({\r\n                        isCheckError: true,\r\n                        textError: \"\"\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            this.setState({\r\n                isCheckError: true,\r\n                textError: \"\"\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {placeholder, styleInput, styleIcon, style, isFocused, label, required, projectIssueDateValidation, disabled = false} = this.props;\r\n        let {isOpenCalendarDatePicker, isOpenTimePickerList, onMouseLeaveDataPicker, time} = this.state;\r\n\r\n        let errorClass = '';\r\n        if (projectIssueDateValidation !== undefined) {\r\n            errorClass = 'projectIssueError';\r\n        }\r\n\r\n        return (\r\n            <div className=\"customDatePicker\" style={style}>\r\n                <div\r\n                    style={{display: 'flex', alignItems: 'center'}}\r\n                    onBlur={() => {\r\n                        if(this.state.onMouseLeaveDataPicker) {\r\n                            this.setState({isOpenCalendarDatePicker: false})\r\n                        }\r\n                    }}\r\n                    onMouseLeave={() => {\r\n                        this.setState({\r\n                            onMouseLeaveDataPicker: true\r\n                        })\r\n                    }}\r\n                    onMouseEnter={() => {\r\n                        this.setState({\r\n                            onMouseLeaveDataPicker: false\r\n                        })\r\n                    }}\r\n                >\r\n                    <InputMask\r\n                        id={`input-date-picker-value_${this.props.id}`}\r\n                        className=\"datePickerInput\"\r\n                        style={{\r\n                            background: 'white',\r\n                            border: '1px solid rgb(192, 192, 192)',\r\n                            height: 32,\r\n                            padding: '4px 10px 4px',\r\n                            borderRadius: 3,\r\n                            boxSizing: 'border-box',\r\n                            width: '100%',\r\n                            fontFamily: 'sans-serif',\r\n                            outlineColor: '#4a4293',\r\n                            fontSize: '14px',\r\n                            ...styleInput\r\n                        }}\r\n                        value={this.state.inputDate}\r\n                        autoFocus={isFocused}\r\n                        placeholder={placeholder}\r\n                        onChange={(e, date, close) => {\r\n                            this.onFieldChange(e.target.value, e.target.name);\r\n                        }}\r\n                        name=\"datePicker\"\r\n                        mask={this.props.time ? \"99.99.9999 / 99:99\" :  \"99.99.9999\"}\r\n                        onBlur={() => {\r\n                            this.validationCheck('', true);\r\n                        }}\r\n                        disabled={disabled}\r\n\r\n                    />\r\n                    <div\r\n                        id={`customDatePickerIcon-container_${this.props.id}`}\r\n                        className={disabled ? \"customDatePickerIcon-container\" : \"customDatePickerIcon-container chat-list-item-tooltip\"}\r\n                        data-tooltip={!isOpenCalendarDatePicker ? \"Открыть календарь\" : \"Закрыть календарь\"}\r\n                        disabled={disabled}\r\n                        onClick={() => {\r\n                            if (!disabled) {\r\n                                document.getElementById(`input-date-picker-value_${this.props.id}`).focus();\r\n                                this.setState({\r\n                                    isOpenCalendarDatePicker: !isOpenCalendarDatePicker,\r\n                                    onMouseLeaveDataPicker: !onMouseLeaveDataPicker\r\n                                });\r\n                                if (!this.props.direction) {\r\n                                    let winHeight = document.documentElement.clientHeight;\r\n                                    let {top, bottom} = document.getElementById(`customDatePickerIcon-container_${this.props.id}`).getBoundingClientRect();\r\n                                    let elBottom = winHeight - bottom;\r\n                                    let popup = document.getElementById(`customCalendarDatePicker_${this.props.id}`);\r\n                                    if (popup) {\r\n                                        popup.style.bottom = top > elBottom ? !label ? '34px' : '54px' : 'initial';\r\n                                        popup.style.top = top > elBottom ? 'initial' : !label ? '34px' : '54px';\r\n                                    }\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        {!disabled &&\r\n                        <Calendar\r\n                            className=\"customDatePickerIcon\"\r\n                            style={{\r\n                                fill: isOpenCalendarDatePicker ? \"7CB8B0\" : \"grey\",\r\n                                height: 17,\r\n                                width: 20,\r\n                                styleIcon\r\n                            }}\r\n                        />}\r\n\r\n                    </div>\r\n                    <div\r\n                        id={`customCalendarDatePicker_${this.props.id}`}\r\n                        className=\"customCalendarDatePicker\"\r\n                        onMouseLeave={() => {\r\n                            this.setState({\r\n                                onMouseLeaveDataPicker: true\r\n                            })\r\n                        }}\r\n                        onMouseEnter={() => {\r\n                            this.setState({\r\n                                onMouseLeaveDataPicker: false\r\n                            })\r\n                        }}\r\n                    >\r\n                        {isOpenCalendarDatePicker\r\n                            ?\r\n                            <div>\r\n                                <CustomCalendar\r\n                                    onChange={(date, close) => {\r\n                                        if(this.props.time) {\r\n                                            this.setState({date: date})\r\n                                        } else {\r\n                                            this.setState({date: date});\r\n                                            this.saveDatePicker(date, close);\r\n                                        }\r\n                                    }}\r\n                                    startYear={this.props.startYear}\r\n                                    value={this.state.date}\r\n                                />\r\n                                {this.props.time ?\r\n                                    <div id=\"time-btn-date-picker\">\r\n                                        <div className=\"time-date-picker\" style={{opacity: this.props.time ? 1 : 0.7}}>\r\n                                            <div className=\"time-date-picker-title\">Время</div>\r\n                                            <div style={{\r\n                                                display: 'flex',\r\n                                                alignItems: 'center',\r\n                                                width: '110px',\r\n                                                position: 'relative'\r\n                                            }}>\r\n                                                <InputMask\r\n                                                    className=\"time-date-picker-value\" id=\"time-date-picker-value-id\"\r\n                                                    style={{\r\n                                                        background: 'white',\r\n                                                        border: '1px solid rgb(192, 192, 192)',\r\n                                                        height: 26,\r\n                                                        padding: '4px 8px 4px',\r\n                                                        borderRadius: 3,\r\n                                                        boxSizing: 'border-box',\r\n                                                        fontFamily: 'sans-serif',\r\n                                                        outlineColor: '#4a4293',\r\n                                                        width: 80\r\n                                                    }}\r\n                                                    value={time}\r\n                                                    onChange={e => {\r\n                                                        this.onFieldChange(e.target.value, e.target.name)\r\n                                                    }}\r\n                                                    disabled={this.props.time ? false : true}\r\n                                                    name=\"timePicker\"\r\n                                                    mask=\"99 : 99\"\r\n                                                />\r\n                                                <div id=\"arrow-list-time-date-picker\"\r\n                                                     style={{\r\n                                                         display: 'flex',\r\n                                                         alignItems: 'center',\r\n                                                         position: 'relative',\r\n                                                         borderLeft: '1px solid rgb(224, 224, 224)',\r\n                                                         left: '-23px'\r\n                                                     }}>\r\n                                                    <Icon\r\n                                                        name=\"angle left\"\r\n                                                        id=\"arrow-time-open-list-date-picker\"\r\n                                                        style={{\r\n                                                            transform: 'rotate(-90deg)',\r\n                                                            cursor: 'pointer', height: 20, width: 20,\r\n                                                            fill: !isOpenTimePickerList ? 'rgb(124, 123, 123)' : 'rgb(74, 66, 147)'\r\n                                                        }}\r\n                                                        onClick={() => {\r\n                                                            document.getElementById('time-date-picker-value-id').focus();\r\n                                                            this.setState({isOpenTimePickerList: !isOpenTimePickerList});\r\n                                                            let winHeight = document.documentElement.clientHeight;\r\n                                                            let {top, bottom} = document.getElementById('arrow-time-open-list-date-picker').getBoundingClientRect();\r\n                                                            let elBottom = winHeight - top;\r\n                                                            let popup = document.getElementById('popup-list-time');\r\n                                                            let indexElement = parseInt(this.state.time.split(\":\")[0]);\r\n                                                            if(indexElement === 0){\r\n                                                                indexElement = 24;\r\n                                                            }\r\n                                                            popup.scrollTop = (25 * indexElement) - 55;\r\n                                                            if (popup) {\r\n                                                                popup.style.bottom = top/2 < elBottom ? 'initial' : '26px';\r\n                                                                popup.style.top = top/2 < elBottom ? '26px' : 'initial';\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                                <div id=\"popup-list-time\"\r\n                                                     style={{\r\n                                                         border: isOpenTimePickerList ? \"1px solid rgb(224, 224, 224)\" : \"\",\r\n                                                         height: !isOpenTimePickerList ? 0 : 125\r\n                                                     }}>\r\n                                                    {this.renderListTime()}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"btn-date-picker\">\r\n                                            <Button\r\n                                                className=\"btn-save-datePicker\"\r\n                                                id=\"btn-save-datePicker\"\r\n                                                onClick={() => {\r\n                                                    this.saveDatePicker();\r\n                                                    this.setState({isOpenCalendarDatePicker: false});\r\n                                                }}\r\n\r\n                                            >Задать</Button>\r\n                                            <Button\r\n                                                className=\"btn_gray\"\r\n                                                onClick={() => {\r\n                                                    document.getElementById(`input-date-picker-value_${this.props.id}`).focus();\r\n                                                    this.setState({isOpenCalendarDatePicker: false});\r\n                                                }}\r\n                                            >Отмена</Button>\r\n                                        </div>\r\n                                    </div> : ''}\r\n                            </div> : ''}\r\n                    </div>\r\n                    {!this.state.isCheckError ? <div className={`input-error ${errorClass}`} style={{top: !label ? 33 : 55, minWidth: '170px'}}>{this.state.textError} </div> :\r\n                        this.props.errorLabel && this.props.checkError ? <div className={`input-error ${errorClass}`} style={{top: 30}}>{this.props.errorLabel}</div> : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (customDateTimePicker);\r\n","/**\r\n * Created by smalkov on 12.09.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {convertToRaw} from \"draft-js\";\r\n/*semantic-ui components*/\r\nimport { Dropdown, Input, Button } from 'semantic-ui-react'\r\n/*custom components*/\r\nimport CustomDateTimePicker from \"../../../ui/dateTimePicker/CustomDateTimePicker\";\r\nimport PreviewArticle from \"../../blocks/previewArticle/PreviewArticle\"\r\nimport Editor from \"../../../ui/editor/Editor\"\r\nimport Dialog from \"../../../ui/dialog/Dialog\"\r\n/*utils*/\r\nimport {getLang, isAutoFocusMobile} from \"../../../../utils/utils\";\r\n/*css*/\r\nimport \"./createEvent.css\"\r\nimport {fetchData} from \"../../../../utils/fetchHelper\";\r\nimport {API} from \"../../../../redux/constant/UIConst\";\r\n\r\n/**\r\n *  Компонент создании статьи для публикации\r\n */\r\n\r\nclass CreateEvent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChageHandle = this.onChageHandle.bind(this);\r\n        this.state = {\r\n            textError: ''\r\n        }\r\n    }\r\n\r\n    checkValidation(value, type) {//Проверка на заполненость обязательных полей\r\n        let { checkErrorName, checkErrorSubject, checkErrorAnnotation } = this.state;\r\n        switch (type) {\r\n            case 'name': {\r\n                if(!value) {\r\n                    checkErrorName = true;\r\n                } else {\r\n                    checkErrorName = false;\r\n                }\r\n                break;\r\n            }\r\n            case 'subject': {\r\n                if(!value) {\r\n                    checkErrorSubject = true;\r\n                } else {\r\n                    checkErrorSubject = false;\r\n                }\r\n                break;\r\n            }\r\n            case 'annotation': {\r\n                if(!value) {\r\n                    checkErrorAnnotation = true;\r\n                } else {\r\n                    checkErrorAnnotation = false;\r\n                }\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n\r\n        this.setState({\r\n            checkErrorName: checkErrorName,\r\n            checkErrorSubject: checkErrorSubject,\r\n            checkErrorAnnotation: checkErrorAnnotation\r\n        });\r\n    }\r\n\r\n    onChageHandle(value, field) {\r\n        let { onChangeEvents } = this.props;\r\n        //fetchData(API.ARTICLE.GET_ARTICLE, {id: createArticle.id, language: value}, this.newEditArticle);\r\n        onChangeEvents(value, field);\r\n    }\r\n\r\n    render() {\r\n        let { settings, infoEvent, localization, isNewEvent, close, onSaveEvent } = this.props;\r\n        let { textError } = this.state;\r\n        let translate = this.props.translate.createEvent;\r\n\r\n        /*let languageDefault = event.language || localization || getLang() || 'en';*/\r\n\r\n        return (\r\n            <div id=\"create_event_block\">\r\n              <div className=\"create_event_head\">\r\n                  <h2>{isNewEvent ? translate.title.create.label : translate.title.edit.label}</h2>\r\n                  <div className=\"horizontal_divider\"></div>\r\n            </div>\r\n            <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                <div className=\"ui input container_nameArticle\">\r\n                    <span className=\"label\">{translate.fields.caption.label}<span className=\"required\">*</span></span>\r\n                    <Input\r\n                        type=\"text\"\r\n                        placeholder={translate.fields.caption.placeholder}\r\n                        onChange={(e) => {this.onChageHandle(e.currentTarget.value, 'caption')}}\r\n                        value={infoEvent.caption}\r\n                    />\r\n                </div>\r\n                <div className=\"ui input container_datePicker\">\r\n                    <span className=\"label\">{translate.fields.publishDate.label}<span className=\"required\">*</span></span>\r\n                    <CustomDateTimePicker\r\n                        style={{width: 180}}\r\n                        placeholder=\"дд.мм.гггг / 00:00\"\r\n                        styleInput={{width: 180, border: '1px solid rgba(34,36,38,.15)', height: 38}}\r\n                        value={infoEvent.publishDate || ''}\r\n                        validationDisabled={true}\r\n                        id=\"publishDate\"\r\n                        startYear={2017}\r\n                        name=\"publishDate\"\r\n                        time={true}\r\n                        onChange={(value) => {\r\n                            this.onChageHandle(value, 'publishDate')\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"ui input container_text_event\">\r\n                <span className=\"label\">{translate.fields.text.label}<span className=\"required\">*</span></span>\r\n                <textarea\r\n                    type=\"text\"\r\n                    placeholder={translate.fields.text.label.placeholder}\r\n                    onChange={(e) => {this.onChageHandle(e.currentTarget.value, 'text')}}\r\n                    value={infoEvent.text}\r\n                />\r\n                {/*{checkErrorAnnotation ? <div className=\"error\">{textError}</div> : ''}*/}\r\n            </div>\r\n            <div className=\"actions_create_event\">\r\n                <Button\r\n                    disabled={!infoEvent.text || !infoEvent.caption || !infoEvent.publishDate}\r\n                    className=\"ui button btn_standart_style\"\r\n                    onClick={onSaveEvent}>{translate.fields.actions.save}</Button>\r\n                <Button className=\"btn_gray\" onClick={close}>{translate.fields.actions.cancel}</Button>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default (CreateEvent);\r\n\r\n\r\n","import React, { Component } from 'react'\r\n/*custom components*/\r\nimport { Grid, Form, Pagination, Segment } from 'semantic-ui-react'\r\n/*css*/\r\nimport \"./paginationComponent.css\"\r\n\r\n\r\nclass PaginationComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlePaginationChange = this.handlePaginationChange.bind(this);\r\n    }\r\n    handlePaginationChange = (e, { activePage }) => {\r\n        this.props.onChange(activePage);\r\n        console.log(activePage);\r\n    };\r\n\r\n    render() {\r\n        let { activePage, boundaryRange, siblingRange, ellipsisItem, lastItem, nextItem, totalPages, firstItem, prevItem } = this.props;\r\n\r\n        return (\r\n            <div id=\"pagination\">\r\n                <Pagination\r\n                    defaultActivePage={1}\r\n                    activePage={activePage}\r\n                    onPageChange={this.handlePaginationChange}\r\n                    totalPages={totalPages}\r\n                    ellipsisItem={ellipsisItem || undefined}\r\n                    firstItem={firstItem || undefined}\r\n                    lastItem={lastItem || undefined}\r\n                    prevItem={prevItem || undefined}\r\n                    nextItem={nextItem || undefined}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (PaginationComponent)","/**\r\n * Created by smalkov on 18.10.2018.\r\n */\r\n\r\n/*react - redux*/\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*semantic-ui components*/\r\nimport { Input, Button, Icon, Dropdown } from 'semantic-ui-react'\r\n/*svgIcons*/\r\nimport { Add } from \"../../ui/svgIcons/svgIcons\"\r\n/*custom components*/\r\nimport User from \"../../ui/user/User\"\r\n/*css*/\r\nimport \"./table.css\"\r\n/*utils*/\r\nimport {FormateDate} from \"../../../utils/utils\";\r\n\r\n/**\r\n * Компонент таблица\r\n */\r\n\r\nconst trigger = ( <Icon className=\"edit_outline\" name=\"ellipsis horizontal\"/>);\r\n\r\nclass Table extends React.PureComponent {\r\n\r\n    renderContentAdministration (columns, data, translate, optionsMenu, functionList, typeTable, constants, onClick) {\r\n        let headTable = [];\r\n        let bodyTable = [];\r\n        if (columns && Object.keys(columns).length) {\r\n            let keys = Object.keys(columns);\r\n            keys.map((item, index) => {\r\n                let element =\r\n                    <div style={columns[item].style}>{columns[item].label}</div>;\r\n                headTable.push(element);\r\n            })\r\n        }\r\n        switch (typeTable) {\r\n            case 'users': {\r\n                if (data && data.length) {\r\n                    data.map((item, index) => {\r\n                        let status = item.status;\r\n                        let date = FormateDate(item.createTime && new Date(item.createTime) || '');\r\n\r\n                        if (status === 'REVIEW') {\r\n                            status = <div>\r\n                                <div className=\"text_request_reg\">{translate.administration.other.requestUser}</div>\r\n                                <div className=\"btn_accept_declined\">\r\n                                    <Button\r\n                                        className=\"btn_accept btn_standart_style\"\r\n                                        onClick={() => {functionList('user', {id: item.id, status: 'ACTIVE'})}}\r\n                                    >{translate.administration.buttons.confirm}</Button>\r\n                                    <div className=\"link declined\"\r\n                                         onClick={() => {functionList('user', {id: item.id, status: 'DECLINED'})}}\r\n                                    >{translate.administration.buttons.reject}</div>\r\n                                </div>\r\n                            </div>\r\n                        } else {\r\n                            status =\r\n                                <div className=\"administration_status_menu_user\" onClick={() => functionList('', {path: '', typeInfo: typeTable, status: '', id: '', isNewEvent: true, element: item})}>\r\n                                    <span>{translate.administration.status[item.status.toLowerCase()]}</span>\r\n                                    {item.status !== 'DELETED' ?\r\n                                        <Dropdown\r\n                                            className=\"article_menu\"\r\n                                            trigger={trigger}\r\n                                            options={optionsMenu('user', item.status)}\r\n                                            pointing='top right'\r\n                                            icon={null}\r\n                                            onChange={(e, select) => {\r\n                                                if (select.value !== 'default') {\r\n                                                    functionList('user', {id: item.id, value: select.value});\r\n                                                }\r\n                                            }}\r\n                                        /> : ''}\r\n                                </div>\r\n                        }\r\n                        let element = (\r\n                            <div className=\"row\">\r\n                                <div className=\"column user\"\r\n                                     style={ Object.values(columns)[0].style}\r\n                                     onClick={() => functionList('', {path: '', typeInfo: typeTable, status: '', id: '', isNewEvent: true, element: item})}\r\n                                >\r\n                                    <User\r\n                                        className=\"list_user_item\"\r\n                                        name={item.name}\r\n                                        rank={item.rank}\r\n                                        avatar_id={item.avatarId}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"column email\" onClick={() => functionList('', {path: '', typeInfo: typeTable, status: '', id: '', isNewEvent: true, element: item})} style={ Object.values(columns)[1].style}></div>\r\n                                <div className=\"column date\" onClick={() => functionList('', typeTable, '', '', true, item)} style={ Object.values(columns)[2].style}>{date}</div>\r\n                                <div className={`column status ${item.status && item.status.toLowerCase()}`} style={Object.values(columns)[3].style}>{status}</div>\r\n                            </div>);\r\n                        bodyTable.push(element);\r\n                    })\r\n                } else {\r\n                    let element = (\r\n                        <div className=\"table_not_found_data\">{translate.administration.notFoundData[typeTable]}</div>);\r\n                    bodyTable.push(element);\r\n                }\r\n                break;\r\n            }\r\n            case 'articles': {\r\n                let dataColor = true;\r\n                if (data && data.length) {\r\n                    data.map((item, index) => {\r\n                         if (index !== 0 && data[index - 1].id !== data[index].id) {\r\n                            dataColor = !dataColor;\r\n                        }\r\n                        let status = '';\r\n                        if (item.status === 'REVIEW') {\r\n                            status = <div>\r\n                                <div className=\"text_request_reg\">{translate.administration.other.request}</div>\r\n                                <div className=\"btn_accept_declined\">\r\n                                    <Button\r\n                                        className=\"btn_accept btn_standart_style\"\r\n                                        onClick={(e) => {\r\n                                            functionList('article', {id: item.id,  versionId: item.versionId});\r\n                                            e.stopPropagation();\r\n                                        }}\r\n                                    >{translate.administration.buttons.confirm}</Button>\r\n                                    <div className=\"link declined\"\r\n                                         onClick={(e) => {\r\n                                                item.status = 'DECLINED';\r\n                                                functionList('article', {id: item.id,  versionId: item.versionId, article: item, status: 'DECLINED'});\r\n                                             e.stopPropagation();\r\n                                         }}\r\n                                    >{translate.administration.buttons.reject}</div>\r\n                                </div>\r\n                            </div>\r\n                        } else {\r\n                            status =\r\n                                <div className=\"administration_status_menu_user\">\r\n                                    <span>{translate.administration.status[item.status.toLowerCase()]}</span>\r\n                                    {item.status !== 'DELETED' ?\r\n                                        <Dropdown\r\n                                            className=\"article_menu\"\r\n                                            trigger={trigger}\r\n                                            options={optionsMenu('article', item.status)}\r\n                                            pointing='top right'\r\n                                            icon={null}\r\n                                            onChange={(e, select) => {\r\n                                                if (select.value !== 'default') {\r\n                                                    item.status = select.value;\r\n                                                    functionList('article', {id: item.id,  versionId: item.versionId, article: item, status: select.value});\r\n                                                }\r\n                                            }}\r\n                                        /> : ''}\r\n                                </div>\r\n                        }\r\n                        let date = FormateDate(item.createTime && new Date(item.createTime) || '');\r\n                        let subject = '';\r\n                        if(constants.subjects.length) {\r\n                            for (let i = 0; i < constants.subjects.length; i++) {\r\n                                if(item.subjectId === constants.subjects[i].id.toString()) {\r\n                                    subject = constants.subjects[i].label\r\n                                }\r\n                            }\r\n                        }\r\n                        let element = (\r\n                            <div className=\"row\" onClick={() => functionList('', {path: `${typeTable}/${item.id}`, typeInfo: typeTable, status: item.status, id: item.id, isNewEvent: false, element: item})} data-color={dataColor && 1 || 2}>\r\n                                <div className=\"column name_article\" style={Object.values(columns)[0].style}>{`${item.label} (${item.language.toUpperCase()})`}</div>\r\n                                <div className=\"column subject\" style={Object.values(columns)[1].style}>{subject}</div>\r\n                                <div className=\"column date_create_article\" style={Object.values(columns)[2].style}>{date}</div>\r\n                                <div className={`column status ${item.status && item.status.toLowerCase()}`} style={Object.values(columns)[3].style}>{status}</div>\r\n                            </div>);\r\n                        bodyTable.push(element);\r\n                    })\r\n                } else {\r\n                    let element = (\r\n                        <div className=\"table_not_found_data\">{translate.administration.notFoundData[typeTable]}</div>);\r\n                    bodyTable.push(element);\r\n                }\r\n                break;\r\n            }\r\n            case 'events': {\r\n                if (data && data.length) {\r\n                    data.map((item, index) => {\r\n                        let dateCreate = FormateDate(item.createTime && new Date(item.createTime) || '');\r\n                        let publishDate = FormateDate(new Date(item.publishDate) || '');\r\n                        let element = (\r\n                            <div className=\"row\" onClick={() => functionList('', {path: '', typeInfo: typeTable, status: '', id: '', isNewEvent: false, element: item})}>\r\n                                <div className=\"column title_event\" style={Object.values(columns)[0].style}>{item.caption}</div>\r\n                                <div className=\"column date_create_event\" style={Object.values(columns)[1].style}>{dateCreate}</div>\r\n                                <div className=\"column date_publication_event\" style={Object.values(columns)[2].style}>{publishDate}</div>\r\n                            </div>);\r\n                        bodyTable.push(element);\r\n                    })\r\n                } else {\r\n                    let element = (\r\n                        <div className=\"table_not_found_data\">{translate.administration.notFoundData[typeTable]}</div>);\r\n                    bodyTable.push(element);\r\n                }\r\n                break;\r\n            }\r\n            default: break;\r\n        }\r\n\r\n        return (\r\n            <div className=\"administration_table_portal\">\r\n                <div className=\"administration_table_head_portal\">\r\n                    {headTable}{typeTable === 'events'\r\n                        && <div className=\"add_icon_event\"\r\n                                onClick={() => functionList('',{path: '', typeInfo: typeTable, status: '', id: '', isNewEvent: true, element: ''})}\r\n                ><Add/></div>}\r\n                </div>\r\n                <div className=\"administration_table_body_portal\">{bodyTable}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        let { className, translate, data, optionsMenu, colums, functionList, typeTable, constants } = this.props;\r\n        let content = this.renderContentAdministration(colums, data, translate, optionsMenu, functionList, typeTable, constants, functionList.onClick);\r\n        return (\r\n            <div id=\"table\" className={className}>\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default (Table)","/**\r\n * Created by smalkov on 04.09.2018.\r\n */\r\n\r\n/* react - redux */\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n/*custom components*/\r\nimport ListMenu from \"../../blocks/listMenu/ListMenu\"\r\nimport PreviewArticle from \"../../blocks/previewArticle/PreviewArticle\"\r\nimport CreateEvent from \"../../blocks/createEvent/CreateEvent\"\r\nimport Pagination from \"../../../ui/pagination/PaginationComponent\"\r\nimport UserInfoCard from \"../../blocks/userInfoCard/UserInfoCard\"\r\nimport Table from \"../../../ui/table/Table\"\r\n/*semantic-ui components*/\r\nimport { Button, Dropdown, Icon, Segment, Dimmer, Loader } from 'semantic-ui-react'\r\n/*css*/\r\nimport \"./administration.css\"\r\n/*utils*/\r\nimport { fetchData } from \"../../../../utils/fetchHelper\";\r\nimport { TranslateInterface } from \"../../../../utils/translate/Translate\";\r\nimport { FormateDate } from \"../../../../utils/utils\";\r\n\r\n/*constants*/\r\nimport { API } from \"../../../../redux/constant/UIConst\";\r\nimport history from \"../../../../history\";\r\n\r\n/**\r\n * Компонент страницы \"Администрирование\"\r\n */\r\n\r\nconst trigger = ( <Icon className=\"edit_outline\" name=\"ellipsis horizontal\"/>);\r\n\r\nclass Administration extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getData = this.getData.bind(this);\r\n        this.changeUserSave = this.changeUserSave.bind(this);\r\n        this.onClickElement = this.onClickElement.bind(this);\r\n        this.optionsMenu = this.optionsMenu.bind(this);\r\n        this.closeInfoEvent = this.closeInfoEvent.bind(this);\r\n        this.onSaveEvent = this.onSaveEvent.bind(this);\r\n        this.newEventSaveStore = this.newEventSaveStore.bind(this);\r\n        this. functionList = this.functionList.bind(this);\r\n        this.state = {\r\n           pageInfo: '',\r\n           isNewEvent: false,\r\n           activeNumber: 1\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { administration } = this.props;\r\n        history.push(`/administration/${administration.tabLeftAdministration}`);\r\n        this.getData(administration.tabLeftAdministration);\r\n    }\r\n\r\n    getData(tabMenu, activeNumber) { //Получение пользователей и статей для админки\r\n        let { getUsers, getArticles, saveSubjects, getNews, settings } = this.props;\r\n        fetchData(API.SUBJECTS.GET_ALL_SUBJECTS, {}, saveSubjects);\r\n        if (tabMenu === 'users') {\r\n            fetchData(API.ADMINISTRATION.GET_USERS, {}, getUsers);\r\n        } else if (tabMenu === 'articles') {\r\n            // fetchData(API.ADMINISTRATION.GET_ARTICLES, {}, getArticles);\r\n            fetchData(API.ARTICLE.GET_ALL_ARTICLES_VERSIONS, ['PUBLISHED', 'REVIEW'], getArticles);\r\n        } else if (tabMenu === 'events') {\r\n            fetchData(API.ADMINISTRATION.GET_ALL_NEWS, {number : (activeNumber - 1) || 0, size : 50, language: settings.language || 'RU'}, getNews);\r\n        }\r\n    }\r\n\r\n    changeUserSave(id, status) {\r\n        let { getUsers, administration } = this.props;\r\n        let users = administration.users &&  administration.users.list;\r\n        fetchData(API.ADMINISTRATION.SET_STATUS_USER, {id: id, status: status},\r\n            (user) => {\r\n            for (let i = 0; i < users.length; i++) {\r\n                if (users[i].id === user.id) {\r\n                    users[i] = user;\r\n                }\r\n            }\r\n            getUsers(users);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    changeArticleSave(id, versionId, status, article) {\r\n        let { getArticles, administration } = this.props;\r\n        let articles = administration.articles &&  administration.articles.list;\r\n        let newArticles = [];\r\n        if(status) {\r\n            fetchData(API.ADMINISTRATION.DECLINE_ARTICLE, {id: id, versionId: versionId}, () => {});\r\n            for (let i = 0; i < articles.length; i++) {\r\n                if (articles[i].versionId !== article.versionId) {\r\n                    newArticles.push(articles[i]);\r\n                }\r\n            }\r\n            getArticles(newArticles);\r\n        } else {\r\n            fetchData(API.ADMINISTRATION.CONFIRM_ARTICLE, {id: id, versionId: versionId},\r\n                (article) => {\r\n                    for (let i = 0; i < articles.length; i++) {\r\n                        if (articles[i].versionId === article.versionId) {\r\n                            articles[i] = article;\r\n                        }\r\n                    }\r\n                    getArticles(articles);\r\n\r\n                });\r\n        }\r\n    }\r\n\r\n    optionsMenu(type, status) {\r\n        let { settings } = this.props;\r\n        let Translate = TranslateInterface(settings.language || 'ru');\r\n        let options = [];\r\n\r\n        if(type === 'user') {\r\n            switch (status) {\r\n                case 'LOCKED': {\r\n                    options = [\r\n                        { key: 0, text: 'Default', value: 'default' },\r\n                        { key: 1, text: Translate.administration.menu.unlocked, value: 'ACTIVE' },\r\n                        { key: 2, text: Translate.administration.menu.deleted, value: 'DELETED' }\r\n                    ];\r\n                    break;\r\n                }\r\n                case 'ACTIVE': {\r\n                    options = [\r\n                        { key: 0, text: 'Default', value: 'default' },\r\n                        { key: 1, text: Translate.administration.menu.locked, value: 'LOCKED' },\r\n                        { key: 2, text: Translate.administration.menu.deleted, value: 'DELETED' }\r\n                    ];\r\n                    break;\r\n                }\r\n                default: break;\r\n            }\r\n\r\n        } else if (type === 'article') {\r\n            switch (status) {\r\n                case 'REVIEW': {\r\n                    options = [\r\n                        { key: 0, text: 'Default', value: 'default' },\r\n                        { key: 1, text: Translate.administration.buttons.confirm, value: 'PUBLISHED' },\r\n                        { key: 1, text: Translate.administration.buttons.reject, value: 'DECLINED' },\r\n                        { key: 2, text: Translate.administration.menu.deleted, value: 'DELETED' }\r\n                    ];\r\n                    break;\r\n                }\r\n                case 'PUBLISHED': {\r\n                    options = [\r\n                        { key: 0, text: 'Default', value: 'default' },\r\n                        { key: 1,  text: Translate.administration.buttons.reject, value: 'DECLINED' },\r\n                        { key: 2, text: Translate.administration.menu.deleted, value: 'DELETED' }\r\n                    ];\r\n                    break;\r\n                }\r\n                default: break;\r\n            }\r\n        }\r\n\r\n        return options\r\n    }\r\n\r\n    onClickElement(path, typeInfo, status, id, isNewEvent, element) {\r\n        let { settings, getArticleInfo, getEventInfo, saveUserInfoCard } = this.props;\r\n        if(typeInfo === 'users') {\r\n            history.push(`/administration/${path}`);\r\n            this.setState({\r\n                pageInfo: 'user'\r\n            });\r\n            saveUserInfoCard(element);\r\n\r\n        } else if(typeInfo === 'articles') {\r\n            history.push(`/administration/${path}`);\r\n            fetchData(API.ARTICLE.GET_ARTICLE, {id: id, language: settings.language || 'RU', status: status}, getArticleInfo);\r\n            this.setState({\r\n                pageInfo: 'article'\r\n            })\r\n\r\n        } else if ('events') {\r\n            this.setState({\r\n                pageInfo: 'event',\r\n                isNewEvent: isNewEvent\r\n            });\r\n            getEventInfo(element)\r\n        }\r\n    }\r\n\r\n    closeInfoEvent() {\r\n        this.setState({\r\n            pageInfo: '',\r\n            isNewEvent: false\r\n        });\r\n        this.props.clearInfoEvent();\r\n    }\r\n\r\n    onSaveEvent() {\r\n        let { infoEvent, settings } = this.props;\r\n        let sendEvent = {\r\n            id: infoEvent.id || '',\r\n            caption: infoEvent.caption,\r\n            text: infoEvent.caption,\r\n            publishDate: infoEvent.publishDate,\r\n            language: settings.language || 'ru'\r\n        };\r\n        fetchData(API.ADMINISTRATION.SAVE_NEWS, sendEvent, this.newEventSaveStore);\r\n    }\r\n\r\n    newEventSaveStore(newEvent) {\r\n        let { administration, addNewEvent } = this.props;\r\n        let { isNewEvent } = this.state;\r\n        addNewEvent(administration.events.list, newEvent, isNewEvent);\r\n        this.closeInfoEvent();\r\n    }\r\n\r\n    functionList(type, obj) {\r\n        switch(type) {\r\n            case 'user': {\r\n                this.changeUserSave(obj.id, obj.status);\r\n                break;\r\n            }\r\n            case 'article': {\r\n                this.changeArticleSave(obj.id, obj.versionId, obj.status, obj.article);\r\n                break;\r\n            }\r\n            default: {\r\n                this.onClickElement(obj.path, obj.typeInfo, obj.status, obj.id, obj.isNewEvent, obj.element);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { settings, administration, switchMenuTab, subjects, clearInfoArticle, infoArticle, infoEvent,\r\n            onChangeEvents, userInfoCard, saveUserInfoCard } = this.props;\r\n        let Translate = TranslateInterface(settings.language || 'ru');\r\n        let data = administration[administration.tabLeftAdministration];\r\n        let countPagination = Math.ceil(data.total / data.size);\r\n        let { pageInfo, isNewEvent, activeNumber } = this.state;\r\n\r\n        let contentAdministration = '';\r\n        if(!pageInfo){\r\n            contentAdministration = (\r\n                <div>\r\n                    <Table\r\n                        className={administration.tabLeftAdministration}\r\n                        colums={Translate.administration.table[administration.tabLeftAdministration]}\r\n                        translate={Translate}\r\n                        optionsMenu={(type, status) => this.optionsMenu(type, status)}\r\n                        typeTable={administration.tabLeftAdministration}\r\n                        constants={{subjects: subjects && subjects.data && Object.values(subjects.data)}}\r\n                        functionList={this.functionList}\r\n                        data={data.list || []}\r\n                    />\r\n                    {data.total && data.size && data.total > data.size &&\r\n                        <Pagination\r\n                            defaultActivePage={1}\r\n                            ellipsisItem={{ content: <Icon name='ellipsis horizontal' />, icon: true }}\r\n                            firstItem={{ content: <Icon name='angle double left' />, icon: true }}\r\n                            lastItem={{ content: <Icon name='angle double right' />, icon: true }}\r\n                            prevItem={{ content: <Icon name='angle left' />, icon: true }}\r\n                            nextItem={{ content: <Icon name='angle right' />, icon: true }}\r\n                            totalPages={countPagination}\r\n                            onChange={(activeNumber) => {\r\n                                this.setState({\r\n                                    activeNumber: activeNumber\r\n                                });\r\n                                let { administration } = this.props;\r\n                                this.getData(administration.tabLeftAdministration, activeNumber);\r\n                            }}\r\n                        /> || ''}\r\n                </div>\r\n            )\r\n        } else if(pageInfo === 'user') {\r\n            contentAdministration = (\r\n                <div className=\"administration_user_info\">\r\n                    <h2>\r\n                        <Icon\r\n                            className=\"userInfo_arrow_left\"\r\n                            name=\"arrow left\"\r\n                            onClick={() => {\r\n                                history.push(`/administration/users`);\r\n                                switchMenuTab('users');\r\n                                this.setState({pageInfo: false});\r\n                                saveUserInfoCard({})\r\n                            }}\r\n                        />{Translate.activities.communityMembers.userInfoCard.title}\r\n                    </h2>\r\n                    <div className=\"horizontal_divider\"></div>\r\n                    <UserInfoCard\r\n                        translate={Translate}\r\n                        userInfo={userInfoCard}\r\n                        saveUserInfoCard={saveUserInfoCard}\r\n                    />\r\n                </div>\r\n                )\r\n        } else if(pageInfo === 'article') {\r\n            contentAdministration =\r\n                infoArticle && !Object.keys(infoArticle).length ?\r\n                    <Segment className=\"main_root_loading\">\r\n                        <Dimmer active inverted>\r\n                            <Loader inverted/>\r\n                        </Dimmer>\r\n                    </Segment>\r\n                        :   <div>\r\n                                <PreviewArticle\r\n                                    infoArticle={infoArticle}\r\n                                    clearInfoArticle={clearInfoArticle}\r\n                                    articleMenu={{onClick: () => {}, optionsMenu: this.optionsMenu}}\r\n                                />\r\n                                <div className=\"administration_article_info_buttons\">\r\n                                    <Button\r\n                                        className=\"btn_accept btn_standart_style\"\r\n                                        onClick={() => {}}\r\n                                    >{Translate.administration.buttons.confirm}</Button>\r\n                                    <Button\r\n                                        onClick={() => {}}\r\n                                    >{Translate.administration.buttons.reject}</Button>\r\n                                </div>\r\n                          </div>\r\n        } else if(pageInfo === 'event') {\r\n            contentAdministration =\r\n                infoEvent && !Object.keys(infoEvent).length && !isNewEvent ?\r\n                    <Segment className=\"main_root_loading\">\r\n                        <Dimmer active inverted>\r\n                            <Loader inverted/>\r\n                        </Dimmer>\r\n                    </Segment>\r\n                    : <CreateEvent\r\n                        infoEvent={infoEvent}\r\n                        translate={Translate}\r\n                        isNewEvent={isNewEvent}\r\n                        onChangeEvents={onChangeEvents}\r\n                        onSaveEvent={this.onSaveEvent}\r\n                        close={this.closeInfoEvent}\r\n                    />\r\n        }\r\n        return (\r\n            <div id=\"administration_page\">\r\n                <ListMenu\r\n                    list={Translate.administration.tabs}\r\n                    onClick={(tabMenu) => {\r\n                        this.getData(tabMenu);\r\n                        history.push(`/administration/${tabMenu}`);\r\n                        switchMenuTab(tabMenu);\r\n                        this.setState({pageInfo: false});\r\n                        this.props.clearInfoEvent();\r\n                    }}\r\n                    active={administration.tabLeftAdministration}\r\n                    disabledCount={true}\r\n                />\r\n                <div className=\"administration_content\">\r\n                    {data.list && !Array.isArray(data.list) && !Array.isArray(data.list) ?\r\n                        <Segment className=\"main_root_loading\">\r\n                            <Dimmer active inverted>\r\n                                <Loader inverted/>\r\n                            </Dimmer>\r\n                        </Segment>\r\n                            :   contentAdministration}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default\r\nconnect(\r\n    state => ({\r\n        user: state.user,\r\n        infoArticle: state.infoArticle,\r\n        infoEvent: state.infoEvent,\r\n        userInfoCard: state.userInfoCard,\r\n        administration: state.administration,\r\n        settings: state.settings,\r\n        subjects: state.subjects\r\n    }),\r\n    dispatch => ({\r\n        switchMenuTab: (tabMenu) => {\r\n            dispatch({\r\n                type: \"SWITCH_ADMINISTRATION_MENU_TAB\",\r\n                payload: {\r\n                    tabMenu: tabMenu\r\n                }\r\n            })\r\n        },\r\n        getUsers: (users) => {\r\n            dispatch({\r\n                type: \"ADMINISTRATION_GET_USERS\",\r\n                payload: {\r\n                    users: users\r\n                }\r\n            })\r\n        },\r\n        getArticles: (articles) => {\r\n            dispatch({\r\n                type: \"ADMINISTRATION_GET_ARTICLES\",\r\n                payload: {\r\n                    articles: articles\r\n                }\r\n            })\r\n        },\r\n        getNews: (events) => {\r\n            dispatch({\r\n                type: \"ADMINISTRATION_GET_NEWS\",\r\n                payload: {\r\n                    events: events\r\n                }\r\n            })\r\n        },\r\n        changeUserSave: (user, users) => {\r\n            dispatch({\r\n                type: \"CHANGE_USER_SAVE_STATUS\",\r\n                payload: {\r\n                    users: users,\r\n                    user: user\r\n                }\r\n            })\r\n        },\r\n        changeArticleStatusSave: (article, articles) => {\r\n            dispatch({\r\n                type: \"CHANGE_ARTICLE_STATUS_SAVE\",\r\n                payload: {\r\n                    article: article,\r\n                    articles: articles\r\n                }\r\n            })\r\n        },\r\n        saveSubjects: (subjects) => {\r\n            dispatch({\r\n                type: \"SAVE_SUBJECTS\",\r\n                payload: {\r\n                    subjects: subjects,\r\n                }\r\n            })\r\n        },\r\n        getArticleInfo: (article) => {\r\n            dispatch({\r\n                type: \"GET_ARTICLE_INFO\",\r\n                payload: {\r\n                    article: article,\r\n                }\r\n            })\r\n        },\r\n        clearInfoArticle: () => {\r\n            dispatch({\r\n                type: \"CLEAR_INFO_ARTICLE\",\r\n                payload: {}\r\n            })\r\n        },\r\n        clearInfoEvent: () => {\r\n            dispatch({\r\n                type: \"CLEAR_INFO_EVENT\",\r\n                payload: {}\r\n            })\r\n        },\r\n        addNewEvent: (events, newEvent, isNewEvent) => {\r\n            dispatch({\r\n                type: \"SAVE_EVENT\",\r\n                payload: {\r\n                    newEvent: newEvent,\r\n                    events: events,\r\n                    isNewEvent: isNewEvent\r\n                }\r\n            })\r\n        },\r\n        getEventInfo: (event) => {\r\n            dispatch({\r\n                type: \"GET_EVENT_INFO\",\r\n                payload: {event: event}\r\n            })\r\n        },\r\n        onChangeEvents: (value, field) => {\r\n            dispatch({\r\n                type: \"ONCHANGE_EVENT\",\r\n                payload: {\r\n                    field: field,\r\n                    value: value\r\n                }\r\n            })\r\n        },\r\n        saveUserInfoCard: (userInfo) => {\r\n            dispatch({\r\n                type: \"SAVE_USER_INFO_CARD\",\r\n                payload: {\r\n                    userInfo: userInfo,\r\n                }\r\n            })\r\n        }\r\n    })\r\n)\r\n(Administration);","/*react - redux*/\r\nimport React from 'react';\r\nimport {Route, Switch, BrowserRouter} from \"react-router-dom\";\r\n/*custom components*/\r\nimport MainPageRoot from \"./panels/mainRoot/MainRoot\"\r\nimport AboutPage from \"./panels/about/About\"\r\nimport LibraryPage from \"./panels/library/Library\"\r\nimport ActivitiesPage from \"./panels/activities/Activities\"\r\nimport Setup from \"./panels/setup/Setup\"\r\nimport InfoArticlePage from \"./panels/infoArticle/InfoArticle\"\r\nimport ArticlePublishing from \"./panels/articlePublishing/ArticlePublishing\"\r\nimport MyPublications from \"./panels/myPublications/MyPublications\"\r\nimport Administration from \"./panels/administration/Administration\"\r\n\r\nconst WorkSpaceRouting = () =>\r\n    (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={MainPageRoot}/>\r\n            <Route exact path=\"/library\" component={LibraryPage}/>\r\n            <Route path=\"/about\" component={AboutPage}/>\r\n            <Route path=\"/activities\" component={ActivitiesPage}/>\r\n            <Route path=\"/setup\" component={Setup}/>\r\n            <Route path=\"/article_publishing\" component={ArticlePublishing}/>\r\n            <Route path=\"/my_publications\" component={MyPublications}/>\r\n            <Route path=\"/administration\" component={Administration}/>\r\n            <Route exact path=\"/library/:id/\"\r\n                   render={(history) => <InfoArticlePage id={history.match.params.id}/>}/>\r\n        </Switch>\r\n\r\n    );\r\n\r\nexport default WorkSpaceRouting;","/**\r\n * Created by smalkov on 04/09/2018.\r\n */\r\nimport React from \"react\";\r\n\r\n/*Custom components*/\r\nimport Header from \"../../../components/header/Header\";\r\nimport Footer from \"../../../components/footer/Footer\";\r\nimport WorkSpaceRouting from \"../../../components/workspace/WorkSpaceRouting\";\r\n/*css*/\r\nimport \"./main.css\";\r\nimport \"../../../styles/mediaScreen(960-1920).css\";\r\nimport \"../../../styles/mobileScreen.css\";\r\n\r\n/**\r\n * Рендеринг\r\n */\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <div className=\"App\"\r\n             onScroll = { () => {\r\n                 let app = document.getElementsByClassName('App')[0];\r\n                 if (app) {\r\n                     let scrollTop = app.scrollTop;\r\n                     let head = document.getElementsByClassName('menu-navigation-search')[0];\r\n                     if(head && scrollTop > 113) {\r\n                         head.classList.add('header_fixed');\r\n                         head.style.borderBottom = \"border: 1px solid rgba(0, 0, 0, 0.1);\";\r\n                     } else{\r\n                         head.classList.remove('header_fixed');\r\n                         head.style.borderBottom = \"\";\r\n                     }\r\n                 }\r\n             }}>\r\n            <div id=\"main-container\">\r\n                <Header/>\r\n                <div id=\"bgw\" style={{background: 'url(/images/bgw.png) no-repeat center', height: '100vh',\r\n                    width: 'calc(100% - 10px)', position: 'absolute', backgroundSize: 'cover!important'}}>\r\n                </div>\r\n                <div id=\"workspace\">\r\n                    <WorkSpaceRouting/>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Main;\r\n","import React, {Component} from 'react';\r\nimport { Router } from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n/*Custom components*/\r\nimport Main from \"./components/scenes/main/Main\"\r\nimport history from \"./history\";\r\n/*css*/\r\nimport './App.css';\r\n\r\nconst App = ({store}) => {\r\n        return (\r\n            <Provider store={store}>\r\n                <Router history={history}>\r\n                    <Main/>\r\n                </Router>\r\n            </Provider>\r\n        )\r\n};\r\nexport default(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport App from './App';\r\nimport ReduxStore from './redux/ReduxStore';\r\n\r\nReactDOM.render(\r\n    <App store={ReduxStore}/>\r\n    , document.getElementById(\"root\"));\r\n"],"sourceRoot":""}